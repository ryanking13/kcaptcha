/*! For license information please see ../LICENSES */
(window.webpackJsonp=window.webpackJsonp||[]).push([[2],Array(174).concat([function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return l})),n.d(e,"d",(function(){return c})),n.d(e,"e",(function(){return h})),n.d(e,"f",(function(){return d})),n.d(e,"g",(function(){return f})),n.d(e,"h",(function(){return m})),n.d(e,"i",(function(){return y})),n.d(e,"j",(function(){return x})),n.d(e,"k",(function(){return v})),n.d(e,"l",(function(){return w})),n.d(e,"n",(function(){return O})),n.d(e,"m",(function(){return S})),n.d(e,"o",(function(){return C})),n.d(e,"r",(function(){return k})),n.d(e,"p",(function(){return N})),n.d(e,"q",(function(){return I})),n.d(e,"s",(function(){return E})),n.d(e,"t",(function(){return T})),n.d(e,"u",(function(){return A})),n.d(e,"v",(function(){return R})),n.d(e,"w",(function(){return $})),n.d(e,"x",(function(){return F})),n.d(e,"y",(function(){return j})),n.d(e,"z",(function(){return D})),n.d(e,"A",(function(){return _})),n.d(e,"B",(function(){return z})),n.d(e,"C",(function(){return M})),n.d(e,"D",(function(){return L})),n.d(e,"E",(function(){return B})),n.d(e,"F",(function(){return P})),n.d(e,"G",(function(){return W})),n.d(e,"H",(function(){return U})),n.d(e,"J",(function(){return V})),n.d(e,"I",(function(){return G})),n.d(e,"K",(function(){return H})),n.d(e,"L",(function(){return K})),n.d(e,"M",(function(){return J})),n.d(e,"N",(function(){return X})),n.d(e,"O",(function(){return Y})),n.d(e,"P",(function(){return Q})),n.d(e,"R",(function(){return Z})),n.d(e,"Q",(function(){return tt})),n.d(e,"S",(function(){return et})),n.d(e,"T",(function(){return nt})),n.d(e,"U",(function(){return st})),n.d(e,"W",(function(){return at})),n.d(e,"V",(function(){return it})),n.d(e,"X",(function(){return ot})),n.d(e,"Y",(function(){return ut})),n.d(e,"Z",(function(){return lt})),n.d(e,"ab",(function(){return ct})),n.d(e,"bb",(function(){return ht})),n.d(e,"cb",(function(){return pt})),n.d(e,"db",(function(){return ft})),n.d(e,"fb",(function(){return mt})),n.d(e,"jb",(function(){return gt})),n.d(e,"ib",(function(){return bt})),n.d(e,"kb",(function(){return yt})),n.d(e,"lb",(function(){return xt})),n.d(e,"nb",(function(){return vt})),n.d(e,"mb",(function(){return wt})),n.d(e,"ob",(function(){return Ot})),n.d(e,"pb",(function(){return St})),n.d(e,"qb",(function(){return Ct})),n.d(e,"rb",(function(){return kt})),n.d(e,"ub",(function(){return Nt})),n.d(e,"vb",(function(){return It})),n.d(e,"wb",(function(){return Et})),n.d(e,"xb",(function(){return Tt})),n.d(e,"yb",(function(){return At})),n.d(e,"Ab",(function(){return Rt})),n.d(e,"Bb",(function(){return $t})),n.d(e,"Cb",(function(){return Ft})),n.d(e,"zb",(function(){return jt})),n.d(e,"sb",(function(){return Dt})),n.d(e,"tb",(function(){return _t})),n.d(e,"Db",(function(){return zt})),n.d(e,"Jb",(function(){return Mt})),n.d(e,"Eb",(function(){return Lt})),n.d(e,"Hb",(function(){return Bt})),n.d(e,"Fb",(function(){return Pt})),n.d(e,"Gb",(function(){return Wt})),n.d(e,"Ib",(function(){return Ut})),n.d(e,"Kb",(function(){return Vt})),n.d(e,"Lb",(function(){return Gt})),n.d(e,"Mb",(function(){return Ht})),n.d(e,"Nb",(function(){return qt})),n.d(e,"Ob",(function(){return Kt})),n.d(e,"Sb",(function(){return Jt})),n.d(e,"Pb",(function(){return Xt})),n.d(e,"Qb",(function(){return Yt})),n.d(e,"Rb",(function(){return Qt})),n.d(e,"Ub",(function(){return Zt})),n.d(e,"Tb",(function(){return te})),n.d(e,"Vb",(function(){return ee})),n.d(e,"Wb",(function(){return ne})),n.d(e,"Xb",(function(){return re})),n.d(e,"Yb",(function(){return se})),n.d(e,"Zb",(function(){return ae})),n.d(e,"ac",(function(){return ie})),n.d(e,"bc",(function(){return oe})),n.d(e,"cc",(function(){return ue})),n.d(e,"ec",(function(){return le})),n.d(e,"hc",(function(){return ce})),n.d(e,"ic",(function(){return he})),n.d(e,"fc",(function(){return de})),n.d(e,"gc",(function(){return pe})),n.d(e,"dc",(function(){return fe})),n.d(e,"jc",(function(){return me})),n.d(e,"lc",(function(){return ge})),n.d(e,"mc",(function(){return be})),n.d(e,"nc",(function(){return ye})),n.d(e,"oc",(function(){return xe})),n.d(e,"pc",(function(){return ve})),n.d(e,"uc",(function(){return we})),n.d(e,"sc",(function(){return Oe})),n.d(e,"tc",(function(){return Se})),n.d(e,"rc",(function(){return Ce})),n.d(e,"qc",(function(){return ke})),n.d(e,"wc",(function(){return Ne})),n.d(e,"Ac",(function(){return Ie})),n.d(e,"Gc",(function(){return Ee})),n.d(e,"xc",(function(){return Te})),n.d(e,"zc",(function(){return Ae})),n.d(e,"vc",(function(){return Re})),n.d(e,"Cc",(function(){return $e})),n.d(e,"Bc",(function(){return Fe})),n.d(e,"Fc",(function(){return je})),n.d(e,"yc",(function(){return De})),n.d(e,"Ec",(function(){return _e})),n.d(e,"Hc",(function(){return ze})),n.d(e,"Ic",(function(){return Me})),n.d(e,"Jc",(function(){return Le})),n.d(e,"Kc",(function(){return Be})),n.d(e,"Lc",(function(){return Pe})),n.d(e,"Mc",(function(){return We})),n.d(e,"Nc",(function(){return Ue})),n.d(e,"Oc",(function(){return Ve})),n.d(e,"Dc",(function(){return Ge})),n.d(e,"eb",(function(){return He})),n.d(e,"kc",(function(){return qe})),n.d(e,"Pc",(function(){return Ke})),n.d(e,"gb",(function(){return Je})),n.d(e,"hb",(function(){return Xe}));const r="Abs",o="Acos",l="Acosh",c="Add",h="AddN",d="All",f="Any",m="ArgMax",y="ArgMin",x="Asin",v="Asinh",w="Atan",O="Atanh",S="Atan2",C="AvgPool",k="AvgPoolBackprop",N="AvgPool3D",I="AvgPool3DBackprop",E="BatchMatMul",T="BatchToSpaceND",A="BroadcastTo",R="Cast",$="Ceil",F="ClipByValue",j="Complex",D="Concat",_="Conv2D",z="Conv2DBackpropFilter",M="Conv2DBackpropInput",L="Conv3D",B="Conv3DBackpropFilterV2",P="Conv3DBackpropInputV2",W="Cos",U="Cosh",V="Cumsum",G="CropAndResize",H="DepthToSpace",K="DepthwiseConv2dNative",J="DepthwiseConv2dNativeBackpropFilter",X="DepthwiseConv2dNativeBackpropInput",Y="Diag",Q="Dilation2D",Z="Dilation2DBackpropInput",tt="Dilation2DBackpropFilter",et="Div",nt="Elu",st="EluGrad",at="Erf",it="Equal",ot="Exp",ut="Expm1",lt="FFT",ct="Fill",ht="FlipLeftRight",pt="Floor",ft="FloorDiv",mt="FusedBatchNorm",gt="GatherV2",bt="GatherNd",yt="Greater",xt="GreaterEqual",vt="Identity",wt="IFFT",Ot="Imag",St="IsFinite",Ct="IsInf",kt="IsNan",Nt="Less",It="LessEqual",Et="LinSpace",Tt="Log",At="Log1p",Rt="LogicalAnd",$t="LogicalNot",Ft="LogicalOr",jt="LogSoftmax",Dt="LRN",_t="LRNBackprop",zt="Max",Mt="Maximum",Lt="MaxPool",Bt="MaxPoolBackprop",Pt="MaxPool3D",Wt="MaxPool3DBackprop",Ut="MaxPoolWithArgmax",Vt="Min",Gt="Minimum",Ht="Mod",qt="Multiply",Kt="Negate",Jt="NotEqual",Xt="NonMaxSuppressionV3",Yt="NonMaxSuppressionV4",Qt="NonMaxSuppressionV5",Zt="OnesLike",te="OneHot",ee="PadV2",ne="Pow",re="Prelu",se="Prod",ae="Range",ie="Real",oe="Reciprocal",ue="Relu",le="Reshape",ce="ResizeNearestNeighbor",he="ResizeNearestNeighborGrad",de="ResizeBilinear",pe="ResizeBilinearGrad",fe="Relu6",me="Reverse",ge="Round",be="Rsqrt",ye="ScatterNd",xe="SelectV2",ve="Selu",we="Slice",Oe="Sin",Se="Sinh",Ce="Sign",ke="Sigmoid",Ne="Softplus",Ie="Sqrt",Ee="Sum",Te="SpaceToBatchND",Ae="SplitV",Re="Softmax",$e="SquaredDifference",Fe="Square",je="Sub",De="SparseToDense",_e="StridedSlice",ze="Tan",Me="Tanh",Le="Tile",Be="TopK",Pe="Transpose",We="Unpack",Ue="UnsortedSegmentSum",Ve="ZerosLike",Ge="Step",He="FromPixels",qe="RotateWithOffset",Ke="_FusedMatMul",Je="FusedConv2D",Xe="FusedDepthwiseConv2D"},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(178);function o(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const o=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));const l=(...t)=>{r.a.startScope(n);try{const e=o(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(e),e}catch(t){throw r.a.endScope(null),t}};return Object.defineProperty(l,"name",{value:n,configurable:!0}),l}},function(t,e,n){"use strict";n.d(e,"c",(function(){return h})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return m}));var r=n(178),o=n(183),l=n(179),c=n(180);function h(t,e){let n=t;if(Object(c.isTypedArray)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(c.isTypedArray)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(o.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!Object(c.isTypedArray)(e))return void Object(c.assert)(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);Object(c.assert)(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Object(c.assert)(e.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${e.length} elements`);const o=n.slice(1);for(let i=0;i<e.length;++i)t(e[i],o,r.concat(i))}(t,r,[]),r}function d(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function f(t,e,n,o="numeric"){if(t instanceof l.a)return d(o,t.dtype,e,n),t;let f=Object(c.inferDtype)(t);if("string"!==f&&["bool","int32","float32"].indexOf(o)>=0&&(f=o),d(o,f,e,n),null==t||!Object(c.isTypedArray)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const m=h(t,f);Object(c.isTypedArray)(t)||Array.isArray(t)||(t=[t]);const y="string"!==f?Object(c.toTypedArray)(t,f):Object(c.flatten)(t,[],!0);return r.a.makeTensor(y,m,f)}function m(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,i)=>f(t,`${e}[${i}]`,n),r)}},function(t,e,n){"use strict";n.d(e,"n",(function(){return _i})),n.d(e,"r",(function(){return mt.a})),n.d(e,"s",(function(){return mt.b})),n.d(e,"td",(function(){return zi.a})),n.d(e,"Id",(function(){return zi.b})),n.d(e,"u",(function(){return k})),n.d(e,"v",(function(){return N})),n.d(e,"w",(function(){return I})),n.d(e,"x",(function(){return T})),n.d(e,"y",(function(){return R})),n.d(e,"z",(function(){return W})),n.d(e,"A",(function(){return U})),n.d(e,"B",(function(){return V})),n.d(e,"C",(function(){return G})),n.d(e,"D",(function(){return H})),n.d(e,"E",(function(){return K})),n.d(e,"F",(function(){return J})),n.d(e,"G",(function(){return X})),n.d(e,"H",(function(){return Y})),n.d(e,"I",(function(){return ft})),n.d(e,"J",(function(){return kt})),n.d(e,"Q",(function(){return Xt})),n.d(e,"M",(function(){return Qt})),n.d(e,"N",(function(){return Zt})),n.d(e,"O",(function(){return te})),n.d(e,"P",(function(){return ee})),n.d(e,"R",(function(){return re})),n.d(e,"T",(function(){return se})),n.d(e,"U",(function(){return Q})),n.d(e,"V",(function(){return ae})),n.d(e,"W",(function(){return ie})),n.d(e,"X",(function(){return ne})),n.d(e,"Y",(function(){return oe.a})),n.d(e,"Z",(function(){return Tt})),n.d(e,"ab",(function(){return ue})),n.d(e,"bb",(function(){return le})),n.d(e,"cb",(function(){return ce})),n.d(e,"db",(function(){return he})),n.d(e,"eb",(function(){return pe})),n.d(e,"fb",(function(){return de})),n.d(e,"gb",(function(){return me})),n.d(e,"hb",(function(){return ge})),n.d(e,"ib",(function(){return xe})),n.d(e,"jb",(function(){return ve})),n.d(e,"kb",(function(){return we})),n.d(e,"lb",(function(){return Oe})),n.d(e,"mb",(function(){return Se})),n.d(e,"ob",(function(){return ke})),n.d(e,"qb",(function(){return div})),n.d(e,"rb",(function(){return Fe})),n.d(e,"tb",(function(){return De})),n.d(e,"wb",(function(){return Ae})),n.d(e,"xb",(function(){return _e})),n.d(e,"yb",(function(){return ze})),n.d(e,"zb",(function(){return Me})),n.d(e,"Ab",(function(){return Le})),n.d(e,"Bb",(function(){return Pe})),n.d(e,"Cb",(function(){return We})),n.d(e,"Db",(function(){return Ue})),n.d(e,"Eb",(function(){return Ve})),n.d(e,"Fb",(function(){return Ne})),n.d(e,"Hb",(function(){return Xe})),n.d(e,"Jb",(function(){return Ye})),n.d(e,"Kb",(function(){return Qe})),n.d(e,"Lb",(function(){return Ze})),n.d(e,"Mb",(function(){return tn})),n.d(e,"Pb",(function(){return an})),n.d(e,"Sb",(function(){return hn})),n.d(e,"Tb",(function(){return dn})),n.d(e,"Ub",(function(){return pn})),n.d(e,"Wb",(function(){return fn})),n.d(e,"Xb",(function(){return mn})),n.d(e,"Yb",(function(){return gn})),n.d(e,"Zb",(function(){return bn})),n.d(e,"ac",(function(){return kn})),n.d(e,"bc",(function(){return In})),n.d(e,"cc",(function(){return En})),n.d(e,"dc",(function(){return Tn})),n.d(e,"ec",(function(){return At})),n.d(e,"fc",(function(){return Sn})),n.d(e,"gc",(function(){return Rn})),n.d(e,"hc",(function(){return $n})),n.d(e,"ic",(function(){return Fn})),n.d(e,"jc",(function(){return cn})),n.d(e,"kc",(function(){return _n})),n.d(e,"mc",(function(){return zn})),n.d(e,"nc",(function(){return Mn})),n.d(e,"oc",(function(){return Ln})),n.d(e,"pc",(function(){return Pn})),n.d(e,"qc",(function(){return Rt})),n.d(e,"rc",(function(){return Un})),n.d(e,"sc",(function(){return vn})),n.d(e,"uc",(function(){return Vn})),n.d(e,"vc",(function(){return Gn})),n.d(e,"wc",(function(){return Dn})),n.d(e,"xc",(function(){return Hn})),n.d(e,"yc",(function(){return Kn})),n.d(e,"zc",(function(){return nr})),n.d(e,"Ac",(function(){return rr})),n.d(e,"Bc",(function(){return ar})),n.d(e,"Cc",(function(){return pr})),n.d(e,"Dc",(function(){return fr})),n.d(e,"Ec",(function(){return gr})),n.d(e,"Fc",(function(){return en})),n.d(e,"Gc",(function(){return yr})),n.d(e,"Jc",(function(){return xr})),n.d(e,"Kc",(function(){return B})),n.d(e,"Lc",(function(){return nn})),n.d(e,"Mc",(function(){return Ir})),n.d(e,"Nc",(function(){return Er})),n.d(e,"Oc",(function(){return Tr})),n.d(e,"Pc",(function(){return sn})),n.d(e,"Rc",(function(){return Ar})),n.d(e,"Sc",(function(){return Rr})),n.d(e,"Vc",(function(){return $r})),n.d(e,"Wc",(function(){return $t})),n.d(e,"Xc",(function(){return Fr})),n.d(e,"Yc",(function(){return jr})),n.d(e,"Zc",(function(){return Dr})),n.d(e,"ad",(function(){return qt})),n.d(e,"bd",(function(){return _r})),n.d(e,"cd",(function(){return zr})),n.d(e,"dd",(function(){return Mr})),n.d(e,"ed",(function(){return Lr})),n.d(e,"gd",(function(){return Br})),n.d(e,"hd",(function(){return wn})),n.d(e,"id",(function(){return Zn})),n.d(e,"kd",(function(){return Nr})),n.d(e,"ld",(function(){return Pr})),n.d(e,"md",(function(){return Bn})),n.d(e,"nd",(function(){return Wr})),n.d(e,"od",(function(){return Ur})),n.d(e,"pd",(function(){return Vr})),n.d(e,"qd",(function(){return Hr})),n.d(e,"rd",(function(){return sub})),n.d(e,"sd",(function(){return Cn})),n.d(e,"ud",(function(){return qr})),n.d(e,"vd",(function(){return Kt})),n.d(e,"wd",(function(){return Et.a})),n.d(e,"xd",(function(){return mr})),n.d(e,"yd",(function(){return Kr})),n.d(e,"zd",(function(){return Xr})),n.d(e,"Cd",(function(){return Be})),n.d(e,"Dd",(function(){return Zr})),n.d(e,"Gd",(function(){return ts})),n.d(e,"Hd",(function(){return ns})),n.d(e,"Kd",(function(){return rs})),n.d(e,"Nd",(function(){return Re})),n.d(e,"Od",(function(){return as})),n.d(e,"Pd",(function(){return jn})),n.d(e,"Qd",(function(){return $e})),n.d(e,"Fd",(function(){return P})),n.d(e,"Qc",(function(){return Is})),n.d(e,"jd",(function(){return Es})),n.d(e,"Ib",(function(){return Ts})),n.d(e,"sb",(function(){return As})),n.d(e,"Nb",(function(){return Ra})),n.d(e,"Vb",(function(){return $a})),n.d(e,"Gb",(function(){return l})),n.d(e,"Ed",(function(){return Hi})),n.d(e,"ub",(function(){return bt})),n.d(e,"lc",(function(){return yt})),n.d(e,"Bd",(function(){return xt})),n.d(e,"pb",(function(){return vt})),n.d(e,"Qb",(function(){return wt})),n.d(e,"Uc",(function(){return Ot})),n.d(e,"Hc",(function(){return St})),n.d(e,"K",(function(){return Ct})),n.d(e,"Ic",(function(){return Ei.e})),n.d(e,"Ld",(function(){return yn})),n.d(e,"vb",(function(){return v.b})),n.d(e,"Md",(function(){return Di})),n.d(e,"tc",(function(){return qi.a})),n.d(e,"S",(function(){return d})),n.d(e,"Ob",(function(){return h})),n.d(e,"Tc",(function(){return f})),n.d(e,"Jd",(function(){return A})),n.d(e,"L",(function(){return m})),n.d(e,"Ad",(function(){return E})),n.d(e,"fd",(function(){return r})),n.d(e,"nb",(function(){return So})),n.d(e,"Rb",(function(){return y})),n.d(e,"h",(function(){return Eo})),n.d(e,"a",(function(){return Io})),n.d(e,"b",(function(){return O.P})),n.d(e,"d",(function(){return O.R})),n.d(e,"c",(function(){return O.Q})),n.d(e,"e",(function(){return O.S})),n.d(e,"f",(function(){return O.bb})),n.d(e,"i",(function(){return O.Db})),n.d(e,"j",(function(){return O.Ib})),n.d(e,"k",(function(){return O.Pb})),n.d(e,"l",(function(){return O.Qb})),n.d(e,"m",(function(){return O.Rb})),n.d(e,"q",(function(){return O.Cc})),n.d(e,"p",(function(){return O.Bc})),n.d(e,"t",(function(){return O.Lc})),n.d(e,"g",(function(){return O.eb})),n.d(e,"o",(function(){return O.kc}));var r={};n.r(r),n.d(r,"assertParamsValid",(function(){return Ft})),n.d(r,"maskToAxes",(function(){return jt})),n.d(r,"computeOutShape",(function(){return Dt})),n.d(r,"stridesWithElidedDims",(function(){return _t})),n.d(r,"startIndicesWithElidedDims",(function(){return Lt})),n.d(r,"stopIndicesWithElidedDims",(function(){return Bt})),n.d(r,"stridesForAxis",(function(){return Pt})),n.d(r,"startForAxis",(function(){return Wt})),n.d(r,"stopForAxis",(function(){return Ut})),n.d(r,"isSliceContinous",(function(){return Vt})),n.d(r,"computeFlatOffset",(function(){return Gt})),n.d(r,"parseSliceParams",(function(){return Ht}));var o={};n.r(o),n.d(o,"segOpComputeOptimalWindowSize",(function(){return qe})),n.d(o,"computeOutShape",(function(){return Ke})),n.d(o,"collectGatherOpShapeInfo",(function(){return Je}));var l={};n.r(l),n.d(l,"conv2d",(function(){return Ls})),n.d(l,"depthwiseConv2d",(function(){return Ws})),n.d(l,"matMul",(function(){return Us}));var c={};n.r(c),n.d(c,"abs",(function(){return k})),n.d(c,"acos",(function(){return N})),n.d(c,"acosh",(function(){return I})),n.d(c,"add",(function(){return T})),n.d(c,"addN",(function(){return R})),n.d(c,"all",(function(){return W})),n.d(c,"any",(function(){return U})),n.d(c,"argMax",(function(){return V})),n.d(c,"argMin",(function(){return G})),n.d(c,"asin",(function(){return H})),n.d(c,"asinh",(function(){return K})),n.d(c,"atan",(function(){return J})),n.d(c,"atan2",(function(){return X})),n.d(c,"atanh",(function(){return Y})),n.d(c,"avgPool",(function(){return ft})),n.d(c,"avgPool3d",(function(){return kt})),n.d(c,"basicLSTMCell",(function(){return Jt})),n.d(c,"batchToSpaceND",(function(){return Xt})),n.d(c,"batchNorm",(function(){return Qt})),n.d(c,"batchNorm2d",(function(){return Zt})),n.d(c,"batchNorm3d",(function(){return te})),n.d(c,"batchNorm4d",(function(){return ee})),n.d(c,"broadcastTo",(function(){return re})),n.d(c,"buffer",(function(){return se})),n.d(c,"cast",(function(){return Q})),n.d(c,"ceil",(function(){return ae})),n.d(c,"clipByValue",(function(){return ie})),n.d(c,"clone",(function(){return ne})),n.d(c,"complex",(function(){return oe.a})),n.d(c,"concat",(function(){return Tt})),n.d(c,"concat1d",(function(){return ue})),n.d(c,"concat2d",(function(){return le})),n.d(c,"concat3d",(function(){return ce})),n.d(c,"concat4d",(function(){return he})),n.d(c,"conv1d",(function(){return pe})),n.d(c,"conv2d",(function(){return de})),n.d(c,"conv2dTranspose",(function(){return me})),n.d(c,"conv3d",(function(){return ge})),n.d(c,"conv3dTranspose",(function(){return ye})),n.d(c,"cos",(function(){return xe})),n.d(c,"cosh",(function(){return ve})),n.d(c,"cumsum",(function(){return we})),n.d(c,"depthToSpace",(function(){return Oe})),n.d(c,"depthwiseConv2d",(function(){return Se})),n.d(c,"diag",(function(){return Ce})),n.d(c,"dilation2d",(function(){return ke})),n.d(c,"div",(function(){return div})),n.d(c,"divNoNan",(function(){return Fe})),n.d(c,"dot",(function(){return je})),n.d(c,"elu",(function(){return De})),n.d(c,"equal",(function(){return Ae})),n.d(c,"erf",(function(){return _e})),n.d(c,"exp",(function(){return ze})),n.d(c,"expandDims",(function(){return Me})),n.d(c,"expm1",(function(){return Le})),n.d(c,"eye",(function(){return Pe})),n.d(c,"fft",(function(){return We})),n.d(c,"fill",(function(){return Ue})),n.d(c,"floor",(function(){return Ve})),n.d(c,"floorDiv",(function(){return Ne})),n.d(c,"gather",(function(){return Xe})),n.d(c,"greater",(function(){return Ye})),n.d(c,"greaterEqual",(function(){return Qe})),n.d(c,"ifft",(function(){return Ze})),n.d(c,"imag",(function(){return tn})),n.d(c,"irfft",(function(){return an})),n.d(c,"isFinite",(function(){return on})),n.d(c,"isInf",(function(){return un})),n.d(c,"isNaN",(function(){return ln})),n.d(c,"leakyRelu",(function(){return hn})),n.d(c,"less",(function(){return dn})),n.d(c,"lessEqual",(function(){return pn})),n.d(c,"linspace",(function(){return fn})),n.d(c,"localResponseNormalization",(function(){return mn})),n.d(c,"log",(function(){return gn})),n.d(c,"log1p",(function(){return bn})),n.d(c,"logSigmoid",(function(){return On})),n.d(c,"logSoftmax",(function(){return kn})),n.d(c,"logSumExp",(function(){return Nn})),n.d(c,"logicalAnd",(function(){return In})),n.d(c,"logicalNot",(function(){return En})),n.d(c,"logicalOr",(function(){return Tn})),n.d(c,"logicalXor",(function(){return An})),n.d(c,"matMul",(function(){return At})),n.d(c,"max",(function(){return Sn})),n.d(c,"maxPool",(function(){return Rn})),n.d(c,"maxPool3d",(function(){return $n})),n.d(c,"maxPoolWithArgmax",(function(){return Fn})),n.d(c,"maximum",(function(){return cn})),n.d(c,"mean",(function(){return _n})),n.d(c,"min",(function(){return zn})),n.d(c,"minimum",(function(){return Mn})),n.d(c,"mod",(function(){return Ln})),n.d(c,"moments",(function(){return Pn})),n.d(c,"mul",(function(){return Rt})),n.d(c,"multiRNNCell",(function(){return Wn})),n.d(c,"multinomial",(function(){return Un})),n.d(c,"neg",(function(){return vn})),n.d(c,"notEqual",(function(){return Vn})),n.d(c,"oneHot",(function(){return Gn})),n.d(c,"ones",(function(){return Dn})),n.d(c,"onesLike",(function(){return Hn})),n.d(c,"outerProduct",(function(){return qn})),n.d(c,"pad",(function(){return Kn})),n.d(c,"pad1d",(function(){return Jn})),n.d(c,"pad2d",(function(){return Xn})),n.d(c,"pad3d",(function(){return Yn})),n.d(c,"pad4d",(function(){return Qn})),n.d(c,"pool",(function(){return er})),n.d(c,"pow",(function(){return nr})),n.d(c,"prelu",(function(){return rr})),n.d(c,"print",(function(){return sr})),n.d(c,"prod",(function(){return ar})),n.d(c,"rand",(function(){return ir})),n.d(c,"randomGamma",(function(){return dr})),n.d(c,"randomNormal",(function(){return pr})),n.d(c,"randomUniform",(function(){return fr})),n.d(c,"range",(function(){return gr})),n.d(c,"real",(function(){return en})),n.d(c,"reciprocal",(function(){return yr})),n.d(c,"relu",(function(){return xr})),n.d(c,"relu6",(function(){return vr})),n.d(c,"reshape",(function(){return B})),n.d(c,"reverse",(function(){return nn})),n.d(c,"reverse1d",(function(){return wr})),n.d(c,"reverse2d",(function(){return Or})),n.d(c,"reverse3d",(function(){return Sr})),n.d(c,"reverse4d",(function(){return Cr})),n.d(c,"rfft",(function(){return Ir})),n.d(c,"round",(function(){return Er})),n.d(c,"rsqrt",(function(){return Tr})),n.d(c,"scalar",(function(){return sn})),n.d(c,"selu",(function(){return Ar})),n.d(c,"separableConv2d",(function(){return Rr})),n.d(c,"setdiff1dAsync",(function(){return $r})),n.d(c,"sigmoid",(function(){return $t})),n.d(c,"sign",(function(){return Fr})),n.d(c,"sin",(function(){return jr})),n.d(c,"sinh",(function(){return Dr})),n.d(c,"slice",(function(){return qt})),n.d(c,"slice1d",(function(){return _r})),n.d(c,"slice2d",(function(){return zr})),n.d(c,"slice3d",(function(){return Mr})),n.d(c,"slice4d",(function(){return Lr})),n.d(c,"softmax",(function(){return Br})),n.d(c,"softplus",(function(){return wn})),n.d(c,"spaceToBatchND",(function(){return Zn})),n.d(c,"split",(function(){return Nr})),n.d(c,"sqrt",(function(){return Pr})),n.d(c,"square",(function(){return Bn})),n.d(c,"squaredDifference",(function(){return Wr})),n.d(c,"squeeze",(function(){return Ur})),n.d(c,"stack",(function(){return Vr})),n.d(c,"step",(function(){return Gr})),n.d(c,"stridedSlice",(function(){return Hr})),n.d(c,"sub",(function(){return sub})),n.d(c,"sum",(function(){return Cn})),n.d(c,"tan",(function(){return qr})),n.d(c,"tanh",(function(){return Kt})),n.d(c,"tensor",(function(){return Et.a})),n.d(c,"tensor1d",(function(){return mr})),n.d(c,"tensor2d",(function(){return Kr})),n.d(c,"tensor3d",(function(){return Jr})),n.d(c,"tensor4d",(function(){return Xr})),n.d(c,"tensor5d",(function(){return Yr})),n.d(c,"tensor6d",(function(){return Qr})),n.d(c,"tile",(function(){return Be})),n.d(c,"topk",(function(){return Zr})),n.d(c,"truncatedNormal",(function(){return ts})),n.d(c,"unsortedSegmentSum",(function(){return es})),n.d(c,"unstack",(function(){return ns})),n.d(c,"variable",(function(){return rs})),n.d(c,"where",(function(){return Re})),n.d(c,"whereAsync",(function(){return as})),n.d(c,"zeros",(function(){return jn})),n.d(c,"zerosLike",(function(){return $e})),n.d(c,"booleanMaskAsync",(function(){return is})),n.d(c,"equalStrict",(function(){return os})),n.d(c,"greaterEqualStrict",(function(){return us})),n.d(c,"greaterStrict",(function(){return ls})),n.d(c,"lessEqualStrict",(function(){return cs})),n.d(c,"lessStrict",(function(){return hs})),n.d(c,"notEqualStrict",(function(){return ds})),n.d(c,"addStrict",(function(){return ps})),n.d(c,"divStrict",(function(){return fs})),n.d(c,"maximumStrict",(function(){return ms})),n.d(c,"minimumStrict",(function(){return gs})),n.d(c,"modStrict",(function(){return bs})),n.d(c,"mulStrict",(function(){return ys})),n.d(c,"powStrict",(function(){return xs})),n.d(c,"squaredDifferenceStrict",(function(){return vs})),n.d(c,"subStrict",(function(){return ws})),n.d(c,"transpose",(function(){return P})),n.d(c,"norm",(function(){return Os})),n.d(c,"movingAverage",(function(){return Ss})),n.d(c,"scatterND",(function(){return Is})),n.d(c,"sparseToDense",(function(){return Es})),n.d(c,"gatherND",(function(){return Ts})),n.d(c,"dropout",(function(){return As})),n.d(c,"enclosingPowerOfTwo",(function(){return Rs})),n.d(c,"cosineWindow",(function(){return $s})),n.d(c,"inTopKAsync",(function(){return Fs})),n.d(c,"op",(function(){return C.a})),n.d(c,"image",(function(){return Ra})),n.d(c,"linalg",(function(){return $a})),n.d(c,"losses",(function(){return Fa})),n.d(c,"spectral",(function(){return Ta})),n.d(c,"fused",(function(){return l})),n.d(c,"signal",(function(){return Aa}));var h={};n.r(h),n.d(h,"copyModel",(function(){return Ga})),n.d(h,"listModels",(function(){return Ua})),n.d(h,"moveModel",(function(){return Ha})),n.d(h,"removeModel",(function(){return Va})),n.d(h,"browserFiles",(function(){return pi})),n.d(h,"browserHTTPRequest",(function(){return Si})),n.d(h,"concatenateArrayBuffers",(function(){return ja.d})),n.d(h,"decodeWeights",(function(){return ja.e})),n.d(h,"encodeWeights",(function(){return ja.f})),n.d(h,"fromMemory",(function(){return Ni})),n.d(h,"getLoadHandlers",(function(){return La})),n.d(h,"getModelArtifactsInfoForJSON",(function(){return ja.g})),n.d(h,"getSaveHandlers",(function(){return Ma})),n.d(h,"http",(function(){return Oi})),n.d(h,"isHTTPScheme",(function(){return vi})),n.d(h,"loadWeights",(function(){return bi})),n.d(h,"registerLoadRouter",(function(){return za})),n.d(h,"registerSaveRouter",(function(){return _a})),n.d(h,"weightsLoaderFactory",(function(){return yi})),n.d(h,"withSaveHandler",(function(){return Ii}));var d={};n.r(d),n.d(d,"toPixels",(function(){return Ai})),n.d(d,"fromPixels",(function(){return Ri}));var f={};n.r(f),n.d(f,"Serializable",(function(){return $i})),n.d(f,"SerializationMap",(function(){return Fi})),n.d(f,"registerClass",(function(){return ji}));var m={};n.r(m),n.d(m,"axesAreInnerMostDims",(function(){return $})),n.d(m,"combineLocations",(function(){return F})),n.d(m,"computeOutAndReduceShapes",(function(){return j})),n.d(m,"expandShapeToKeepDim",(function(){return D})),n.d(m,"assertAxesAreInnerMostDims",(function(){return _})),n.d(m,"getAxesPermutation",(function(){return z})),n.d(m,"getUndoAxesPermutation",(function(){return M})),n.d(m,"getInnerMostAxes",(function(){return L})),n.d(m,"getBroadcastDims",(function(){return Ie})),n.d(m,"getReductionAxes",(function(){return Ee})),n.d(m,"assertAndGetBroadcastShape",(function(){return Te})),n.d(m,"assertParamsConsistent",(function(){return Nt})),n.d(m,"computeOutShape",(function(){return It})),n.d(m,"computeDilation2DInfo",(function(){return Z})),n.d(m,"computePool2DInfo",(function(){return tt})),n.d(m,"computePool3DInfo",(function(){return et})),n.d(m,"computeConv2DInfo",(function(){return nt})),n.d(m,"computeConv3DInfo",(function(){return st})),n.d(m,"computeDefaultPad",(function(){return at})),n.d(m,"tupleValuesAreOne",(function(){return ct})),n.d(m,"eitherStridesOrDilationsAreOne",(function(){return ht})),n.d(m,"convertConv2DDataFormat",(function(){return pt})),n.d(m,"getFusedDyActivation",(function(){return Ds})),n.d(m,"getFusedBiasGradient",(function(){return _s})),n.d(m,"applyActivation",(function(){return zs})),n.d(m,"shouldFuse",(function(){return Ms})),n.d(m,"PARALLELIZE_THRESHOLD",(function(){return Ge})),n.d(m,"computeOptimalWindowSize",(function(){return He})),n.d(m,"upcastType",(function(){return zi.b})),n.d(m,"getImageCenter",(function(){return Ki})),n.d(m,"getReshaped",(function(){return Ji})),n.d(m,"getPermuted",(function(){return Xi})),n.d(m,"getReshapedPermuted",(function(){return Yi})),n.d(m,"getSliceBeginCoords",(function(){return Qi})),n.d(m,"getSliceSize",(function(){return Zi})),n.d(m,"prepareAndValidate",(function(){return to})),n.d(m,"validateUpdateShape",(function(){return Cs})),n.d(m,"validateInput",(function(){return ks})),n.d(m,"calculateShapes",(function(){return Ns})),n.d(m,"SELU_SCALEALPHA",(function(){return eo})),n.d(m,"SELU_SCALE",(function(){return no})),n.d(m,"ERF_P",(function(){return ro})),n.d(m,"ERF_A1",(function(){return so})),n.d(m,"ERF_A2",(function(){return ao})),n.d(m,"ERF_A3",(function(){return io})),n.d(m,"ERF_A4",(function(){return oo})),n.d(m,"ERF_A5",(function(){return uo})),n.d(m,"warn",(function(){return lo})),n.d(m,"log",(function(){return co})),n.d(m,"mergeRealAndImagArrays",(function(){return ho})),n.d(m,"splitRealAndImagArrays",(function(){return po})),n.d(m,"complexWithEvenIndex",(function(){return fo})),n.d(m,"complexWithOddIndex",(function(){return mo})),n.d(m,"getComplexWithIndex",(function(){return go})),n.d(m,"assignToTypedArray",(function(){return bo})),n.d(m,"exponents",(function(){return yo})),n.d(m,"exponent",(function(){return xo})),n.d(m,"prepareSplitSize",(function(){return kr})),n.d(m,"segment_util",(function(){return o})),n.d(m,"castTensor",(function(){return vo})),n.d(m,"reshapeTensor",(function(){return wo})),n.d(m,"linspaceImpl",(function(){return Oo}));var y={};n.r(y),n.d(y,"nonMaxSuppressionV3Impl",(function(){return ea})),n.d(y,"nonMaxSuppressionV4Impl",(function(){return na})),n.d(y,"nonMaxSuppressionV5Impl",(function(){return ra})),n.d(y,"split",(function(){return Co})),n.d(y,"tile",(function(){return ko})),n.d(y,"topkImpl",(function(){return No})),n.d(y,"whereImpl",(function(){return ss}));var x=n(178),v=(n(219),n(183));class w{fetch(path,t){return fetch(path,t)}now(){return performance.now()}encode(text,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(text)}decode(t,e){return new TextDecoder(e).decode(t)}}Object(v.b)().get("IS_BROWSER")&&Object(v.b)().setPlatform("browser",new w);n(220);var O=n(174),S=n(176),C=n(175);const k=Object(C.a)({abs_:function(t){const e=Object(S.a)(t,"x","abs"),n={x:e};return x.a.runKernelFunc((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e)),n,null,O.a)}});const N=Object(C.a)({acos_:function(t){const e=Object(S.a)(t,"x","acos"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.acos(e);return n([e]),r},n,null,O.b)}});const I=Object(C.a)({acosh_:function(t){const e=Object(S.a)(t,"x","acosh"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.acosh(e);return n([e]),r},n,null,O.c)}});var E=n(181);const T=Object(C.a)({add_:function(a,b){let t=Object(S.a)(a,"a","add"),e=Object(S.a)(b,"b","add");[t,e]=Object(E.makeTypesMatch)(t,e);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.add(t,e);return r([t,e]),o},n,null,O.d)}});var A=n(180);const R=Object(C.a)({addN_:function(t){A.assert(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),A.assert(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,i)=>Object(S.a)(t,"tensors"+i,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!A.arraysEqual(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return x.a.runKernelFunc((t,n)=>{const r=t.addN(e);return n(e),r},r,null,O.e)}});function $(t,e){for(let i=0;i<t.length;++i)if(t[t.length-i-1]!==e-1-i)return!1;return!0}function F(t,e,n){const r=t.length+e.length,o=[];let l=0,c=0;for(let h=0;h<r;h++)-1===n.indexOf(h)?o.push(t[l++]):o.push(e[c++]);return o}function j(t,e){const n=[],r=t.length;for(let o=0;o<r;o++)-1===e.indexOf(o)&&n.push(t[o]);return[n,e.map(e=>t[e])]}function D(t,e){return F(t,e.map(t=>1),e)}function _(t,e,n){A.assert($(e,n),()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`)}function z(t,e){if($(t,e))return null;const n=[];for(let i=0;i<e;++i)-1===t.indexOf(i)&&n.push(i);return t.forEach(t=>n.push(t)),n}function M(t){return t.map((t,i)=>[i,t]).sort((a,b)=>a[1]-b[1]).map(t=>t[0])}function L(t,e){const n=[];for(let i=e-t;i<e;++i)n.push(i);return n}const B=Object(C.a)({reshape_:function(t,e){const n=Object(S.a)(t,"x","reshape",null);e=A.inferFromImplicitShape(e,n.size),A.assert(n.size===A.sizeFromShape(e),()=>"new shape and old shape must have the same number of elements.");const r={x:n},o={shape:e};return x.a.runKernelFunc((t,r)=>(r([n]),t.reshape(n,e)),r,null,O.ec,o)}});const P=Object(C.a)({transpose_:function(t,e){const n=Object(S.a)(t,"x","transpose");if(null==e&&(e=n.shape.map((s,i)=>i).reverse()),A.assert(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{A.assert(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1)return n.clone();const r={x:n},o={perm:e};return x.a.runKernelFunc(t=>t.transpose(n,e),r,null,O.Lc,o)}});const W=Object(C.a)({all_:function(t,e=null,n=!1){let r=Object(S.a)(t,"x","all","bool");const o={x:r},l={axis:e,keepDims:n};return x.a.runKernelFunc(t=>{const o=Object(A.parseAxisParam)(e,r.shape);let l=o;const c=z(l,r.rank);null!=c&&(r=P(r,c),l=L(l.length,r.rank));const h=t.all(r,l);if(n){const t=D(h.shape,o);return B(h,t)}return h},o,null,O.f,l)}});const U=Object(C.a)({any_:function(t,e=null,n=!1){let r=Object(S.a)(t,"x","any","bool");const o={x:r},l={axis:e,keepDims:n};return x.a.runKernelFunc(t=>{const o=Object(A.parseAxisParam)(e,r.shape);let l=o;const c=z(l,r.rank);null!=c&&(r=P(r,c),l=L(l.length,r.rank));const h=t.any(r,l);if(n){const t=D(h.shape,o);return B(h,t)}return h},o,null,O.g,l)}});const V=Object(C.a)({argMax_:function(t,e=0){let n=Object(S.a)(t,"x","argMax");const r={x:n},o={axis:e};return x.a.runKernelFunc((t,r)=>{r([n]);let o=A.parseAxisParam(e,n.shape);const l=z(o,n.rank);return null!=l&&(n=P(n,l),o=L(o.length,n.rank)),t.argMax(n,o[0])},r,null,O.h,o)}});const G=Object(C.a)({argMin_:function(t,e=0){let n=Object(S.a)(t,"x","argMin");const r={x:n},o={axis:e};return x.a.runKernelFunc((t,r)=>{r([n]),null==e&&(e=0);let o=A.parseAxisParam(e,n.shape);const l=z(o,n.rank);return null!=l&&(n=P(n,l),o=L(o.length,n.rank)),t.argMin(n,o[0])},r,null,O.i,o)}});const H=Object(C.a)({asin_:function(t){const e=Object(S.a)(t,"x","asin"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.asin(e);return n([e]),r},n,null,O.j)}});const K=Object(C.a)({asinh_:function(t){const e=Object(S.a)(t,"x","asinh"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.asinh(e);return n([e]),r},n,null,O.k)}});const J=Object(C.a)({atan_:function(t){const e=Object(S.a)(t,"x","atan"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.atan(e);return n([e]),r},n,null,O.l)}});const X=Object(C.a)({atan2_:function(a,b){let t=Object(S.a)(a,"a","atan2"),e=Object(S.a)(b,"b","atan2");[t,e]=Object(E.makeTypesMatch)(t,e);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.atan2(t,e);return r([t,e]),o},n,null,O.m)}});const Y=Object(C.a)({atanh_:function(t){const e=Object(S.a)(t,"x","atanh"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.atanh(e);return n([e]),r},n,null,O.n)}});const Q=Object(C.a)({cast_:function(t,e){const n=Object(S.a)(t,"x","cast");if(!A.isValidDtype(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},o={dtype:e};return x.a.runKernelFunc(t=>t.cast(n,e),r,null,O.v,o)}});function Z(t,e,n,r,o="NHWC",l){return nt(t,[...e,t[3]],n,l,r,null,null,pt(o))}function tt(t,e,n,r,o,l,c="channelsLast"){const[h,d]=it(e);let f;if("channelsLast"===c)f=[h,d,t[3],t[3]];else{if("channelsFirst"!==c)throw new Error("Unknown dataFormat "+c);f=[h,d,t[1],t[1]]}return nt(t,f,n,r,o,l,!1,c)}function et(t,e,n,r,o,l,c="NDHWC"){const[h,d,f]=ot(e);let m,y;if("NDHWC"===c)y="channelsLast",m=[h,d,f,t[4],t[4]];else{if("NCDHW"!==c)throw new Error("Unknown dataFormat "+c);y="channelsFirst",m=[h,d,f,t[1],t[1]]}return st(t,m,n,r,o,!1,y,l)}function nt(t,e,n,r,o,l,c=!1,h="channelsLast"){let[d,f,m,y]=[-1,-1,-1,-1];if("channelsLast"===h)[d,f,m,y]=t;else{if("channelsFirst"!==h)throw new Error("Unknown dataFormat "+h);[d,y,f,m]=t}const[x,v,,w]=e,[O,S]=it(n),[C,k]=it(r),N=ut(x,C),I=ut(v,k),{padInfo:E,outHeight:T,outWidth:R}=function(t,e,n,r,o,l,c,h,d){let f,m,y;if("number"==typeof t){f={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const o=function(t,e,n,r,o){null==r&&(r=at(t,e,n));const l=t[0],c=t[1],h=lt((l-e+2*r)/n+1,o);A.assert(A.isInt(h),()=>`The output # of rows (${h}) must be an integer. Change the stride and/or zero pad parameters`);const d=lt((c-e+2*r)/n+1,o);return A.assert(A.isInt(d),()=>`The output # of columns (${d}) must be an integer. Change the stride and/or zero pad parameters`),[h,d]}([e,n],l,r,t,h);m=o[0],y=o[1]}else if("same"===t){m=Math.ceil(e/r),y=Math.ceil(n/o);const t=Math.max(0,(m-1)*r+l-e),h=Math.max(0,(y-1)*o+c-n),d=Math.floor(t/2),x=t-d,v=Math.floor(h/2);f={top:d,bottom:x,left:v,right:h-v,type:"SAME"}}else if("valid"===t)f={top:0,bottom:0,left:0,right:0,type:"VALID"},m=Math.ceil((e-l+1)/r),y=Math.ceil((n-c+1)/o);else{if("object"!=typeof t)throw Error("Unknown padding parameter: "+t);{const x="channelsLast"===d?t[1][0]:t[2][0],v="channelsLast"===d?t[1][1]:t[2][1],w="channelsLast"===d?t[2][0]:t[3][0],O="channelsLast"===d?t[2][1]:t[3][1];f={top:x,bottom:v,left:w,right:O,type:0===x&&0===v&&0===w&&0===O?"VALID":"EXPLICIT"},m=lt((e-l+x+v)/r+1,h),y=lt((n-c+w+O)/o+1,h)}}return{padInfo:f,outHeight:m,outWidth:y}}(o,f,m,O,S,N,I,l,h),$=c?w*y:w;let F;return"channelsFirst"===h?F=[d,$,T,R]:"channelsLast"===h&&(F=[d,T,R,$]),{batchSize:d,dataFormat:h,inHeight:f,inWidth:m,inChannels:y,outHeight:T,outWidth:R,outChannels:$,padInfo:E,strideHeight:O,strideWidth:S,filterHeight:x,filterWidth:v,effectiveFilterHeight:N,effectiveFilterWidth:I,dilationHeight:C,dilationWidth:k,inShape:t,outShape:F,filterShape:e}}function st(t,e,n,r,o,l=!1,c="channelsLast",h){let[d,f,m,y,x]=[-1,-1,-1,-1,-1];if("channelsLast"===c)[d,f,m,y,x]=t;else{if("channelsFirst"!==c)throw new Error("Unknown dataFormat "+c);[d,x,f,m,y]=t}const[v,w,O,,S]=e,[C,k,N]=ot(n),[I,E,T]=ot(r),R=ut(v,I),$=ut(w,E),F=ut(O,T),{padInfo:j,outDepth:D,outHeight:_,outWidth:z}=function(t,e,n,r,o,l,c,h,d,f,m){let y,x,v,w;if("number"==typeof t){y={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const l=function(t,e,n,r,o,l){null==o&&(o=at(t,e,r));const c=t[0],h=t[1],d=t[2],f=lt((c-e+2*o)/r+1,l);A.assert(A.isInt(f),()=>`The output # of depths (${f}) must be an integer. Change the stride and/or zero pad parameters`);const m=lt((h-e+2*o)/r+1,l);A.assert(A.isInt(m),()=>`The output # of rows (${m}) must be an integer. Change the stride and/or zero pad parameters`);const y=lt((d-e+2*o)/r+1,l);return A.assert(A.isInt(y),()=>`The output # of columns (${y}) must be an integer. Change the stride and/or zero pad parameters`),[f,m,y,n]}([e,n,r,1],h,1,o,t,m);x=l[0],v=l[1],w=l[2]}else if("same"===t){x=Math.ceil(e/o),v=Math.ceil(n/l),w=Math.ceil(r/c);const t=(x-1)*o+h-e,m=(v-1)*l+d-n,O=(w-1)*c+f-r,S=Math.floor(t/2),C=t-S,k=Math.floor(m/2),N=m-k,I=Math.floor(O/2);y={top:k,bottom:N,left:I,right:O-I,front:S,back:C,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);y={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},x=Math.ceil((e-h+1)/o),v=Math.ceil((n-d+1)/l),w=Math.ceil((r-f+1)/c)}return{padInfo:y,outDepth:x,outHeight:v,outWidth:w}}(o,f,m,y,C,k,N,R,$,F,h),M=l?S*x:S;let L;return"channelsFirst"===c?L=[d,M,D,_,z]:"channelsLast"===c&&(L=[d,D,_,z,M]),{batchSize:d,dataFormat:c,inDepth:f,inHeight:m,inWidth:y,inChannels:x,outDepth:D,outHeight:_,outWidth:z,outChannels:M,padInfo:j,strideDepth:C,strideHeight:k,strideWidth:N,filterDepth:v,filterHeight:w,filterWidth:O,effectiveFilterDepth:R,effectiveFilterHeight:$,effectiveFilterWidth:F,dilationDepth:I,dilationHeight:E,dilationWidth:T,inShape:t,outShape:L,filterShape:e}}function at(t,e,n,r=1){const o=ut(e,r);return Math.floor((t[0]*(n-1)-n+o)/2)}function it(param){return"number"==typeof param?[param,param,param]:2===param.length?[param[0],param[1],1]:param}function ot(param){return"number"==typeof param?[param,param,param]:param}function ut(t,e){return e<=1?t:t+(t-1)*(e-1)}function lt(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function ct(param){const[t,e,n]=it(param);return 1===t&&1===e&&1===n}function ht(t,e){return ct(t)||ct(e)}function pt(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}const ft=Object(C.a)({avgPool_:function(t,e,n,r,o){const l=Object(S.a)(t,"x","avgPool","float32");A.assert(ht(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let c=l,h=!1;3===l.rank&&(h=!0,c=B(l,[1,l.shape[0],l.shape[1],l.shape[2]])),A.assert(4===c.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${c.rank}.`),null!=o&&A.assert(A.isInt(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const d={x:c},f={filterSize:e,strides:n,pad:r,dimRoundingMode:o};let m=x.a.runKernelFunc((t,l)=>{const h=tt(c.shape,e,n,1,r,o);return l([c]),1===h.filterWidth&&1===h.filterHeight&&A.arraysEqual(h.inShape,h.outShape)?c.clone():t.avgPool(c,h)},d,null,O.o,f);return m=Q(m,l.dtype),h?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var mt=n(179);function gt(t){Object(v.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function bt(){return x.a}function yt(){return x.a.memory()}function xt(t,e){return x.a.tidy(t,e)}function vt(t){Object(E.getTensorsInContainer)(t).forEach(t=>t.dispose())}function wt(t){return x.a.keep(t)}function Ot(t){return x.a.setBackend(t)}function St(t,e,n=1){return x.a.registerBackend(t,e,n)}function Ct(){return x.a.backend}Object(mt.d)(gt);const kt=Object(C.a)({avgPool3d_:function(t,e,n,r,o,l="NDHWC",c){null==c?c=[1,1,1]:gt("dilations is deprecated, this field will be gone in v3.0.0.");const h=Object(S.a)(t,"x","avgPool3d","float32");let d=h,f=!1;4===h.rank&&(f=!0,d=B(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),A.assert(5===d.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${d.rank}.`),A.assert("NDHWC"===l,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+l),A.assert(ht(n,c),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${c}'`),null!=o&&A.assert(A.isInt(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const m={x:d},y={filterSize:e,strides:n,pad:r,dimRoundingMode:o,dataFormat:l,dilations:c};let v=x.a.runKernelFunc((t,h)=>{null==c&&(c=[1,1,1]);const f=et(d.shape,e,n,c,r,o,l);return h([d]),t.avgPool3d(d,f)},m,null,O.p,y);return v=Q(v,d.dtype),f?B(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}});function Nt(t,e){const n=t[0].length;t.forEach((t,i)=>{A.assert(t.length===n,()=>`Error in concat${n}D: rank of tensors[${i}] must be the same as the rank of the rest (${n})`)}),A.assert(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,i)=>{for(let o=0;o<n;o++)A.assert(o===e||t[o]===r[o],()=>`Error in concat${n}D: Shape of tensors[${i}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`)})}function It(t,e){const n=t[0].slice();for(let i=1;i<t.length;i++)n[e]+=t[i][e];return n}var Et=n(188);const Tt=Object(C.a)({concat_:function(t,e=0){Object(A.assert)(t.length>=1,()=>"Pass at least one tensor to concat");let n=Object(S.b)(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)});const r=Object(A.parseAxisParam)(e,n[0].shape)[0],o=It(n.map(t=>t.shape),r);if(0===Object(A.sizeFromShape)(o))return Object(Et.a)([],o);if(n=n.filter(t=>t.size>0),1===n.length)return n[0];Nt(n.map(t=>t.shape),r);const l=n,c={axis:e};return x.a.runKernelFunc((t,e)=>{const o=t.concat(n,r);return e(n),o},l,null,O.z,c)}});const At=Object(C.a)({matMul_:function(a,b,t=!1,e=!1){let n=Object(S.a)(a,"a","matMul"),r=Object(S.a)(b,"b","matMul");[n,r]=Object(E.makeTypesMatch)(n,r),A.assert(n.rank>=2&&r.rank>=2&&n.rank===r.rank,()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${n.rank} and ${r.rank}.`);const o=t?n.shape[n.rank-2]:n.shape[n.rank-1],l=e?r.shape[r.rank-1]:r.shape[r.rank-2],c=t?n.shape[n.rank-1]:n.shape[n.rank-2],h=e?r.shape[r.rank-2]:r.shape[r.rank-1],d=n.shape.slice(0,-2),f=r.shape.slice(0,-2),m=A.sizeFromShape(d),y=A.sizeFromShape(f);A.assert(A.arraysEqual(d,f),()=>`Error in matMul: outer dimensions (${d}) and (${f}) of Tensors with shapes ${n.shape} and `+r.shape+" must match."),A.assert(o===l,()=>`Error in matMul: inner shapes (${o}) and (${l}) of Tensors with shapes ${n.shape} and ${r.shape} and transposeA=${t} and transposeB=${e} must match.`);const v=n.shape.slice(0,-2).concat([c,h]),w=B(n,t?[m,o,c]:[m,c,o]),C=B(r,e?[y,h,l]:[y,l,h]),k={a:w,b:C},N={transposeA:t,transposeB:e},I=x.a.runKernelFunc((n,r)=>(r([w,C]),n.batchMatMul(w,C,t,e)),k,null,O.s,N);return B(I,v)}});const Rt=Object(C.a)({mul_:function(a,b){let t=Object(S.a)(a,"a","mul"),e=Object(S.a)(b,"b","mul");[t,e]=Object(E.makeTypesMatch)(t,e);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.multiply(t,e);return r([t,e]),o},n,null,O.Nb)}});const $t=Object(C.a)({sigmoid_:function(t){const e=Object(S.a)(t,"x","sigmoid"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.sigmoid(e);return n([r]),r},n,null,O.qc)}});function Ft(input,t,e){A.assert(input.rank===t.length,()=>`Error in slice${input.rank}D: Length of begin ${t} must match the rank of the array (${input.rank}).`),A.assert(input.rank===e.length,()=>`Error in slice${input.rank}D: Length of size ${e} must match the rank of the array (${input.rank}).`);for(let i=0;i<input.rank;++i)A.assert(t[i]+e[i]<=input.shape[i],()=>`Error in slice${input.rank}D: begin[${i}] + size[${i}] (${t[i]+e[i]}) would overflow input.shape[${i}] (${input.shape[i]})`)}function jt(mask){const t=[];let e=0;for(;mask>0;)1&mask&&t.push(e),mask/=2,e++;return t}function Dt(t,e,n){const r=[];for(let o=0;o<t.length;o++)r[o]=Math.ceil((e[o]-t[o])/n[o]);return r}function _t(t,e,n,r){const o=[...t];for(let i=o.length;i<r.length;i++)o.push(1);for(let i=0;i<n;i++)0===i?o[e]=1:(o.splice(e,0,1),o.pop());return o}function zt(t,e,n){return n<=t?n:n-(e-1)}function Mt(t,e){const n=[];for(let i=0;i<t;i++)n.push(e+i);return n}function Lt(t,e,n,r,o){const l=[...o],c=Mt(n,e);for(let o=0;o<l.length;o++)if(c.indexOf(o)>-1)l[o]=0;else{const c=zt(e,n,o);let h=r[c];t&1<<c&&(h=0),l[o]=h}return l}function Bt(t,e,n,r,o){const l=[...o],c=Mt(n,e);for(let o=0;o<l.length;o++)if(c.indexOf(o)>-1)l[o]=Number.MAX_SAFE_INTEGER;else{const c=zt(e,n,o);let h=r[c];t&1<<c&&(h=Number.MAX_SAFE_INTEGER),l[o]=h}for(let i=0;i<l.length;i++){const t=o[i];l[i]<0&&(l[i]+=t),l[i]=A.clamp(0,l[i],o[i])}return l}function Pt(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Wt(t,e,n,r,o,l){let c=e[o];const h=n[o]||1;(t&1<<o||l&1<<o||null==c)&&(c=h>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const d=r[o];return c<0&&(c+=d),c=A.clamp(0,c,d-1),c}function Ut(t,e,n,r,o,l){let c=e[o];const h=n[o]||1;(t&1<<o||l&1<<o||null==c)&&(c=h>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const d=r[o];return c<0&&(c+=d),c=h>0?A.clamp(0,c,d):A.clamp(-1,c,d-1),c}function Vt(t,e,n){let r=n.length;for(let i=0;i<n.length;i++)if(n[i]>1){r=i;break}for(let i=r+1;i<n.length;i++)if(e[i]>0||n[i]!==t[i])return!1;return!0}function Gt(t,e){let n=t.length>0?t[t.length-1]:1;for(let i=0;i<t.length-1;i++)n+=t[i]*e[i];return n}function Ht(t,e,n){let r,o;return r="number"==typeof e?[e,...new Array(t.rank-1).fill(0)]:e.length<t.rank?e.concat(new Array(t.rank-e.length).fill(0)):e.slice(),r.forEach(t=>{A.assert(-1!==t,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(t.rank).fill(-1):"number"==typeof n?[n,...new Array(t.rank-1).fill(-1)]:n.length<t.rank?n.concat(new Array(t.rank-n.length).fill(-1)):n,o=o.map((e,i)=>e>=0?e:(A.assert(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${i}.`),t.shape[i]-r[i])),[r,o]}const qt=Object(C.a)({slice_:function(t,e,n){const r=Object(S.a)(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const[o,l]=Ht(r,e,n);Ft(r,o,l);const c={x:r},h={begin:e,size:n};return x.a.runKernelFunc((t,e)=>(e([r]),t.slice(r,o,l)),c,null,O.uc,h)}});const Kt=Object(C.a)({tanh_:function(t){const e=Object(S.a)(t,"x","tanh"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.tanh(e);return n([r]),r},n,null,O.Ic)}});const Jt=Object(C.a)({basicLSTMCell_:function(t,e,n,data,r,o){const l=Object(S.a)(t,"forgetBias","basicLSTMCell"),c=Object(S.a)(e,"lstmKernel","basicLSTMCell"),h=Object(S.a)(n,"lstmBias","basicLSTMCell"),d=Object(S.a)(data,"data","basicLSTMCell"),f=Object(S.a)(r,"c","basicLSTMCell"),m=Object(S.a)(o,"h","basicLSTMCell"),y=Tt([d,m],1),x=At(y,c),v=T(x,h),w=v.shape[0],O=v.shape[1]/4,C=[w,O],i=qt(v,[0,0],C),k=qt(v,[0,O],C),N=qt(v,[0,2*O],C),I=qt(v,[0,3*O],C),E=T(Rt($t(i),Kt(k)),Rt(f,$t(T(l,N))));return[E,Rt(Kt(E),$t(I))]}});const Xt=Object(C.a)({batchToSpaceND_:function(t,e,n){const r=Object(S.a)(t,"x","batchToSpaceND"),o=e.reduce((a,b)=>a*b);A.assert(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),A.assert(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),A.assert(r.shape[0]%o==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);const l={x:r},c={blockShape:e,crops:n};return x.a.runKernelFunc(t=>t.batchToSpaceND(r,e,n),l,null,O.t,c)}});function Yt(t){return null==t?null:0===t.rank?B(t,[t.size]):1===t.rank?t:2===t.rank?B(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?B(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const Qt=Object(C.a)({batchNorm_:function(t,e,n,r,o,l){null==l&&(l=.001);const c=Object(S.a)(t,"x","batchNorm"),h=Object(S.a)(e,"mean","batchNorm"),d=Object(S.a)(n,"variance","batchNorm");let f,m;null!=o&&(f=Object(S.a)(o,"scale","batchNorm")),null!=r&&(m=Object(S.a)(r,"offset","batchNorm")),A.assert(h.rank===d.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A.assert(null==m||h.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A.assert(null==f||h.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const y=function(t){let e;return e=0===t.rank||1===t.rank?B(t,[1,1,1,t.size]):2===t.rank?B(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?B(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(c),v={x:y,scale:f,offset:m,mean:h,variance:d},w={varianceEpsilon:l},C=x.a.runKernelFunc((t,e)=>(e([y,h,d,f]),t.batchNorm(y,Yt(h),Yt(d),Yt(m),Yt(f),l)),v,null,O.fb,w);return B(C,c.shape)}});const Zt=Object(C.a)({batchNorm2d_:function(t,e,n,r,o,l){const c=Object(S.a)(t,"x","batchNorm"),h=Object(S.a)(e,"mean","batchNorm"),d=Object(S.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(S.a)(o,"scale","batchNorm")),null!=r&&(m=Object(S.a)(r,"offset","batchNorm")),A.assert(2===c.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+c.rank+"."),A.assert(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${h.rank}.`),A.assert(2===d.rank||1===d.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`),null!=f&&A.assert(2===f.rank||1===f.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${f.rank}.`),null!=m&&A.assert(2===m.rank||1===m.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${m.rank}.`),Qt(c,h,d,m,f,l)}});const te=Object(C.a)({batchNorm3d_:function(t,e,n,r,o,l){const c=Object(S.a)(t,"x","batchNorm"),h=Object(S.a)(e,"mean","batchNorm"),d=Object(S.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(S.a)(o,"scale","batchNorm")),null!=r&&(m=Object(S.a)(r,"offset","batchNorm")),A.assert(3===c.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+c.rank+"."),A.assert(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${h.rank}.`),A.assert(3===d.rank||1===d.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`),null!=f&&A.assert(3===f.rank||1===f.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${f.rank}.`),null!=m&&A.assert(3===m.rank||1===m.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${m.rank}.`),Qt(c,h,d,m,f,l)}});const ee=Object(C.a)({batchNorm4d_:function(t,e,n,r,o,l){const c=Object(S.a)(t,"x","batchNorm"),h=Object(S.a)(e,"mean","batchNorm"),d=Object(S.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(S.a)(o,"scale","batchNorm")),null!=r&&(m=Object(S.a)(r,"offset","batchNorm")),A.assert(4===c.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+c.rank+"."),A.assert(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${h.rank}.`),A.assert(4===d.rank||1===d.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`),null!=f&&A.assert(4===f.rank||1===f.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${f.rank}.`),null!=m&&A.assert(4===m.rank||1===m.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${m.rank}.`),Qt(c,h,d,m,f,l)}});const ne=Object(C.a)({clone_:function(t){const e=Object(S.a)(t,"x","clone",null),n={x:e};return x.a.runKernelFunc(()=>x.a.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n,null,O.nb)}});const re=Object(C.a)({broadcastTo_:function(t,e){let input=Object(S.a)(t,"broadcastTo","x");const n=input.shape;if(e.some(t=>!(t>0)||t%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<input.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${input.rank}.`);if(e.length>input.rank){const t=input.shape.slice();for(;t.length<e.length;)t.unshift(1);input=B(input,t)}const r=input.shape,o=Array.from(e);for(let i=e.length-1;i>=0;i--)if(r[i]===e[i])o[i]=1;else if(1!==input.shape[i])throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(0===o.map((t,i)=>t>1?i:-1).filter(i=>i>=0).length)return ne(input);const l={x:input},c={shape:e,inputShape:r};return x.a.runKernelFunc(t=>t.tile(input,o),l,null,O.u,c)}});function se(t,e="float32",n){return e=e||"float32",A.assertNonNegativeIntegerDimensions(t),new mt.b(t,e,n)}const ae=Object(C.a)({ceil_:function(t){const e=Object(S.a)(t,"x","ceil"),n={x:e};return x.a.runKernelFunc(t=>t.ceil(e),n,null,O.w)}});const ie=Object(C.a)({clipByValue_:function(t,e,n){const r=Object(S.a)(t,"x","clipByValue");A.assert(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`);const o={x:r},l={clipValueMin:e,clipValueMax:n};return x.a.runKernelFunc((t,o)=>{const l=t.clip(r,e,n);return o([r]),l},o,null,O.x,l)}});var oe=n(186);const ue=Object(C.a)({concat1d_:function(t){return Tt(t,0)}});const le=Object(C.a)({concat2d_:function(t,e){return Tt(t,e)}});const ce=Object(C.a)({concat3d_:function(t,e){return Tt(t,e)}});const he=Object(C.a)({concat4d_:function(t,e){return Tt(t,e)}});const de=Object(C.a)({conv2d_:function(t,filter,e,n,r="NHWC",o=[1,1],l){const c=Object(S.a)(t,"x","conv2d"),h=Object(S.a)(filter,"filter","conv2d");let d=c,f=!1;3===c.rank&&(f=!0,d=B(c,[1,c.shape[0],c.shape[1],c.shape[2]])),A.assert(4===d.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${d.rank}.`),A.assert(4===h.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=l&&A.assert(A.isInt(n),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${n}.`);const m="NHWC"===r?d.shape[3]:d.shape[1];A.assert(m===h.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),A.assert(ht(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const y={x:d,filter:h},v={strides:e,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l},w=x.a.runKernelFunc((t,c)=>{const f=pt(r),m=nt(d.shape,h.shape,e,o,n,l,!1,f),y=t.conv2d(d,h,m);return c([d,h]),y},y,null,O.A,v);return f?B(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});const pe=Object(C.a)({conv1d_:function(t,filter,e,n,r="NWC",o=1,l){const c=Object(S.a)(t,"x","conv1d"),h=Object(S.a)(filter,"filter","conv1d");let d=c,f=!1;2===c.rank&&(f=!0,d=B(c,[1,c.shape[0],c.shape[1]])),A.assert(3===d.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${d.rank}.`),A.assert(3===h.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+h.rank+"."),null!=l&&A.assert(A.isInt(n),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${n}.`),A.assert(d.shape[2]===h.shape[1],()=>`Error in conv1d: depth of input (${d.shape[2]}) must match input depth for filter ${h.shape[1]}.`),A.assert(ht(e,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${o}'`),A.assert("NWC"===r,()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const m=B(h,[1,h.shape[0],h.shape[1],h.shape[2]]),y=B(d,[d.shape[0],1,d.shape[1],d.shape[2]]),x=de(y,m,[1,e],n,"NHWC",[1,o],l);return B(x,f?[x.shape[2],x.shape[3]]:[x.shape[0],x.shape[2],x.shape[3]])}});const fe=Object(C.a)({conv2DBackpropInput_:function(t,e,filter,n,r,o="NHWC",l){A.assert(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let c=t,h=e,d=!1;3===e.rank&&(d=!0,h=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]),c=[1,t[0],t[1],t[2]]),A.assert(4===c.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+c.length+"."),A.assert(4===h.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+h.rank),A.assert(4===filter.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+filter.rank);const f="NHWC"===o?c[3]:c[1],m="NHWC"===o?h.shape[3]:h.shape[1];A.assert(f===filter.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${filter.shape[2]}.`),A.assert(m===filter.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${filter.shape[3]}.`),null!=l&&A.assert(A.isInt(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${r}.`);const y={dy:h,filter:filter},v={strides:n,pad:r,dataFormat:o,dimRoundingMode:l,inputShape:c},w=x.a.runKernelFunc((t,e)=>{const d=pt(o),f=nt(c,filter.shape,n,1,r,l,!1,d),m=t.conv2dDerInput(h,filter,f);return e([h,filter]),m},y,null,O.C,v);return d?B(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});const me=Object(C.a)({conv2dTranspose_:function(t,filter,e,n,r,o){const l=Object(S.a)(t,"x","conv2dTranspose"),c=Object(S.a)(filter,"filter","conv2dTranspose");return fe(e,l,c,n,r,"NHWC",o)}});const ge=Object(C.a)({conv3d_:function(t,filter,e,n,r="NDHWC",o=[1,1,1]){const l=Object(S.a)(t,"x","conv3d"),c=Object(S.a)(filter,"filter","conv3d");let h=l,d=!1;4===l.rank&&(d=!0,h=B(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),A.assert(5===h.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${h.rank}.`),A.assert(5===c.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+c.rank+"."),A.assert(h.shape[4]===c.shape[3],()=>`Error in conv3d: depth of input (${h.shape[4]}) must match input depth for filter ${c.shape[3]}.`),A.assert(ht(e,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),A.assert("NDHWC"===r,()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const f={x:h,filter:c},m={strides:e,pad:n,dataFormat:r,dilations:o},y=x.a.runKernelFunc((t,r)=>{const l=st(h.shape,c.shape,e,o,n),d=t.conv3d(h,c,l);return r([h,c]),d},f,null,O.D,m);return d?B(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}});const be=Object(C.a)({conv3DBackpropInput_:function(t,e,filter,n,r){A.assert(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,l=e,c=!1;4===e.rank&&(c=!0,l=B(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const h=o[4],d=l.shape[4];A.assert(5===o.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+o.length+"."),A.assert(5===l.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+l.rank),A.assert(5===filter.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+filter.rank),A.assert(h===filter.shape[3],()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${filter.shape[3]}.`),A.assert(d===filter.shape[4],()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${filter.shape[4]}.`);const f={dy:l},m={pad:r},y=x.a.runKernelFunc(t=>{const e=st(o,filter.shape,n,1,r);return t.conv3dDerInput(l,filter,e)},f,null,O.F,m);return c?B(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}});const ye=Object(C.a)({conv3dTranspose_:function(t,filter,e,n,r){const o=Object(S.a)(t,"x","conv3dTranspose"),l=Object(S.a)(filter,"filter","conv3dTranspose");return be(e,o,l,n,r)}});const xe=Object(C.a)({cos_:function(t){const e=Object(S.a)(t,"x","cos"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.cos(e);return n([e]),r},n,null,O.G)}});const ve=Object(C.a)({cosh_:function(t){const e=Object(S.a)(t,"x","cosh"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.cosh(e);return n([e]),r},n,null,O.H)}});const we=Object(C.a)({cumsum_:function(t,e=0,n=!1,r=!1){const o=Object(S.a)(t,"x","cumsum"),l={x:o},c={axis:e,exclusive:n,reverse:r};return x.a.runKernelFunc((t,l)=>{const c=z([e],o.rank);let h=o;null!=c&&(h=P(o,c));const d=L(1,o.rank)[0];let f=t.cumsum(h,d,n,r);if(l([o]),null!=c){const t=M(c);f=P(f,t)}return f},l,null,O.J,c)}});const Oe=Object(C.a)({depthToSpace_:function(t,e,n="NHWC"){const r=Object(S.a)(t,"x","depthToSpace"),o="NHWC"===n?r.shape[1]:r.shape[2],l="NHWC"===n?r.shape[2]:r.shape[3],c="NHWC"===n?r.shape[3]:r.shape[1];A.assert(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${e}  for depthToSpace with input shape\n    ${r.shape}`),A.assert(l*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${e} for depthToSpace with input shape\n        ${r.shape}`),A.assert(c%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${c} for depthToSpace with input shape ${r.shape}`);const h={x:r},d={blockSize:e,dataFormat:n};return x.a.runKernelFunc(t=>t.depthToSpace(r,e,n),h,null,O.K,d)}});const Se=Object(C.a)({depthwiseConv2d_:function(t,filter,e,n,r="NHWC",o=[1,1],l){const c=Object(S.a)(t,"x","depthwiseConv2d"),h=Object(S.a)(filter,"filter","depthwiseConv2d");let d=c,f=!1;3===c.rank&&(f=!0,d=B(c,[1,c.shape[0],c.shape[1],c.shape[2]])),A.assert(4===d.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),A.assert(4===h.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+h.rank+"."),A.assert(d.shape[3]===h.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null!=l&&A.assert(A.isInt(n),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${n}.`);const m={x:d,filter:h},y={strides:e,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l},v=x.a.runKernelFunc((t,r)=>{null==o&&(o=[1,1]),A.assert(ht(e,o),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const c=nt(d.shape,h.shape,e,o,n,l,!0),f=t.depthwiseConv2D(d,h,c);return r([d,h]),f},m,null,O.L,y);return f?B(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});const Ce=Object(C.a)({diag_:function(t){const e=Object(S.a)(t,"x","diag"),n={x:e};return x.a.runKernelFunc(n=>{const r=B(e,[e.size]),o=n.diag(r),l=[...t.shape,...t.shape];return B(o,l)},n,null,O.O)}});const ke=Object(C.a)({dilation2d_:function(t,filter,e,n,r=[1,1],o="NHWC"){const l=Object(S.a)(t,"x","dilation2d"),c=Object(S.a)(filter,"filter","dilation2d");A.assert(3===l.rank||4===l.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+l.rank+"."),A.assert(3===c.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+c.rank+"."),A.assert("NHWC"===o,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+o);let h=l,d=!1;3===l.rank&&(h=B(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=!0);const f={x:h,filter:c},m={strides:e,pad:n,dilations:r},y=x.a.runKernel(O.P,f,m);return d?B(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const Ne=Object(C.a)({floorDiv_:function(a,b){let t=Object(S.a)(a,"a","floorDiv"),e=Object(S.a)(b,"b","floorDiv");[t,e]=Object(E.makeTypesMatch)(t,e);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.floorDiv(t,e);return r([t,e]),o},n,null,O.db)}});const div=Object(C.a)({div_:function(a,b){let t=Object(S.a)(a,"a","div"),e=Object(S.a)(b,"b","div");if([t,e]=Object(E.makeTypesMatch)(t,e),"int32"===t.dtype&&"int32"===e.dtype)return Ne(t,e);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.realDivide(t,e);return r([t,e]),o},n,null,O.S,{})}});function Ie(t,e){const n=t.length,r=[];for(let i=0;i<n;i++){const o=n-1-i,a=t[o]||1;(e[e.length-1-i]||1)>1&&1===a&&r.unshift(o)}return r}function Ee(t,e){const n=[];for(let i=0;i<e.length;i++){const r=t[t.length-i-1],o=e.length-i-1,l=e[o];(null==r||1===r&&l>1)&&n.unshift(o)}return n}function Te(t,e){const n=[],r=Math.max(t.length,e.length);for(let i=0;i<r;i++){let a=t[t.length-i-1];null==a&&(a=1);let b=e[e.length-i-1];if(null==b&&(b=1),1===a)n.unshift(b);else if(1===b)n.unshift(a);else{if(a!==b){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(a)}}return n}const Ae=Object(C.a)({equal_:function(a,b){let t=Object(S.a)(a,"a","equal"),e=Object(S.a)(b,"b","equal");[t,e]=Object(E.makeTypesMatch)(t,e),Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc(n=>n.equal(t,e),n,null,O.V)}});const Re=Object(C.a)({where_:function(t,a,b){const e=Object(S.a)(a,"a","where"),n=Object(S.a)(b,"b","where"),r=Object(S.a)(t,"condition","where","bool"),o=Te(e.shape,n.shape),l=re(e,o),c=re(n,o);1===r.rank&&Object(A.assert)(r.shape[0]===e.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==r.rank&&Object(A.assertShapesMatch)(r.shape,c.shape,"Error in where: ");const h={condition:r,t:l,e:c};return x.a.runKernelFunc((t,e)=>{const n=t.select(r,l,c);return e([r]),n},h,null,O.oc)}});const $e=Object(C.a)({zerosLike_:function(t){const e=Object(S.a)(t,"x","zerosLike"),n={x:e};return x.a.runKernelFunc(t=>t.zerosLike(e),n,null,O.Oc)}});const Fe=Object(C.a)({divNoNan_:function(a,b){let t=Object(S.a)(a,"a","div"),e=Object(S.a)(b,"b","div");[t,e]=Object(E.makeTypesMatch)(t,e);const n=div(t,e),r=$e(n),o=Ae(e,r);return Re(o,r,n)}});const je=Object(C.a)({dot_:function(t,e){const n=Object(S.a)(t,"t1","dot"),r=Object(S.a)(e,"t2","dot");A.assert(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const o=1===n.rank?n.size:n.shape[1],l=1===r.rank?r.size:r.shape[0];if(A.assert(o===l,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${l}.`),1===n.rank&&1===r.rank){const t=B(n,[1,-1]),e=B(r,[-1,1]),o=At(t,e);return B(o,[])}if(1===n.rank&&2===r.rank){const t=B(n,[1,-1]),e=B(r,[r.shape[0],r.shape[1]]),o=At(t,e);return B(o,[o.size])}if(2===n.rank&&1===r.rank){const t=B(r,[-1,1]),e=At(n,t);return B(e,[e.size])}{const t=B(r,[r.shape[0],r.shape[1]]);return At(n,t)}}});const De=Object(C.a)({elu_:function(t){const e=Object(S.a)(t,"x","elu"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.elu(e);return n([r]),r},n,null,O.T)}});const _e=Object(C.a)({erf_:function(t){let e=Object(S.a)(t,"x","erf");A.assert("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Q(e,"float32"));const n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.erf(e);return n([e]),r},n,null,O.W)}});const ze=Object(C.a)({exp_:function(t){const e=Object(S.a)(t,"x","exp"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.exp(e);return n([r]),r},n,null,O.X)}});const Me=Object(C.a)({expandDims_:function(t,e=0){const n=Object(S.a)(t,"x","expandDims",null);A.assert(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r=n.shape.slice();return e<0&&(A.assert(-(n.rank+1)<=e,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),e=n.rank+e+1),r.splice(e,0,1),B(n,r)}});const Le=Object(C.a)({expm1_:function(t){const e=Object(S.a)(t,"x","expm1"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.expm1(e);return n([e]),r},n,null,O.Y)}});const Be=Object(C.a)({tile_:function(t,e){const n=Object(S.a)(t,"x","tile",null);A.assert(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r=[n],o={x:n},l={reps:e};return x.a.runKernelFunc((t,r)=>{const o=t.tile(n,e);return r([n]),o},o,null,O.Jc,l,r)}});const Pe=Object(C.a)({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const o=se([t,e],r),l=t<=e?t:e;for(let i=0;i<l;++i)o.set(1,i,i);const c=B(o.toTensor(),[t,e]);if(null==n)return c;if(1===n.length)return Be(Me(c,0),[n[0],1,1]);if(2===n.length)return Be(Me(Me(c,0),0),[n[0],n[1],1,1]);if(3===n.length)return Be(Me(Me(Me(c,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const We=Object(C.a)({fft_:function(input){Object(A.assert)("complex64"===input.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${input.dtype}.`);const t={input:input};return x.a.runKernelFunc(t=>{const e=input.shape[input.shape.length-1],n=input.size/e,r=input.as2D(n,e);return t.fft(r).reshape(input.shape)},t,null,O.Z)}});function Ue(t,e,n){const r={shape:t,value:e,dtype:n};return x.a.runKernelFunc(r=>r.fill(t,e,n),{},null,O.ab,r)}const Ve=Object(C.a)({floor_:function(t){const e=Object(S.a)(t,"x","floor"),n={x:e};return x.a.runKernelFunc(t=>t.floor(e),n,null,O.cb)}}),Ge=30;function He(t){return t<=Ge?t:Object(A.nearestDivisor)(t,Math.floor(Math.sqrt(t)))}function qe(t,e){let n,r=!1;for(t<=Ge?(n=t,r=!0):n=Object(A.nearestDivisor)(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Object(A.nearestDivisor)(t,n+1);return n}function Ke(t,e,n){const r=[],o=t.length;for(let l=0;l<o;l++)l!==e?r.push(t[l]):r.push(n);return r}function Je(t,e,n){const r=t.shape[n],o=[];let l=1,c=1;for(let i=0;i<n;i++)o.push(t.shape[i]),l*=t.shape[i];for(let i=0;i<e.rank;i++)o.push(e.shape[i]);for(let i=n+1;i<t.rank;i++)o.push(t.shape[i]),c*=t.shape[i];return{batchSize:l,sliceSize:c,dimSize:r,outputShape:o}}const Xe=Object(C.a)({gather_:function(t,e,n=0){const r=Object(S.a)(t,"x","gather"),o=Object(S.a)(e,"indices","gather","int32"),l={x:r,indices:o},c={axis:n};return x.a.runKernelFunc((t,e)=>{const l=Object(A.parseAxisParam)(n,r.shape)[0],c=Je(r,o,l),h=t.gather(r,B(o,[o.size]),l);return e([r,o]),B(h,c.outputShape)},l,null,O.jb,c)}});const Ye=Object(C.a)({greater_:function(a,b){let t=Object(S.a)(a,"a","greater"),e=Object(S.a)(b,"b","greater");[t,e]=Object(E.makeTypesMatch)(t,e),Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc(n=>n.greater(t,e),n,null,O.kb)}});const Qe=Object(C.a)({greaterEqual_:function(a,b){let t=Object(S.a)(a,"a","greaterEqual"),e=Object(S.a)(b,"b","greaterEqual");[t,e]=Object(E.makeTypesMatch)(t,e),Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.greaterEqual(t,e);return r([t,e]),o},n,null,O.lb)}});const Ze=Object(C.a)({ifft_:function(input){Object(A.assert)("complex64"===input.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${input.dtype}.`);const t={input:input};return x.a.runKernelFunc(t=>{const e=input.shape[input.shape.length-1],n=input.size/e,r=B(input,[n,e]),o=t.ifft(r);return B(o,input.shape)},t,null,O.mb)}});const tn=Object(C.a)({imag_:function(input){const t=Object(S.a)(input,"input","imag"),e={input:t};return x.a.runKernelFunc(e=>e.imag(t),e,null,O.ob)}});const en=Object(C.a)({real_:function(input){const t=Object(S.a)(input,"input","real"),e={input:t};return x.a.runKernelFunc(e=>e.real(t),e,null,O.ac)}});const nn=Object(C.a)({reverse_:function(t,e){const n=Object(S.a)(t,"x","reverse"),r={x:n},o={dims:e};return x.a.runKernelFunc(t=>{const r=Object(A.parseAxisParam)(e,n.shape);if(0===n.rank)return ne(n);const o=t.reverse(n,r);return B(o,n.shape)},r,null,O.jc,o)}});var rn=n(185);function sn(t,e){if((Object(A.isTypedArray)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(A.isTypedArray)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(rn.a)(t,[],[],e)}const an=Object(C.a)({irfft_:function(input){const t=input.shape[input.shape.length-1],e=input.size/t;let n;if(t<=2){const r=B(input,[e,t]);n=Ze(r)}else{const r=[e,2*(t-1)],o=B(en(input),[e,t]),l=B(tn(input),[e,t]),c=nn(qt(o,[0,1],[e,t-2]),1),h=Rt(nn(qt(l,[0,1],[e,t-2]),1),sn(-1)),d=Tt([o,c],1),i=Tt([l,h],1),f=B(Object(oe.a)(d,i),[r[0],r[1]]);n=Ze(f)}if(n=en(n),3===input.rank&&0!==input.shape[0]){const t=n,e=input.shape[0];n=B(n,[e,n.shape[0]/e,n.shape[1]]),t.dispose()}return n}});const on=Object(C.a)({isFinite_:function(t){const e=Object(S.a)(t,"x","isFinite"),n={x:e};return x.a.runKernelFunc(t=>t.isFinite(e),n,null,O.pb)}});const un=Object(C.a)({isInf_:function(t){const e=Object(S.a)(t,"x","isInf"),n={x:e};return x.a.runKernelFunc(t=>t.isInf(e),n,null,O.qb)}});const ln=Object(C.a)({isNaN_:function(t){const e=Object(S.a)(t,"x","isNaN"),n={x:e};return x.a.runKernelFunc(t=>t.isNaN(e),n,null,O.rb)}});const cn=Object(C.a)({maximum_:function(a,b){let t=Object(S.a)(a,"a","maximum"),e=Object(S.a)(b,"b","maximum");[t,e]=Object(E.makeTypesMatch)(t,e),"bool"===t.dtype&&(t=Q(t,"int32"),e=Q(e,"int32")),Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.maximum(t,e);return r([t,e]),o},n,null,O.Jb)}});const hn=Object(C.a)({leakyRelu_:function(t,e=.2){const n=Object(S.a)(t,"x","leakyRelu");return cn(Rt(sn(e),n),n)}});const dn=Object(C.a)({less_:function(a,b){let t=Object(S.a)(a,"a","less"),e=Object(S.a)(b,"b","less");[t,e]=Object(E.makeTypesMatch)(t,e),Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc(n=>n.less(t,e),n,null,O.ub)}});const pn=Object(C.a)({lessEqual_:function(a,b){let t=Object(S.a)(a,"a","lessEqual"),e=Object(S.a)(b,"b","lessEqual");[t,e]=Object(E.makeTypesMatch)(t,e),Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.lessEqual(t,e);return r([t,e]),o},n,null,O.vb)}});function fn(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return x.a.runKernelFunc(r=>r.linspace(t,e,n),{},null,O.wb,r)}const mn=Object(C.a)({localResponseNormalization_:function(t,e=5,n=1,r=1,o=.5){const l=Object(S.a)(t,"x","localResponseNormalization");A.assert(4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),A.assert(A.isInt(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let c=l,h=!1;3===l.rank&&(h=!0,c=B(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const d={x:c},f={depthRadius:e,bias:n,alpha:r,beta:o},m=x.a.runKernelFunc((t,l)=>{const h=t.localResponseNormalization4D(c,e,n,r,o);return l([c,h]),h},d,null,O.sb,f);return h?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const gn=Object(C.a)({log_:function(t){const e=Object(S.a)(t,"x","log"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.log(e);return n([e]),r},n,null,O.xb)}});const bn=Object(C.a)({log1p_:function(t){const e=Object(S.a)(t,"x","log1p"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.log1p(e);return n([e]),r},n,null,O.yb)}});function yn(t,e){A.assert(A.isFunction(t),()=>"The f passed in variableGrads(f) must be a function"),A.assert(null==e||Array.isArray(e)&&e.every(t=>t instanceof mt.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in x.a.registeredVariables)e.push(x.a.registeredVariables[t])}const r=n?e.filter(t=>!t.trainable):null,o=e.length;e=e.filter(t=>t.trainable),A.assert(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const{value:l,grads:c}=x.a.gradients(t,e,null,!0);A.assert(c.some(g=>null!=g),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A.assert(0===l.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`);const h={};return e.forEach((t,i)=>{null!=c[i]&&(h[t.name]=c[i])}),null!=r&&r.forEach(t=>h[t.name]=null),{value:l,grads:h}}function xn(t){return x.a.customGrad(t)}const vn=Object(C.a)({neg_:function(t){const e=Object(S.a)(t,"x","neg"),n={x:e};return x.a.runKernelFunc(t=>t.neg(e),n,null,O.Ob)}});const wn=Object(C.a)({softplus_:function(t){const e=Object(S.a)(t,"x","softplus"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.softplus(e);return n([e]),r},n,null,O.wc)}});const On=Object(C.a)({logSigmoid_:function(t){const e=Object(S.a)(t,"x","logSigmoid");return xn(t=>({value:vn(wn(vn(t))),gradFunc:e=>Rt(e,$t(vn(t)))}))(e)}});const Sn=Object(C.a)({max_:function(t,e=null,n=!1){const r=Object(S.a)(t,"x","max"),o={x:r},l={reductionIndices:e,keepDims:n};return x.a.runKernelFunc((t,o)=>{let l=A.parseAxisParam(e,r.shape);const c=z(l,r.rank);let h=r;null!=c&&(h=P(r,c),l=L(l.length,h.rank));const d=t.max(h,l);null!=c&&h.dispose();let f=d;if(n){const t=D(f.shape,A.parseAxisParam(e,r.shape));f=B(f,t),d.dispose()}return o([r,f]),f},o,null,O.Db,l)}});const sub=Object(C.a)({sub_:function(a,b){let t=Object(S.a)(a,"a","sub"),e=Object(S.a)(b,"b","sub");[t,e]=Object(E.makeTypesMatch)(t,e);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.subtract(t,e);return r([t,e]),o},n,null,O.Fc)}});const Cn=Object(C.a)({sum_:function(t,e=null,n=!1){let r=Object(S.a)(t,"x","sum");"bool"===r.dtype&&(r=Q(r,"int32"));const o={x:r},l={axis:e,keepDims:n};return x.a.runKernelFunc((t,o)=>{o([r]);const l=Object(A.parseAxisParam)(e,r.shape),c=z(l,r.rank);let h=l,d=r;null!=c&&(d=P(r,c),h=L(h.length,r.rank));let f=t.sum(d,h);if(n){const t=D(f.shape,l);f=B(f,t)}return f},o,null,O.Gc,l)}});const kn=Object(C.a)({logSoftmax_:function(t,e=-1){const n=Object(S.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},o={axis:e};return x.a.runKernelFunc((n,r)=>{const o=Sn(t,e,!0),l=sub(t,o),c=sub(Q(l,"float32"),gn(Cn(ze(l),e,!0)));return r([c]),c},r,null,O.zb,o)}});const Nn=Object(C.a)({logSumExp_:function(t,e=null,n=!1){const r=Object(S.a)(t,"x","logSumExp"),o=Object(A.parseAxisParam)(e,r.shape),l=Sn(r,o,!0),a=sub(r,l),b=ze(a),c=Cn(b,o),h=gn(c),d=T(B(l,h.shape),h);if(n){const t=D(d.shape,o);return B(d,t)}return d}});const In=Object(C.a)({logicalAnd_:function(a,b){const t=Object(S.a)(a,"a","logicalAnd","bool"),e=Object(S.a)(b,"b","logicalAnd","bool");Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc(n=>n.logicalAnd(t,e),n,null,O.Ab)}});const En=Object(C.a)({logicalNot_:function(t){const e=Object(S.a)(t,"x","logicalNot","bool"),n={x:e};return x.a.runKernelFunc(t=>t.logicalNot(e),n,null,O.Bb)}});const Tn=Object(C.a)({logicalOr_:function(a,b){const t=Object(S.a)(a,"a","logicalOr","bool"),e=Object(S.a)(b,"b","logicalOr","bool");Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc(n=>n.logicalOr(t,e),n,null,O.Cb)}});const An=Object(C.a)({logicalXor_:function(a,b){const t=Object(S.a)(a,"a","logicalXor","bool"),e=Object(S.a)(b,"b","logicalXor","bool");return Te(t.shape,e.shape),In(Tn(a,b),En(In(a,b)))}});const Rn=Object(C.a)({maxPool_:function(t,e,n,r,o){const l=Object(S.a)(t,"x","maxPool");let c=l,h=!1;3===l.rank&&(h=!0,c=B(l,[1,l.shape[0],l.shape[1],l.shape[2]])),A.assert(4===c.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${c.rank}.`),A.assert(ht(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=o&&A.assert(A.isInt(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const d={x:c},f={filterSize:e,strides:n,pad:r,dimRoundingMode:o},m=x.a.runKernelFunc((t,l)=>{const h=tt(c.shape,e,n,1,r,o);let d;return d=1===h.filterWidth&&1===h.filterHeight&&A.arraysEqual(h.inShape,h.outShape)?c.clone():t.maxPool(c,h),l([c,d]),d},d,null,O.Eb,f);return h?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const $n=Object(C.a)({maxPool3d_:function(t,e=[1,1,1],n,r,o,l="NDHWC",c){null==c?c=[1,1,1]:gt("dilations is deprecated, this field will be gone in v3.0.0.");const h=Object(S.a)(t,"x","maxPool3d");let d=h,f=!1;4===h.rank&&(f=!0,d=B(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),A.assert(5===d.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${d.rank}.`),A.assert("NDHWC"===l,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+l),A.assert(ht(n,c),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${c}'`),null!=o&&A.assert(A.isInt(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const m={x:d},y={filterSize:e,strides:n,pad:r,dimRoundingMode:o,dataFormat:l,dilations:c},v=x.a.runKernelFunc((t,h)=>{null==c&&(c=[1,1,1]);const f=et(d.shape,e,n,c,r,o,l),m=t.maxPool3d(d,f);return h([d,m]),m},m,null,O.Fb,y);return f?B(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}});const Fn=Object(C.a)({maxPoolWithArgmax_:function(t,e,n,r,o=!1){const l={x:Object(S.a)(t,"x","maxPoolWithArgmax")},c={filterSize:e,strides:n,pad:r,includeBatchInIndex:o},h=x.a.runKernel(O.Ib,l,c);return{result:h[0],indexes:h[1]}}});function jn(t,e="float32"){if("complex64"===e){const e=jn(t,"float32"),n=jn(t,"float32");return Object(oe.a)(e,n)}const n=Object(A.makeZerosTypedArray)(Object(A.sizeFromShape)(t),e);return x.a.makeTensor(n,t,e)}function Dn(t,e="float32"){if("complex64"===e){const e=Dn(t,"float32"),n=jn(t,"float32");return Object(oe.a)(e,n)}const n=Object(A.makeOnesTypedArray)(Object(A.sizeFromShape)(t),e);return x.a.makeTensor(n,t,e)}const _n=Object(C.a)({mean_:function(t,e=null,n=!1){const r=Object(S.a)(t,"x","mean"),o=Object(A.parseAxisParam)(e,r.shape),l=j(r.shape,o)[1],c=Object(A.sizeFromShape)(l);return xn(t=>{const r=sn(c),l=r.dtype===t.dtype?t:Q(t,r.dtype),h=div(l,r);return{value:Cn(h,e,n),gradFunc:e=>{const n=t.shape.slice();o.forEach(t=>{n[t]=1});const r=B(e,n);return div(Rt(r,Dn(t.shape,"float32")),c)}}})(r)}});const zn=Object(C.a)({min_:function(t,e=null,n=!1){const r=Object(S.a)(t,"x","min"),o={x:r},l={axis:e,keepDims:n};return x.a.runKernelFunc((t,o)=>{const l=Object(A.parseAxisParam)(e,r.shape);let c=l;const h=z(c,r.rank);let d=r;null!=h&&(d=P(r,h),c=L(c.length,r.rank));const f=t.min(d,c);null!=h&&d.dispose();let m=f;if(n){const t=D(m.shape,l);m=B(f,t),f.dispose()}return o([r,m]),m},o,null,O.Kb,l)}});const Mn=Object(C.a)({minimum_:function(a,b){let t=Object(S.a)(a,"a","minimum"),e=Object(S.a)(b,"b","minimum");[t,e]=Object(E.makeTypesMatch)(t,e),"bool"===t.dtype&&(t=Q(t,"int32"),e=Q(e,"int32")),Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.minimum(t,e);return r([t,e]),o},n,null,O.Lb)}});const Ln=Object(C.a)({mod_:function(a,b){let t=Object(S.a)(a,"a","mod"),e=Object(S.a)(b,"b","mod");[t,e]=Object(E.makeTypesMatch)(t,e);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.mod(t,e);return r([t,e]),o},n,null,O.Mb)}});const Bn=Object(C.a)({square_:function(t){const e=Object(S.a)(t,"x","square"),n=[e];return x.a.runKernelFunc((t,n)=>(n([e]),t.square(e)),{x:e},null,"Square",{},n,[])}});const Pn=Object(C.a)({moments_:function(t,e=null,n=!1){t=Object(S.a)(t,"x","moments");const r=Object(A.parseAxisParam)(e,t.shape),o=_n(t,r,n);let l=o.shape;n||(l=D(o.shape,r));const c=Bn(sub(Q(t,"float32"),B(o,l)));return{mean:o,variance:_n(c,r,n)}}});const Wn=Object(C.a)({multiRNNCell_:function(t,data,e,n){const r=Object(S.a)(data,"data","multiRNNCell"),o=Object(S.b)(e,"c","multiRNNCell"),l=Object(S.b)(n,"h","multiRNNCell");let input=r;const c=[];for(let i=0;i<t.length;i++){const output=t[i](input,o[i],l[i]);c.push(output[0]),c.push(output[1]),input=output[1]}const h=[],d=[];for(let i=0;i<c.length;i+=2)h.push(c[i]),d.push(c[i+1]);return[h,d]}});const Un=Object(C.a)({multinomial_:function(t,e,n,r=!1){const o=Object(S.a)(t,"logits","multinomial"),l=o.size,c=o.rank;if(l<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+l+".");if(c>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+c);n=n||Math.random();const h=1===c?B(o,[1,-1]):o,d=x.a.runKernelFunc(t=>t.multinomial(h,r,e,n),{logits2D:h});return 1===c?B(d,[d.size]):d}});const Vn=Object(C.a)({notEqual_:function(a,b){let t=Object(S.a)(a,"a","notEqual"),e=Object(S.a)(b,"b","notEqual");[t,e]=Object(E.makeTypesMatch)(t,e),Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc(n=>n.notEqual(t,e),n,null,O.Sb)}});const Gn=Object(C.a)({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const o=Object(S.a)(t,"indices","oneHot","int32"),l=[...o.shape,e],c={indices:o},h={depth:e,onValue:n,offValue:r};return x.a.runKernelFunc((t,c)=>(c([o]),B(t.oneHot(B(o,[o.size]),e,n,r),l)),c,null,O.Tb,h)}});const Hn=Object(C.a)({onesLike_:function(t){const e=Object(S.a)(t,"x","onesLike"),n={x:e};return x.a.runKernelFunc((t,n)=>{if("complex64"===e.dtype){const t=Hn(en(e)),i=$e(tn(e));return Object(oe.a)(t,i)}return t.onesLike(e)},n,null,O.Ub)}});const qn=Object(C.a)({outerProduct_:function(t,e){const n=Object(S.a)(t,"v1","outerProduct"),r=Object(S.a)(e,"v2","outerProduct");A.assert(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const o=B(n,[-1,1]),l=B(r,[1,-1]);return At(o,l)}});const Kn=Object(C.a)({pad_:function(t,e,n=0){const r=Object(S.a)(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:n},l={x:r};return x.a.runKernelFunc((t,o)=>(o([r]),t.pad(r,e,n)),l,null,O.Vb,o)}});const Jn=Object(C.a)({pad1d_:function(t,e,n=0){return Object(A.assert)(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Kn(t,[e],n)}});const Xn=Object(C.a)({pad2d_:function(t,e,n=0){return Object(A.assert)(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Kn(t,e,n)}});const Yn=Object(C.a)({pad3d_:function(t,e,n=0){return Object(A.assert)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Kn(t,e,n)}});const Qn=Object(C.a)({pad4d_:function(t,e,n=0){return Object(A.assert)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Kn(t,e,n)}});const Zn=Object(C.a)({spaceToBatchND_:function(t,e,n){const r=Object(S.a)(t,"x","spaceToBatchND");A.assert(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),A.assert(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),A.assert(r.shape.reduce((a,b,i)=>i>0&&i<=e.length?a&&(b+n[i-1][0]+n[i-1][1])%e[i-1]==0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const o={x:r},l={blockShape:e,paddings:n};return x.a.runKernelFunc(t=>t.spaceToBatchND(r,e,n),o,null,O.xc,l)}});const er=Object(C.a)({pool_:function(input,t,e,n,r,o){null==r&&(r=[1,1]),null==o&&(o=1),0===n&&(n="valid");const l=Object(S.a)(input,"x","maxPool");let c=l,h=!1;3===l.rank&&(h=!0,c=B(l,[1,l.shape[0],l.shape[1],l.shape[2]])),A.assert(ht(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const d=tt(c.shape,t,o,r,n),f=[d.dilationHeight,d.dilationWidth];let m;m="same"===n?function(t,e){const n=t.map((s,i)=>s+(s-1)*(e[i]-1)).map(s=>s-1),r=n.map(s=>Math.floor(s/2)),o=n.map((s,i)=>s-r[i]);return n.map((t,i)=>[r[i],o[i]])}([d.filterHeight,d.filterWidth],f):[[0,0],[0,0]];const y=1===f[0]&&1===f[1],[x,v]=function(t,e,n){const r=n.map(b=>b[0]),o=n.map(b=>b[1]),l=t.concat(r,o),c=e.map((b,i)=>(b-l[i]%b)%b),h=o.map((s,i)=>s+c[i]),d=e.map((t,i)=>[r[i],h[i]]),f=e.map((t,i)=>[0,c[i]]);return[d,f]}([d.inHeight,d.inWidth],f,m),w=y?n:"valid",O=y?c:Zn(c,f,x),C=("avg"===e?()=>ft(O,t,o,w):()=>Rn(O,t,o,w))(),k=y?C:Xt(C,f,v);return h?B(k,[k.shape[1],k.shape[2],k.shape[3]]):k}});const nr=Object(C.a)({pow_:function(base,t){let e=Object(S.a)(base,"base","pow"),n=Object(S.a)(t,"exp","pow");[e,n]=Object(E.makeTypesMatch)(e,n);const r={a:e,b:n};return x.a.runKernelFunc((t,r)=>{const o=t.pow(e,n);return r([e,n,o]),o},r,null,O.Wb)}});const rr=Object(C.a)({prelu_:function(t,e){const n=Object(S.a)(t,"x","prelu"),r=Object(S.a)(e,"alpha","prelu"),o={x:n,alpha:r};return x.a.runKernelFunc((t,e)=>{const o=t.prelu(n,r);return e([n,r]),o},o,null,O.Xb)}});function sr(t,e=!1){console.log(t.toString(e))}const ar=Object(C.a)({prod_:function(t,e=null,n=!1){let r=Object(S.a)(t,"x","prod");const o={x:r},l={axis:e,keepDims:n};return x.a.runKernelFunc(t=>{"bool"===r.dtype&&(r=Q(r,"int32"));const o=Object(A.parseAxisParam)(e,r.shape),l=z(o,r.rank);let c=o,h=r;null!=l&&(h=P(r,l),c=L(c.length,r.rank));let d=t.prod(h,c);if(n){const t=D(d.shape,o);d=B(d,t)}return d},o,null,O.Yb,l)}});const ir=Object(C.a)({rand_:function(t,e,n){const r=Object(A.sizeFromShape)(t);let o=null;if(null==n||"float32"===n)o=new Float32Array(r);else if("int32"===n)o=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);o=new Uint8Array(r)}for(let i=0;i<r;i++)o[i]=e();return x.a.makeTensor(o,t,n)}});var or=n(192);class ur{constructor(t,e,n,r,o){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const l=o||Math.random();this.random=or.alea(l.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,o,s;do{r=2*this.random()-1,o=2*this.random()-1,s=r*r+o*o}while(s>=1||0===s);const l=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*r*l,e=this.mean+this.stdDev*o*l,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class lr{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const o=r||Math.random();this.randu=or.alea(o.toString()),this.randn=new ur(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,u,o;for(;;){do{r=this.randn.nextValue(),o=1+this.c*r}while(o<=0);if(o*=o*o,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-o+Math.log(o)),u=this.randu(),u<e||Math.log(u)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class cr{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=or.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const dr=Object(C.a)({randomGamma_:function(t,e,n=1,r="float32",o){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const l=new lr(e,n,r,o),c=se(t,r);for(let i=0;i<c.values.length;i++)c.values[i]=l.nextValue();return c.toTensor()}});const pr=Object(C.a)({randomNormal_:function(t,e=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const l=new ur(e,n,r,!1,o),c=se(t,r);for(let i=0;i<c.values.length;i++)c.values[i]=l.nextValue();return c.toTensor()}});const fr=Object(C.a)({randomUniform_:function(t,e=0,n=1,r="float32",o){const l=se(t,r),c=new cr(e,n,null,o);for(let i=0;i<l.values.length;i++)l.values[i]=c.nextValue();return l.toTensor()}});function mr(t,e){Object(A.assertNonNull)(t);const n=Object(S.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(rn.a)(t,null,n,e)}function gr(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:t,stop:e,step:n,dtype:r};return x.a.runKernelFunc(()=>{if(t===e||t<e&&n<0||e<t&&n>1)return jn([0],r);const o=Math.abs(Math.ceil((e-t)/n)),l=Object(A.makeZerosTypedArray)(o,r);e<t&&1===n&&(n=-1),l[0]=t;for(let i=1;i<l.length;i++)l[i]=l[i-1]+n;return mr(l,r)},{},null,O.Zb,o)}const yr=Object(C.a)({reciprocal_:function(t){const e=Object(S.a)(t,"x","reciprocal"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.reciprocal(e);return n([e]),r},n,null,O.bc)}});const xr=Object(C.a)({relu_:function(t){const e=Object(S.a)(t,"x","relu"),n={x:e};return x.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Q(e,"int32"):t.relu(e)),n,null,O.cc)}});const vr=Object(C.a)({relu6_:function(t){const e=Object(S.a)(t,"x","relu6"),n={x:e};return x.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Q(e,"int32"):t.relu6(e)),n,null,O.dc)}});const wr=Object(C.a)({reverse1d_:function(t){const e=Object(S.a)(t,"x","reverse");return A.assert(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),nn(e,0)}});const Or=Object(C.a)({reverse2d_:function(t,e){const n=Object(S.a)(t,"x","reverse");return A.assert(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),nn(n,e)}});const Sr=Object(C.a)({reverse3d_:function(t,e){const n=Object(S.a)(t,"x","reverse");return A.assert(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),nn(n,e)}});const Cr=Object(C.a)({reverse4d_:function(t,e){const n=Object(S.a)(t,"x","reverse");return A.assert(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),nn(n,e)}});function kr(t,e,n=0){let r=[];if("number"==typeof e)Object(A.assert)(t.shape[n]%e==0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const o=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(A.assert)(o<=1,()=>"There should be only one negative value in split array.");const l=e.indexOf(-1);if(-1!==l){const r=e.reduce((a,b)=>b>0?a+b:a);e[l]=t.shape[n]-r}Object(A.assert)(t.shape[n]===e.reduce((a,b)=>a+b),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}const Nr=Object(C.a)({split_:function(t,e,n=0){const r=Object(S.a)(t,"x","split"),o={x:r},l={numOrSizeSplits:e,axis:n};return x.a.runKernelFunc((t,o)=>{const l=Object(A.parseAxisParam)(n,r.shape)[0],c=kr(r,e,l);return t.split(r,c,l)},o,null,O.zc,l)}});const Ir=Object(C.a)({rfft_:function(input,t){Object(A.assert)("float32"===input.dtype,()=>"The dtype for rfft() must be real value but got "+input.dtype);let e=input.shape[input.shape.length-1];const n=input.size/e;let r;if(null!=t&&t<e){const n=input.shape.map(t=>0),o=input.shape.map(t=>t);o[input.shape.length-1]=t,r=qt(input,n,o),e=t}else if(null!=t&&t>e){const n=input.shape.map(t=>t);n[input.shape.length-1]=t-e,r=Tt([input,jn(n)],input.shape.length-1),e=t}else r=input;const o=$e(r),l=B(Object(oe.a)(r,o),[n,e]),c=We(l),h=Math.floor(e/2)+1,d=en(c),f=tn(c),m=Nr(d,[h,e-h],d.shape.length-1),y=Nr(f,[h,e-h],f.shape.length-1),x=r.shape.slice();return x[r.shape.length-1]=h,B(Object(oe.a)(m[0],y[0]),x)}});const Er=Object(C.a)({round_:function(t){const e=Object(S.a)(t,"x","round"),n={x:e};return x.a.runKernelFunc(t=>t.round(e),n,null,O.lc)}});const Tr=Object(C.a)({rsqrt_:function(t){const e=Object(S.a)(t,"x","rsqrt"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.rsqrt(e);return n([e]),r},n,null,O.mc)}});const Ar=Object(C.a)({selu_:function(t){const e=Object(S.a)(t,"x","selu"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.selu(e);return n([e]),r},n,null,O.pc)}});const Rr=Object(C.a)({separableConv2d_:function(t,e,n,r,o,l=[1,1],c="NHWC"){const h=Object(S.a)(t,"x","separableConv2d"),d=Object(S.a)(e,"depthwiseFilter","separableConv2d"),f=Object(S.a)(n,"pointwiseFilter","separableConv2d");let m=h,y=!1;if(3===h.rank&&(y=!0,m=B(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===c)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A.assert(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),A.assert(4===d.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`),A.assert(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`),A.assert(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),A.assert(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);const x=d.shape[2],v=d.shape[3];A.assert(f.shape[2]===x*v,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${x*v}, but got ${f.shape[2]}.`);const w=Se(m,d,r,o,c,l),O=de(w,f,1,"valid",c);return y?B(O,[O.shape[1],O.shape[2],O.shape[3]]):O}});const $r=async function(t,e){const n=Object(S.a)(t,"x","setdiff1d"),r=Object(S.a)(e,"y","setdiff1d");A.assert(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),A.assert(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),A.assert(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const o=await n.data(),l=await r.data(),c=new Set(l);let h=0;for(let i=0;i<o.length;i++)c.has(o[i])||h++;const d=new mt.b([h],n.dtype),f=new mt.b([h],"int32");for(let i=0,p=0;i<o.length;i++)c.has(o[i])||(d.values[p]=o[i],f.values[p]=i,p++);return[d.toTensor(),f.toTensor()]};const Fr=Object(C.a)({sign_:function(t){const e=Object(S.a)(t,"x","sign"),n={x:e};return x.a.runKernelFunc(t=>t.sign(e),n,null,O.rc)}});const jr=Object(C.a)({sin_:function(t){const e=Object(S.a)(t,"x","sin"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.sin(e);return n([e]),r},n,null,O.sc)}});const Dr=Object(C.a)({sinh_:function(t){const e=Object(S.a)(t,"x","sinh"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.sinh(e);return n([e]),r},n,null,O.tc)}});const _r=Object(C.a)({slice1d_:function(t,e,n){const r=Object(S.a)(t,"x","slice1d");return A.assert(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),qt(r,[e],[n])}});const zr=Object(C.a)({slice2d_:function(t,e,n){const r=Object(S.a)(t,"x","slice2d");return A.assert(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),qt(r,e,n)}});const Mr=Object(C.a)({slice3d_:function(t,e,n){const r=Object(S.a)(t,"x","slice3d");return A.assert(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),qt(r,e,n)}});const Lr=Object(C.a)({slice4d_:function(t,e,n){const r=Object(S.a)(t,"x","slice4d");return A.assert(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),qt(r,e,n)}});const Br=Object(C.a)({softmax_:function(t,e=-1){const n=Object(S.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},o={dim:e};return x.a.runKernelFunc((t,r)=>{const o=t.softmax(n,e);return r([o]),o},r,null,O.vc,o)}});const Pr=Object(C.a)({sqrt_:function(t){const e=Object(S.a)(t,"x","sqrt"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.sqrt(e);return n([e]),r},n,null,O.Ac)}});const Wr=Object(C.a)({squaredDifference_:function(a,b){let t=Object(S.a)(a,"a","squaredDifference"),e=Object(S.a)(b,"b","squaredDifference");[t,e]=Object(E.makeTypesMatch)(t,e),Te(t.shape,e.shape);const n={a:t,b:e};return x.a.runKernelFunc((n,r)=>{const o=n.squaredDifference(t,e);return r([t,e]),o},n,null,O.Cc,{})}});const Ur=Object(C.a)({squeeze_:function(t,e){const n=Object(S.a)(t,"x","squeeze");return B(n,Object(A.squeezeShape)(n.shape,e).newShape)}});const Vr=Object(C.a)({stack_:function(t,e=0){const n=Object(S.b)(t,"tensors","stack");if(A.assert(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return Me(n[0],e);const r=n[0].rank,o=n[0].shape,l=n[0].dtype;A.assert(e<=r,()=>"Axis must be <= rank of the tensor"),n.forEach(t=>{A.assertShapesMatch(o,t.shape,"All tensors passed to stack must have matching shapes"),A.assert(l===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=n.map(t=>Me(t,e));return Tt(c,e)}});const Gr=Object(C.a)({step_:function(t,e=0){const n=Object(S.a)(t,"x","step"),r={x:n},o={alpha:e};return x.a.runKernelFunc(t=>t.step(n,e),r,null,O.Dc,o)}});const Hr=Object(C.a)({stridedSlice_:function(t,e,n,r,o=0,l=0,c=0,h=0,d=0){null==r&&(r=new Array(e.length));let f=Object(S.a)(t,"x","stridedSlice");const m={x:f},y={begin:e,end:n,strides:r,beginMask:o,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d};return x.a.runKernelFunc(t=>{const m=jt(c);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==c&&0!==h)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==c&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const y=f.rank-e.length,x=jt(h),v=f.shape.slice();if(x.forEach(t=>{e[t]=0,n[t]=1,v.splice(t,0,1)}),f=B(f,v),m.length&&y>0){const t=m[0],c=y+1;e=Lt(o,t,c,e,f.shape),n=Bt(l,t,c,n,f.shape),r=_t(r,t,c,f.shape)}else for(let t=0;t<f.rank;t++)e[t]=Wt(o,e,r,f.shape,t,c),n[t]=Ut(l,n,r,f.shape,t,c),r[t]=Pt(r,t,c);const w=jt(d);w.forEach(t=>{n[t]=e[t]+1,r[t]=1});const O=Dt(e,n,r),S=O.filter((t,e)=>-1===w.indexOf(e));if(r.every(t=>1===t))return B(qt(f,e,O),S);const C=t.stridedSlice(f,e,n,r);return B(C,S)},m,null,O.Ec,y)}});const qr=Object(C.a)({tan_:function(t){const e=Object(S.a)(t,"x","tan"),n={x:e};return x.a.runKernelFunc((t,n)=>{const r=t.tan(e);return n([e]),r},n,null,O.Hc)}});function Kr(t,e,n){if(Object(A.assertNonNull)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(S.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(rn.a)(t,e,r,n)}function Jr(t,e,n){if(Object(A.assertNonNull)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Object(S.c)(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(rn.a)(t,e,r,n)}function Xr(t,e,n){if(Object(A.assertNonNull)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(S.c)(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(rn.a)(t,e,r,n)}function Yr(t,e,n){if(Object(A.assertNonNull)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(S.c)(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(rn.a)(t,e,r,n)}function Qr(t,e,n){if(Object(A.assertNonNull)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(S.c)(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Object(rn.a)(t,e,r,n)}const Zr=Object(C.a)({topk_:function(t,e=1,n=!0){const r=Object(S.a)(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=r.shape[r.shape.length-1];if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got `+e);const l={x:r},c={k:e,sorted:n},[h,d]=x.a.runKernelFunc(b=>b.topk(r,e,n),l,null,O.Kc,c);return{values:h,indices:d}}});const ts=Object(C.a)({truncatedNormal_:function(t,e=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const l=new ur(e,n,r,!0,o),c=se(t,r);for(let i=0;i<c.values.length;i++)c.values[i]=l.nextValue();return c.toTensor()}});const es=Object(C.a)({unsortedSegmentSum_:function(t,e,n){const r=Object(S.a)(t,"x","unsortedSegmentSum"),o=Object(S.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(A.assert)(Object(A.isInt)(n),()=>"numSegments must be of dtype int");const l={x:r,segmentIds:o},c={numSegments:n};return x.a.runKernelFunc((t,e)=>{const l=t.unsortedSegmentSum(r,o,n);return e([o]),l},l,null,O.Nc,c)}});const ns=Object(C.a)({unstack_:function(t,e=0){const n=Object(S.a)(t,"x","unstack");A.assert(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`),e<0&&(e+=n.shape.length);const r={value:n},o={axis:e};return x.a.runKernelFunc(t=>t.unstack(n,e),r,null,O.Mc,o)}});function rs(t,e=!0,n,r){return x.a.makeVariable(t,e,n,r)}function ss(t,e){const n=[];for(let i=0;i<e.length;i++)e[i]&&n.push(i);const r=se(t,"int32"),o=se([n.length,t.length],"int32");for(let i=0;i<n.length;i++){const e=r.indexToLoc(n[i]),l=i*t.length;o.values.set(e,l)}return o.toTensor()}const as=async function(t){const e=Object(S.a)(t,"condition","whereAsync","bool"),n=await e.data(),r=ss(e.shape,n);return t!==e&&e.dispose(),r};const is=async function(t,mask,e){const n=Object(S.a)(t,"tensor","boolMask"),r=Object(S.a)(mask,"mask","boolMask","bool"),o=null==e?0:e,l=r.rank,c=n.shape;A.assert(l>0,()=>"mask cannot be scalar"),A.assertShapesMatch(c.slice(o,o+l),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let h=1;for(let i=o;i<o+l;i++)h*=c[i];const d=c.slice(0,o).concat([h],c.slice(o+l)),f=B(n,d),m=B(r,[-1]),y=await as(m),x=Ur(y,[1]),v=Xe(f,x,o);return t!==n&&n.dispose(),mask!==r&&r.dispose(),x.dispose(),f.dispose(),m.dispose(),y.dispose(),v};const os=Object(C.a)({equalStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","equalStrict"),e=Object(S.a)(b,"b","equalStrict");return Object(A.assertShapesMatch)(t.shape,e.shape,"Error in equalStrict: "),Ae(t,e)}}),us=Object(C.a)({greaterEqualStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","greaterEqualStrict"),e=Object(S.a)(b,"b","greaterEqualStrict");return Object(A.assertShapesMatch)(t.shape,e.shape,"Error in greaterEqualStrict: "),Qe(t,e)}}),ls=Object(C.a)({greaterStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","greaterStrict"),e=Object(S.a)(b,"b","greaterStrict");return Object(A.assertShapesMatch)(t.shape,e.shape,"Error in greaterStrict: "),Ye(t,e)}}),cs=Object(C.a)({lessEqualStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","lessEqualStrict"),e=Object(S.a)(b,"b","lessEqualStrict");return Object(A.assertShapesMatch)(t.shape,e.shape,"Error in lessEqualStrict: "),pn(t,e)}}),hs=Object(C.a)({lessStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","lessStrict"),e=Object(S.a)(b,"b","lessStrict");return Object(A.assertShapesMatch)(t.shape,e.shape,"Error in lessStrict: "),dn(t,e)}}),ds=Object(C.a)({notEqualStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","notEqualStrict"),e=Object(S.a)(b,"b","notEqualStrict");return Object(A.assertShapesMatch)(t.shape,e.shape,"Error in notEqualStrict: "),Vn(t,e)}});const ps=Object(C.a)({addStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","addStrict"),e=Object(S.a)(b,"b","addStrict");return A.assertShapesMatch(t.shape,e.shape,"Error in addStrict: "),T(t,e)}}),fs=Object(C.a)({divStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","div"),e=Object(S.a)(b,"b","div");return A.assertShapesMatch(t.shape,e.shape,"Error in divideStrict: "),div(t,e)}}),ms=Object(C.a)({maximumStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","maximumStrict"),e=Object(S.a)(b,"b","maximumStrict");return A.assertShapesMatch(t.shape,e.shape,"Error in maximumStrict: "),cn(t,e)}}),gs=Object(C.a)({minimumStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","minimumStrict"),e=Object(S.a)(b,"b","minimumStrict");return A.assertShapesMatch(t.shape,e.shape,"Error in minimumStrict: "),Mn(t,e)}}),bs=Object(C.a)({modStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","modStrict"),e=Object(S.a)(b,"b","modStrict");return A.assertShapesMatch(t.shape,e.shape,"Error in modStrict: "),Ln(t,e)}}),ys=Object(C.a)({mulStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","mul"),e=Object(S.a)(b,"b","mul");return A.assertShapesMatch(t.shape,e.shape,"Error in multiplyStrict: "),Rt(t,e)}}),xs=Object(C.a)({powStrict_:function(base,t){return gt("strict variants of ops have been deprecated and will be removed in future"),A.assertShapesMatch(base.shape,t.shape,"Error in powStrict: "),nr(base,t)}}),vs=Object(C.a)({squaredDifferenceStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","squaredDifferenceStrict"),e=Object(S.a)(b,"b","squaredDifferenceStrict");return A.assertShapesMatch(t.shape,e.shape,"Error in squaredDifferenceStrict: "),Wr(t,e)}}),ws=Object(C.a)({subStrict_:function(a,b){gt("strict variants of ops have been deprecated and will be removed in future");const t=Object(S.a)(a,"a","subStrict"),e=Object(S.a)(b,"b","subStrict");return A.assertShapesMatch(t.shape,e.shape,"Error in subStrict: "),sub(t,e)}});const Os=Object(C.a)({norm_:function(t,e="euclidean",n=null,r=!1){const o=function t(e,p,n=null){if(0===e.rank)return k(e);if(1!==e.rank&&null===n)return t(B(e,[-1]),p,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===p)return Cn(k(e),n);if(p===1/0)return Sn(k(e),n);if(p===-1/0)return zn(k(e),n);if("euclidean"===p||2===p)return Pr(Cn(nr(k(e),sn(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+p)}if(Array.isArray(n)&&2===n.length){if(1===p)return Sn(Cn(k(e),n[0]),n[1]-1);if(p===1/0)return Sn(Cn(k(e),n[1]),n[0]);if(p===-1/0)return zn(Cn(k(e),n[1]),n[0]);if("fro"===p||"euclidean"===p)return Pr(Cn(Bn(e),n));throw new Error("Error in norm: invalid ord value: "+p)}throw new Error("Error in norm: invalid axis: "+n)}(t=Object(S.a)(t,"x","norm"),e,n);let l=o.shape;if(r){const e=Object(A.parseAxisParam)(n,t.shape);l=D(o.shape,e)}return B(o,l)}});const Ss=Object(C.a)({movingAverage_:function(t,e,n,r,o=!0){const l=Object(S.a)(t,"v","movingAverage"),c=Object(S.a)(e,"x","movingAverage"),h=Object(S.a)(n,"decay","movingAverage");Object(E.assertTypesMatch)(l,c),A.assert(A.arraysEqual(l.shape,c.shape),()=>"Shape mismatch in v and x");const d=sn(1),f=sub(d,h);let m=Rt(sub(c,l),f);if(o){A.assert(null!=r,()=>"When using zeroDebias: true, step is required.");const t=Object(S.a)(r,"step","movingAverage");m=div(m,sub(d,nr(h,t)))}return T(l,m)}});function Cs(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,l="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(l+` update.rank < ${o}. `);if(t.length<r+(n.rank-o))throw new Error(l+" Output shape length < "+(r+(n.rank-o)));if(n.rank!==o+t.length-r)throw new Error(l+" update.rank != "+(o+t.length-r));for(let t=0;t<o;++t)if(n.shape[t]!==e.shape[t])throw new Error(l+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-o;++e)if(n.shape[e+o]!==t[e+r])throw new Error(l+` updates.shape[${e+o}] (${n.shape[e+o]}) != shape[${e+o}] (${t[e+o]})`)}function ks(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}Cs(n,e,t)}function Ns(t,e,n){const r=e.shape.length,o=r>1?e.shape[r-1]:1,l=n.length;let c=1;for(let i=o;i<l;++i)c*=n[i];const h=o<1?1:o;return{sliceRank:o,numUpdates:Object(A.sizeFromShape)(e.shape)/h,sliceSize:c,strides:[...Object(A.computeStrides)(n.slice(0,o)),1],outputSize:Object(A.sizeFromShape)(n)}}const Is=Object(C.a)({scatterND_:function(t,e,n){const r=Object(S.a)(t,"indices","scatterND","int32"),o=Object(S.a)(e,"updates","scatterND");ks(o,r,n);const l={indices:r,updates:o},c={shape:n};return x.a.runKernelFunc(t=>t.scatterND(r,o,n),l,null,O.nc,c)}});const Es=Object(C.a)({sparseToDense_:function(t,e,n,r=0){const o=Object(S.a)(t,"sparseIndices","sparseToDense","int32"),l=Object(S.a)(e,"sparseValues","sparseToDense"),c=Object(S.a)(r,"defaultValue","sparseToDense",l.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const o=t.rank>0?t.shape[0]:1,l=t.rank>1?t.shape[1]:1;if(n.length!==l)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${l}.`);const c=e.size;if(0!==e.rank&&(1!==e.rank||c!==o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,l,n,c);const h={sparseIndices:o,sparseValues:l,defaultValue:c},d={outputShape:n};return x.a.runKernelFunc(t=>t.sparseToDense(o,l,n,c),h,null,O.yc,d)}});const Ts=Object(C.a)({gatherND_:function(t,e){const n=Object(S.a)(e,"indices","gatherND","int32"),r=Object(S.a)(t,"x","gatherND"),o={params:r,indices:n};return x.a.runKernelFunc(t=>t.gatherND(r,n),o,null,O.ib)}});const As=Object(C.a)({dropout_:function(t,e,n,r){const o=Object(S.a)(t,"x","dropout");if(A.assert("float32"===o.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),A.assert(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof mt.a?o.clone():o;const l=function(t,e){if(null==e)return t.shape.slice();if(A.arraysEqual(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let i=0;i<t.shape.length;i++)null==e[i]&&null!=t.shape[i]?n.push(t.shape[i]):n.push(e[i]);return n}return e}(o,n),c=1-e,h=div(Ve(T(fr(l,0,1,"float32",r),c)),c);return Rt(o,h)}});function Rs(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function $s(t,a,b){const e=1-t%2,n=new Float32Array(t);for(let i=0;i<t;++i){const r=2*Math.PI*i/(t+e-1);n[i]=a-b*Math.cos(r)}return mr(n,"float32")}const Fs=async function(t,e,n=1){const r=Object(S.a)(t,"predictions","inTopK"),o=Object(S.a)(e,"targets","inTopK");Object(A.assert)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object(A.assert)(r.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${o.rank}`),Object(A.assertShapesMatch)(r.shape.slice(0,r.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const l=r.shape[r.shape.length-1];Object(A.assert)(n>0&&n<=l,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${l}), but got ${n}`);const c=await r.data(),h=await o.data(),[d,f]=[c.length/l,l],m=Object(A.getTypedArrayFromDType)("bool",d);for(let b=0;b<d;b++){const t=b*f,e=c.subarray(t,t+f),r=[];for(let i=0;i<e.length;i++)r.push({value:e[i],index:i});r.sort((a,b)=>b.value-a.value),m[b]=0;for(let i=0;i<n;i++)if(r[i].index===h[b]){m[b]=1;break}}return t!==r&&r.dispose(),e!==o&&o.dispose(),Object(Et.a)(m,o.shape,"bool")};const js=Object(C.a)({conv2DBackpropFilter_:function(t,e,n,r,o,l="NHWC",c){let h=t;3===t.rank&&(h=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d=e;3===d.rank&&(d=B(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A.assert(4===h.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+h.shape+"."),A.assert(4===d.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+d.shape+"."),A.assert(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const f="NHWC"===l?h.shape[3]:h.shape[1],m="NHWC"===l?d.shape[3]:d.shape[1];A.assert(f===n[2],()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`),A.assert(m===n[3],()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`),null!=c&&A.assert(A.isInt(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${c} but got pad ${o}.`);const y={x:h,dy:d},v={strides:r,pad:o,dataFormat:l,dimRoundingMode:c};return x.a.runKernelFunc(t=>{const e=pt(l),f=nt(h.shape,n,r,1,o,c,!1,e);return t.conv2dDerFilter(h,d,f)},y,null,O.B,v)}});function Ds(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Rt(t,Gr(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function _s(t,e){let n=e;const r=Ee(t.shape,e.shape);return r.length>0&&(n=Cn(n,r)),B(n,t.shape)}function zs(t,e,n){if("linear"===e)return t;if("relu"===e)return xr(t);if("elu"===e)return De(t);if("relu6"===e)return vr(t);if("prelu"===e)return rr(t,n);throw new Error(`Unknown fused activation ${e}.`)}const Ms=(t,e)=>!(t>0)||"linear"===e;const Ls=Object(C.a)({fusedConv2d_:function({x:t,filter:filter,strides:e,pad:n,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:c,activation:h="linear",preluActivationWeights:d}){if(h=h||"linear",!1===Ms(x.a.state.gradientDepth,h)){let f=de(t,filter,e,n,r,o,l);return null!=c&&(f=T(f,c)),zs(f,h,d)}const f=Object(S.a)(t,"x","conv2d"),m=Object(S.a)(filter,"filter","conv2d");let y=f,v=!1;3===f.rank&&(v=!0,y=B(f,[1,f.shape[0],f.shape[1],f.shape[2]])),A.assert(4===y.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+y.rank+"."),A.assert(4===m.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+m.rank+"."),null!=l&&A.assert(A.isInt(n),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${n}.`),A.assert(y.shape[3]===m.shape[2],()=>`Error in conv2d: depth of input (${y.shape[3]}) must match input depth for filter ${m.shape[2]}.`),A.assert(ht(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),A.assert("NHWC"===r,()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);const w=nt(y.shape,m.shape,e,o,n,l);let C,k;null!=c&&(C=Object(S.a)(c,"bias","fused conv2d"),[C]=Object(E.makeTypesMatch)(C,f),Te(w.outShape,C.shape)),null!=d&&(k=Object(S.a)(d,"prelu weights","fused conv2d"));const N=(t,r)=>{const[l,c,d,f]=r,m=Ds(t,d,h);A.assert(ct(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const y=[fe(c.shape,m,l,e,n),js(c,m,l.shape,e,n)];if(null!=f){const t=_s(f,m);y.push(t)}return y},I=t=>t.fusedConv2d({input:y,filter:m,convInfo:w,bias:C,activation:h,preluActivationWeights:k}),R={x:y,filter:m,bias:C,preluActivationWeights:k},$={strides:e,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l,activation:h};if(null==c){return xn((t,filter,e)=>{let n=x.a.runKernelFunc(I,R,null,O.gb,$);return e([filter,t,n]),v&&(n=B(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:N}})(y,m)}return xn((t,filter,e,n)=>{let r=x.a.runKernelFunc(I,R,null,O.gb,$);return n([filter,t,r,e]),v&&(r=B(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:N}})(y,m,C)}});const Bs=Object(C.a)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r){let o=t;3===t.rank&&(o=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:o,dy:l};return x.a.runKernelFunc(t=>t.depthwiseConv2DDerFilter(o,l,r),c,null,O.M)}});const Ps=Object(C.a)({depthwiseConv2dNativeBackpropInput_:function(t,e,filter,n){let r=e,o=!1;3===e.rank&&(o=!0,r=B(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:r},c=x.a.runKernelFunc(t=>t.depthwiseConv2DDerInput(r,filter,n),l,null,O.N);return o?B(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Ws=Object(C.a)({fusedDepthwiseConv2d_:function({x:t,filter:filter,strides:e,pad:n,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:c,activation:h="linear",preluActivationWeights:d}){if(!1===Ms(x.a.state.gradientDepth,h)){let f=Se(t,filter,e,n,r,o,l);return null!=c&&(f=T(f,c)),zs(f,h,d)}const f=Object(S.a)(t,"x","depthwiseConv2d"),m=Object(S.a)(filter,"filter","depthwiseConv2d");let y=f,v=!1;3===f.rank&&(v=!0,y=B(f,[1,f.shape[0],f.shape[1],f.shape[2]])),A.assert(4===y.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${y.rank}.`),A.assert(4===m.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),A.assert(y.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${y.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),null==o&&(o=[1,1]),A.assert(ht(e,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),null!=l&&A.assert(A.isInt(n),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${l} but got pad ${n}.`);const w=nt(y.shape,m.shape,e,o,n,l,!0);let C,k;null!=c&&(C=Object(S.a)(c,"bias","fused conv2d"),[C]=Object(E.makeTypesMatch)(C,f),Te(w.outShape,C.shape)),null!=d&&(k=Object(S.a)(d,"prelu weights","fused depthwiseConv2d"));const N=(t,e)=>{A.assert(ct(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[n,r,l,c]=e,d=Ds(t,l,h),f=Ps(r.shape,d,n,w),m=Bs(r,d,n.shape,w);if(null!=c){return[f,m,_s(C,d)]}return[f,m]},I=t=>t.fusedDepthwiseConv2D({input:y,filter:m,convInfo:w,bias:C,activation:h,preluActivationWeights:k}),R={x:y,filter:m,bias:C,preluActivationWeights:k},$={strides:e,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l,activation:h};if(null==c){return xn((t,filter,e)=>{let n=x.a.runKernelFunc(I,R,null,O.hb,$);return e([filter,t,n]),v&&(n=B(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:N}})(y,m)}return xn((t,filter,e,n)=>{let r=x.a.runKernelFunc(I,R,null,O.hb,$);return n([filter,t,r,e]),v&&(r=B(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:N}})(y,m,C)}});const Us=Object(C.a)({fusedMatMul_:function({a:a,b:b,transposeA:t=!1,transposeB:e=!1,bias:n,activation:r="linear",preluActivationWeights:o}){if(!1===Ms(x.a.state.gradientDepth,r)){let l=At(a,b,t,e);return null!=n&&(l=T(l,n)),zs(l,r,o)}let l=Object(S.a)(a,"a","fused matMul"),c=Object(S.a)(b,"b","fused matMul");[l,c]=Object(E.makeTypesMatch)(l,c);const h=t?l.shape[l.rank-2]:l.shape[l.rank-1],d=e?c.shape[c.rank-1]:c.shape[c.rank-2],f=t?l.shape[l.rank-1]:l.shape[l.rank-2],m=e?c.shape[c.rank-2]:c.shape[c.rank-1],y=l.shape.slice(0,-2),v=c.shape.slice(0,-2),w=A.sizeFromShape(y),C=A.sizeFromShape(v);A.assert(l.rank>=2&&c.rank>=2&&l.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${c.rank}.`),A.assert(A.arraysEqual(y,v),()=>`Error in fused matMul: outer dimensions (${y}) and (${v}) of Tensors with shapes ${l.shape} and `+c.shape+" must match."),A.assert(h===d,()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${t} and transposeB=${e} must match.`);const k=l.shape.slice(0,-2).concat([f,m]),N=B(l,t?[w,h,f]:[w,f,h]),I=B(c,e?[C,m,d]:[C,d,m]);let R,$;null!=n&&(R=Object(S.a)(n,"bias","fused matMul"),[R]=Object(E.makeTypesMatch)(R,l),Te(k,R.shape)),null!=o&&($=Object(S.a)(o,"prelu weights","fused matMul"));const F=(o,l)=>{const[c,h,d,f]=l,m=Ds(B(o,d.shape),d,r);let y,x;if(t||e?!t&&e?(y=At(m,h,!1,!1),x=At(m,c,!0,!1)):t&&!e?(y=At(h,m,!1,!0),x=At(c,m,!1,!1)):(y=At(h,m,!0,!0),x=At(m,c,!0,!0)):(y=At(m,h,!1,!0),x=At(c,m,!0,!1)),null!=n){return[y,x,_s(f,m)]}return[y,x]},j=n=>n.fusedBatchMatMul({a:N,b:I,transposeA:t,transposeB:e,bias:R,activation:r,preluActivationWeights:$}),D={a:N,b:I,bias:R,preluActivationWeights:$},_={transposeA:t,transposeB:e,activation:r};if(null==n){return xn((t,e,n)=>{const r=x.a.runKernelFunc(j,D,null,O.Pc,_);return n([t,e,r]),{value:B(r,k),gradFunc:F}})(N,I)}return xn((t,e,n,r)=>{const o=x.a.runKernelFunc(j,D,null,O.Pc,_);return r([t,e,o,n]),{value:B(o,k),gradFunc:F}})(N,I,R)}});const Vs=Object(C.a)({hammingWindow_:function(t){return $s(t,.54,.46)}});const Gs=Object(C.a)({hannWindow_:function(t){return $s(t,.5,.5)}});const Hs=Object(C.a)({frame_:function(t,e,n,r=!1,o=0){let l=0;const output=[];for(;l+e<=t.size;)output.push(qt(t,l,e)),l+=n;if(r)for(;l<t.size;){const r=l+e-t.size,c=Tt([qt(t,l,e-r),Ue([r],o)]);output.push(c),l+=n}return 0===output.length?Kr([],[0,e]):B(Tt(output),[output.length,e])}});const qs=Object(C.a)({stft_:function(t,e,n,r,o=Gs){null==r&&(r=Rs(e));const l=Hs(t,e,n),c=Rt(l,o(e)),output=[];for(let i=0;i<l.shape[0];i++)output.push(Ir(qt(c,[i,0],[1,e]),r));return Tt(output)}});const Ks=Object(C.a)({cropAndResize_:function(image,t,e,n,r,o){const l=Object(S.a)(image,"image","cropAndResize"),c=Object(S.a)(t,"boxes","cropAndResize","float32"),h=Object(S.a)(e,"boxInd","cropAndResize","int32");r=r||"bilinear",o=o||0;const d=c.shape[0];A.assert(4===l.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${l.rank}.`),A.assert(2===c.rank&&4===c.shape[1],()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${c.shape}.`),A.assert(1===h.rank&&h.shape[0]===d,()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${c.shape}.`),A.assert(2===n.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),A.assert(n[0]>=1&&n[1]>=1,()=>"cropSize must be atleast [1,1], but was "+n),A.assert("bilinear"===r||"nearest"===r,()=>"method must be bilinear or nearest, but was "+r);const f={image:l,boxes:c,boxInd:h},m={method:r,extrapolationValue:o,cropSize:n};return x.a.runKernelFunc(t=>t.cropAndResize(l,c,h,n,r,o),f,null,O.I,m)}});const Js=Object(C.a)({flipLeftRight_:function(image){const t=Object(S.a)(image,"image","flipLeftRight","float32");A.assert(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return x.a.runKernel(O.bb,e,{})}});const Xs=Object(C.a)({rotateWithOffset_:function(image,t,e=0,n=.5){const r=Object(S.a)(image,"image","rotateWithOffset","float32");A.assert(4===r.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},l={radians:t,fillValue:e,center:n};return x.a.runKernel(O.kc,o,l)}});function Ys(t,e,n,r,o,l){null==r&&(r=.5),null==o&&(o=Number.NEGATIVE_INFINITY),null==l&&(l=0);const c=t.shape[0];return n=Math.min(n,c),A.assert(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),A.assert(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),A.assert(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),A.assert(1===e.rank,()=>"scores must be a 1D tensor"),A.assert(e.shape[0]===c,()=>`scores has incompatible shape with boxes. Expected ${c}, but was `+e.shape[0]),A.assert(0<=l&&l<=1,()=>`softNmsSigma must be in [0, 1], but was '${l}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:l}}const Qs=Object(C.a)({nonMaxSuppression_:function(t,e,n,r=.5,o=Number.NEGATIVE_INFINITY){const l=Object(S.a)(t,"boxes","nonMaxSuppression"),c=Object(S.a)(e,"scores","nonMaxSuppression"),h=Ys(l,c,n,r,o);n=h.maxOutputSize,r=h.iouThreshold,o=h.scoreThreshold;const d={maxOutputSize:n,iouThreshold:r,scoreThreshold:o};return x.a.runKernelFunc(b=>b.nonMaxSuppression(l,c,n,r,o),{boxes:l,scores:c},null,O.Pb,d)}});function Zs(t,element,e){const n=function(t,e,n){return function(t,e,n){let r=0,o=t.length,l=0,c=!1;for(;r<o;){l=r+(o-r>>>1);const h=n(e,t[l]);h>0?r=l+1:(o=l,c=!h)}return c?r:-r-1}(t,e,n||ta)}(t,element,e),r=n<0?-(n+1):n;t.splice(r,0,element)}function ta(a,b){return a>b?1:a<b?-1:0}function ea(t,e,n,r,o){return sa(t,e,n,r,o,0).selectedIndices}function na(t,e,n,r,o,l){return sa(t,e,n,r,o,0,!1,l,!0)}function ra(t,e,n,r,o,l){return sa(t,e,n,r,o,l,!0)}function sa(t,e,n,r,o,l,c=!1,h=!1,d=!1){const f=[];for(let i=0;i<e.length;i++)e[i]>o&&f.push({score:e[i],boxIndex:i,suppressBeginIndex:0});f.sort(oa);const m=l>0?-.5/l:0,y=[],x=[];for(;y.length<n&&f.length>0;){const e=f.pop(),{score:n,boxIndex:l,suppressBeginIndex:c}=e;if(n<o)break;let h=!1;for(let n=y.length-1;n>=c;--n){const c=aa(t,l,y[n]);if(c>=r){h=!0;break}if(e.score=e.score*ia(r,m,c),e.score<=o)break}e.suppressBeginIndex=y.length,h||(e.score===n?(y.push(l),x.push(e.score)):e.score>o&&Zs(f,e,oa))}const v=y.length,w=n-v;h&&w>0&&(y.push(...new Array(w).fill(0)),x.push(...new Array(w).fill(0)));const O={selectedIndices:mr(y,"int32")};return c&&(O.selectedScores=mr(x,"float32")),d&&(O.validOutputs=sn(v,"int32")),O}function aa(t,i,e){const n=t.subarray(4*i,4*i+4),r=t.subarray(4*e,4*e+4),o=Math.min(n[0],n[2]),l=Math.min(n[1],n[3]),c=Math.max(n[0],n[2]),h=Math.max(n[1],n[3]),d=Math.min(r[0],r[2]),f=Math.min(r[1],r[3]),m=Math.max(r[0],r[2]),y=Math.max(r[1],r[3]),x=(c-o)*(h-l),v=(m-d)*(y-f);if(x<=0||v<=0)return 0;const w=Math.max(o,d),O=Math.max(l,f),S=Math.min(c,m),C=Math.min(h,y),k=Math.max(S-w,0)*Math.max(C-O,0);return k/(x+v-k)}function ia(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function oa(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const ua=async function(t,e,n,r=.5,o=Number.NEGATIVE_INFINITY){const l=Object(S.a)(t,"boxes","nonMaxSuppressionAsync"),c=Object(S.a)(e,"scores","nonMaxSuppressionAsync"),h=Ys(l,c,n,r,o);n=h.maxOutputSize,r=h.iouThreshold,o=h.scoreThreshold;const d=await Promise.all([l.data(),c.data()]),f=ea(d[0],d[1],n,r,o);return l!==t&&l.dispose(),c!==e&&c.dispose(),f};const la=Object(C.a)({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,o=Number.NEGATIVE_INFINITY,l=0){const c=Object(S.a)(t,"boxes","nonMaxSuppression"),h=Object(S.a)(e,"scores","nonMaxSuppression"),d=Ys(c,h,n,r,o,l),f={boxes:c,scores:h},m={maxOutputSize:n=d.maxOutputSize,iouThreshold:r=d.iouThreshold,scoreThreshold:o=d.scoreThreshold,softNmsSigma:l=d.softNmsSigma},y=x.a.runKernel(O.Rb,f,m);return{selectedIndices:y[0],selectedScores:y[1]}}});const ca=async function(t,e,n,r=.5,o=Number.NEGATIVE_INFINITY,l=0){const c=Object(S.a)(t,"boxes","nonMaxSuppressionAsync"),h=Object(S.a)(e,"scores","nonMaxSuppressionAsync"),d=Ys(c,h,n,r,o,l);n=d.maxOutputSize,r=d.iouThreshold,o=d.scoreThreshold,l=d.softNmsSigma;const f=await Promise.all([c.data(),h.data()]),m=ra(f[0],f[1],n,r,o,l);return c!==t&&c.dispose(),h!==e&&h.dispose(),m};const ha=Object(C.a)({nonMaxSuppressionPadded_:function(t,e,n,r=.5,o=Number.NEGATIVE_INFINITY,l=!1){const c=Object(S.a)(t,"boxes","nonMaxSuppression"),h=Object(S.a)(e,"scores","nonMaxSuppression"),d=Ys(c,h,n,r,o,null),f={boxes:c,scores:h},m={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:l},y=x.a.runKernel(O.Qb,f,m);return{selectedIndices:y[0],validOutputs:y[1]}}});const da=async function(t,e,n,r=.5,o=Number.NEGATIVE_INFINITY,l=!1){const c=Object(S.a)(t,"boxes","nonMaxSuppressionAsync"),h=Object(S.a)(e,"scores","nonMaxSuppressionAsync"),d=Ys(c,h,n,r,o,null),f=d.maxOutputSize,m=d.iouThreshold,y=d.scoreThreshold,[x,v]=await Promise.all([c.data(),h.data()]),w=na(x,v,f,m,y,l);return c!==t&&c.dispose(),h!==e&&h.dispose(),w};const pa=Object(C.a)({resizeBilinear_:function(t,e,n=!1){const r=Object(S.a)(t,"images","resizeBilinear");A.assert(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),A.assert(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+".");let o=r,l=!1;3===r.rank&&(l=!0,o=B(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[c,h]=e,d={images:o},f={alignCorners:n,size:e},m=x.a.runKernelFunc((t,e)=>(e([o]),t.resizeBilinear(o,c,h,n)),d,null,O.fc,f);return l?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const fa=Object(C.a)({resizeNearestNeighbor_:function(t,e,n=!1){const r=Object(S.a)(t,"images","resizeNearestNeighbor");A.assert(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),A.assert(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),A.assert("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let o=r,l=!1;3===r.rank&&(l=!0,o=B(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[c,h]=e,d={images:o},f={alignCorners:n,size:e},m=x.a.runKernelFunc((t,e)=>(e([o]),t.resizeNearestNeighbor(o,c,h,n)),d,null,O.hc,f);return l?B(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const ma=Object(C.a)({bandPart_:function(a,t,e){Object(A.assert)(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Object(A.assert)(e%1==0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const n=Object(S.a)(a,"a","bandPart");Object(A.assert)(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);const r=n.shape,[o,l]=n.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(e<=l))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${l}).`);t<0&&(t=o),e<0&&(e=l);const i=B(gr(0,o,1,"int32"),[-1,1]),c=gr(0,l,1,"int32"),h=sub(i,c),d=In(pn(h,sn(+t,"int32")),Qe(h,sn(-e,"int32"))),f=jn([o,l],n.dtype);return B(Vr(ns(B(n,[-1,o,l])).map(t=>Re(d,t,f))),r)}});const ga=Object(C.a)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(A.assert)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let i=1;i<t.length;++i)Object(A.assert)(t[i].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[i].shape[0]} vs. ${n})`)}else e=!0,t=Nr(t,t.shape[0],0).map(t=>Ur(t,[0]));Object(A.assert)(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let i=0;i<t.length;++i)n.push(x.a.tidy(()=>{let t=r[i];if(i>0)for(let e=0;e<i;++e){const r=Rt(Cn(Rt(n[e],t)),n[e]);t=sub(t,r)}return div(t,Os(t,"euclidean"))}));return e?Vr(n,0):n}});function ba(t,e=!1){return x.a.tidy(()=>{Object(A.assert)(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let q=Pe(n),o=ne(t);const l=Kr([[1]],[1,1]);let c=ne(l);const h=n>=r?r:n;for(let t=0;t<h;++t){const e=o,h=c,d=q;[c,o,q]=x.a.tidy(()=>{const e=qt(o,[t,t],[n-t,1]),h=Os(e),d=qt(o,[t,t],[1,1]),s=Re(Ye(d,0),Kr([[-1]]),Kr([[1]])),f=sub(d,Rt(s,h)),m=div(e,f);c=1===m.shape[0]?ne(l):Tt([l,qt(m,[1,0],[m.shape[0]-1,m.shape[1]])],0);const y=vn(div(At(s,f),h)),x=qt(o,[t,0],[n-t,r]),v=Rt(y,c),w=P(c);if(0===t)o=sub(x,At(v,At(w,x)));else{const e=sub(x,At(v,At(w,x)));o=Tt([qt(o,[0,0],[t,r]),e],0)}const O=P(v),S=qt(q,[0,t],[n,q.shape[1]-t]);if(0===t)q=sub(S,At(At(S,c),O));else{const e=sub(S,At(At(S,c),O));q=Tt([qt(q,[0,0],[n,t]),e],1)}return[c,o,q]}),vt([e,h,d])}return!e&&n>r&&(q=qt(q,[0,0],[n,r]),o=qt(o,[0,0],[r,r])),[q,o]})}const ya=Object(C.a)({qr_:function(t,e=!1){if(Object(A.assert)(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank),2===t.rank)return ba(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=ns(B(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),o=[],l=[];r.forEach(t=>{const[n,r]=ba(t,e);o.push(n),l.push(r)});return[B(Vr(o,0),t.shape),B(Vr(l,0),t.shape)]}}});var xa;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(xa||(xa={}));const va=Object(C.a)({computeWeightedLoss_:function(t,e,n=xa.SUM_BY_NONZERO_WEIGHTS){const r=Object(S.a)(t,"losses","computeWeightedLoss");let o=null;null!=e&&(o=Object(S.a)(e,"weights","computeWeightedLoss"));const l=null==o?r:Rt(r,o);if(n===xa.NONE)return l;if(n===xa.SUM)return Cn(l);if(n===xa.MEAN){if(null==o)return _n(l);{const t=r.size/o.size,e=div(Cn(l),Cn(o));return t>1?div(e,sn(t)):e}}if(n===xa.SUM_BY_NONZERO_WEIGHTS){if(null==o)return div(Cn(l),sn(r.size));{const t=Rt(o,Dn(r.shape)),e=Q(Cn(Vn(t,sn(0))),"float32");return div(Cn(l),e)}}throw Error("Unknown reduction: "+n)}});const wa=Object(C.a)({absoluteDifference_:function(t,e,n,r=xa.SUM_BY_NONZERO_WEIGHTS){const o=Object(S.a)(t,"labels","absoluteDifference"),l=Object(S.a)(e,"predictions","absoluteDifference");let c=null;null!=n&&(c=Object(S.a)(n,"weights","absoluteDifference")),Object(A.assertShapesMatch)(o.shape,l.shape,"Error in absoluteDifference: ");const h=k(sub(o,l));return va(h,c,r)}});const Oa=Object(C.a)({cosineDistance_:function(t,e,n,r,o=xa.SUM_BY_NONZERO_WEIGHTS){const l=Object(S.a)(t,"labels","cosineDistance"),c=Object(S.a)(e,"predictions","cosineDistance");let h=null;null!=r&&(h=Object(S.a)(r,"weights","cosineDistance")),Object(A.assertShapesMatch)(l.shape,c.shape,"Error in cosineDistance: ");const d=sn(1),f=sub(d,Cn(Rt(l,c),n,!0));return va(f,h,o)}});const Sa=Object(C.a)({hingeLoss_:function(t,e,n,r=xa.SUM_BY_NONZERO_WEIGHTS){let o=Object(S.a)(t,"labels","hingeLoss");const l=Object(S.a)(e,"predictions","hingeLoss");let c=null;null!=n&&(c=Object(S.a)(n,"weights","hingeLoss")),Object(A.assertShapesMatch)(o.shape,l.shape,"Error in hingeLoss: ");const h=sn(1);o=sub(Rt(sn(2),o),h);const d=xr(sub(h,Rt(o,l)));return va(d,c,r)}});const Ca=Object(C.a)({huberLoss_:function(t,e,n,r=1,o=xa.SUM_BY_NONZERO_WEIGHTS){const l=Object(S.a)(t,"labels","huberLoss"),c=Object(S.a)(e,"predictions","huberLoss");let h=null;null!=n&&(h=Object(S.a)(n,"weights","huberLoss")),Object(A.assertShapesMatch)(l.shape,c.shape,"Error in huberLoss: ");const d=sn(r),f=k(sub(c,l)),m=Mn(f,d),y=sub(f,m),x=T(Rt(sn(.5),Bn(m)),Rt(d,y));return va(x,h,o)}});const ka=Object(C.a)({logLoss_:function(t,e,n,r=1e-7,o=xa.SUM_BY_NONZERO_WEIGHTS){const l=Object(S.a)(t,"labels","logLoss"),c=Object(S.a)(e,"predictions","logLoss");let h=null;null!=n&&(h=Object(S.a)(n,"weights","logLoss")),Object(A.assertShapesMatch)(l.shape,c.shape,"Error in logLoss: ");const d=sn(1),f=sn(r),m=vn(Rt(l,gn(T(c,f)))),y=Rt(sub(d,l),gn(T(sub(d,c),f))),x=sub(m,y);return va(x,h,o)}});const Na=Object(C.a)({meanSquaredError_:function(t,e,n,r=xa.SUM_BY_NONZERO_WEIGHTS){const o=Object(S.a)(t,"labels","meanSquaredError"),l=Object(S.a)(e,"predictions","meanSquaredError");let c=null;null!=n&&(c=Object(S.a)(n,"weights","meanSquaredError")),Object(A.assertShapesMatch)(o.shape,l.shape,"Error in meanSquaredError: ");const h=Wr(o,l);return va(h,c,r)}});const Ia=Object(C.a)({sigmoidCrossEntropy_:function(t,e,n,r=0,o=xa.SUM_BY_NONZERO_WEIGHTS){let l=Object(S.a)(t,"multiClassLabels","sigmoidCrossEntropy");const c=Object(S.a)(e,"logits","sigmoidCrossEntropy");let h=null;if(null!=n&&(h=Object(S.a)(n,"weights","sigmoidCrossEntropy")),Object(A.assertShapesMatch)(l.shape,c.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=sn(r),e=sn(1),n=sn(.5);l=T(Rt(l,sub(e,t)),Rt(n,t))}const d=function(t,e){const n=Object(S.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(S.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(A.assertShapesMatch)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=xr(r),l=Rt(r,n),c=bn(ze(vn(k(r))));return T(sub(o,l),c)}(l,c);return va(d,h,o)}});const Ea=Object(C.a)({softmaxCrossEntropy_:function(t,e,n,r=0,o=xa.SUM_BY_NONZERO_WEIGHTS){let l=Object(S.a)(t,"onehotLabels","softmaxCrossEntropy");const c=Object(S.a)(e,"logits","softmaxCrossEntropy");let h=null;if(null!=n&&(h=Object(S.a)(n,"weights","softmaxCrossEntropy")),Object(A.assertShapesMatch)(l.shape,c.shape,"Error in softmaxCrossEntropy: "),r>0){const t=sn(r),e=sn(1),n=sn(l.shape[1]);l=T(Rt(l,sub(e,t)),div(t,n))}const d=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return xn((t,e,r)=>{const o=Nn(e,[n],!0),l=sub(Q(e,"float32"),o);r([t,l]);const c=vn(Rt(l,t));return{value:Cn(c,[n]),gradFunc:(t,e)=>{const[r,o]=e,l=D(t.shape,[n]);return[Rt(B(t,l),sub(Q(r,"float32"),ze(o))),Rt(B(t,l),sub(ze(o),Q(r,"float32")))]}}})(t,e)}(l,c);return va(d,h,o)}}),Ta={fft:We,ifft:Ze,rfft:Ir,irfft:an},Aa={hammingWindow:Vs,hannWindow:Gs,frame:Hs,stft:qs},Ra={flipLeftRight:Js,resizeNearestNeighbor:fa,resizeBilinear:pa,rotateWithOffset:Xs,cropAndResize:Ks,nonMaxSuppression:Qs,nonMaxSuppressionAsync:ua,nonMaxSuppressionWithScore:la,nonMaxSuppressionWithScoreAsync:ca,nonMaxSuppressionPadded:ha,nonMaxSuppressionPaddedAsync:da},$a={bandPart:ma,gramSchmidt:ga,qr:ya},Fa={absoluteDifference:wa,computeWeightedLoss:va,cosineDistance:Oa,hingeLoss:Sa,huberLoss:Ca,logLoss:ka,meanSquaredError:Na,sigmoidCrossEntropy:Ia,softmaxCrossEntropy:Ea};Object(mt.e)(c);var ja=n(184);class Da{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Da.instance&&(Da.instance=new Da),Da.instance}static registerSaveRouter(t){Da.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Da.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Da.getHandlers(t,"save")}static getLoadHandlers(t,e){return Da.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Da.getInstance().loadRouters:Da.getInstance().saveRouters).forEach(e=>{const o=e(t,n);null!==o&&r.push(o)}),r}}const _a=t=>Da.registerSaveRouter(t),za=t=>Da.registerLoadRouter(t),Ma=t=>Da.getSaveHandlers(t),La=(t,e)=>Da.getLoadHandlers(t,e);class Ba{constructor(){this.managers={}}static getInstance(){return null==Ba.instance&&(Ba.instance=new Ba),Ba.instance}static registerManager(t,e){Object(A.assert)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(A.assert)(t.length>0,()=>"scheme must not be an empty string.");const n=Ba.getInstance();Object(A.assert)(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Pa(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Ba.getSchemes().join(","));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function Wa(t,e,n=!1){Object(A.assert)(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=Da.getLoadHandlers(t);Object(A.assert)(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),Object(A.assert)(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const o=r[0],l=Da.getSaveHandlers(e);Object(A.assert)(l.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),Object(A.assert)(l.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const c=l[0],h=Pa(t).scheme,d=Pa(t).path,f=h===Pa(t).scheme,m=await o.load();n&&f&&await Ba.getManager(h).removeModel(d);const y=await c.save(m);return n&&!f&&await Ba.getManager(h).removeModel(d),y.modelArtifactsInfo}async function Ua(){const t=Ba.getSchemes(),e={};for(const n of t){const t=await Ba.getManager(n).listModels();for(const path in t){e[n+"://"+path]=t[path]}}return e}async function Va(t){const e=Pa(t);return Ba.getManager(e.scheme).removeModel(e.path)}async function Ga(t,e){return Wa(t,e,!1)}async function Ha(t,e){return Wa(t,e,!0)}function qa(){if(!Object(v.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Ka(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class Ja{constructor(t){if(this.indexedDB=qa(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Ka(r),r.onsuccess=()=>{const o=r.result;if(null==e){const e=o.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return o.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(o.close(),n(r.error)),e.oncomplete=()=>o.close()}else{const r=Object(ja.g)(e),l=o.transaction("model_info_store","readwrite");let c=l.objectStore("model_info_store");const h=c.put({modelPath:this.modelPath,modelArtifactsInfo:r});let d;h.onsuccess=()=>{d=o.transaction("models_store","readwrite");const h=d.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});h.onsuccess=()=>t({modelArtifactsInfo:r}),h.onerror=t=>{c=l.objectStore("model_info_store");const e=c.delete(this.modelPath);e.onsuccess=()=>(o.close(),n(h.error)),e.onerror=t=>(o.close(),n(h.error))}},h.onerror=t=>(o.close(),n(h.error)),l.oncomplete=()=>{null==d?o.close():d.oncomplete=()=>o.close()}}},r.onerror=t=>n(r.error)})}}Ja.URL_SCHEME="indexeddb://";const Xa=t=>{return Object(v.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ja.URL_SCHEME)?(e=t.slice(Ja.URL_SCHEME.length),new Ja(e)):null;var e};Da.registerSaveRouter(Xa),Da.registerLoadRouter(Xa);class Ya{constructor(){this.indexedDB=qa()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Ka(n),n.onsuccess=()=>{const r=n.result,o=r.transaction("model_info_store","readonly"),l=o.objectStore("model_info_store").getAll();l.onsuccess=()=>{const e={};for(const t of l.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},l.onerror=t=>(r.close(),e(l.error)),o.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(path){var t;return path=(t=path).startsWith(Ja.URL_SCHEME)?t.slice(Ja.URL_SCHEME.length):t,new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Ka(n),n.onsuccess=()=>{const r=n.result,o=r.transaction("model_info_store","readwrite"),l=o.objectStore("model_info_store"),c=l.get(path);let h;c.onsuccess=()=>{if(null==c.result)return r.close(),e(new Error(`Cannot find model with path '${path}' in IndexedDB.`));{const n=l.delete(path),o=()=>{h=r.transaction("models_store","readwrite");const n=h.objectStore("models_store").delete(path);n.onsuccess=()=>t(c.result.modelArtifactsInfo),n.onerror=t=>e(c.error)};n.onsuccess=o,n.onerror=t=>(o(),r.close(),e(c.error))}},c.onerror=t=>(r.close(),e(c.error)),o.oncomplete=()=>{null==h?r.close():h.oncomplete=()=>r.close()}},n.onerror=t=>e(n.error)})}}if(Object(v.b)().getBool("IS_BROWSER"))try{Ba.registerManager(Ja.URL_SCHEME,new Ya)}catch(t){}const Qa="tensorflowjs_models",Za="info",ti="model_topology",ei="weight_specs",ni="weight_data",ri="model_metadata";function si(path){return{info:[Qa,path,Za].join("/"),topology:[Qa,path,ti].join("/"),weightSpecs:[Qa,path,ei].join("/"),weightData:[Qa,path,ni].join("/"),modelMetadata:[Qa,path,ri].join("/")}}function ai(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join("/")}class ii{constructor(t){if(!Object(v.b)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=si(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Object(ja.g)(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(ja.a)(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const t=JSON.parse(o);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const l=this.LS.getItem(this.keys.weightData);if(null==l)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=Object(ja.b)(l),e}}ii.URL_SCHEME="localstorage://";const oi=t=>{return Object(v.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ii.URL_SCHEME)?(e=t.slice(ii.URL_SCHEME.length),new ii(e)):null;var e};Da.registerSaveRouter(oi),Da.registerLoadRouter(oi);class ui{constructor(){Object(A.assert)(Object(v.b)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(A.assert)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Qa+"/",n="/"+Za;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(e)&&r.endsWith(n)){t[ai(r)]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(path){var t;const e=si(path=(t=path).startsWith(ii.URL_SCHEME)?t.slice(ii.URL_SCHEME.length):t);if(null==this.LS.getItem(e.info))throw new Error(`Cannot find model at path '${path}'`);const n=JSON.parse(this.LS.getItem(e.info));return this.LS.removeItem(e.info),this.LS.removeItem(e.topology),this.LS.removeItem(e.weightSpecs),this.LS.removeItem(e.weightData),n}}if(Object(v.b)().getBool("IS_BROWSER"))try{Ba.registerManager(ii.URL_SCHEME,new ui)}catch(t){}function ci(t){return new Promise(t=>setTimeout(t)).then(t)}class hi{constructor(t){if(!Object(v.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(hi.URL_SCHEME)&&(t=t.slice(hi.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),l=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(l.download=this.modelTopologyFileName,l.href=o,await ci(()=>l.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ci(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(ja.g)(t)}}}}hi.URL_SCHEME="downloads://";class di{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const o=new FileReader;o.onload=o=>{const l=JSON.parse(o.target.result),c=l.modelTopology;if(null==c)return void r(new Error("modelTopology field is missing from file "+t.name));0===e.length&&n({modelTopology:c});const h=l.weightsManifest;if(null==h)return void r(new Error("weightManifest field is missing from file "+t.name));let d;try{d=this.checkManifestAndWeightFiles(h,e)}catch(t){return void r(t)}const f=[],m=[],y=[];h.forEach(t=>{t.paths.forEach(path=>{m.push(path),y.push(null)}),f.push(...t.weights)}),h.forEach(t=>{t.paths.forEach(path=>{const t=new FileReader;t.onload=t=>{const e=t.target.result,r=m.indexOf(path);y[r]=e,-1===y.indexOf(null)&&n({modelTopology:c,weightSpecs:f,weightData:Object(ja.d)(y),format:l.format,generatedBy:l.generatedBy,convertedBy:l.convertedBy,userDefinedMetadata:l.userDefinedMetadata})},t.onerror=t=>r(`Failed to weights data from file of path '${path}'.`),t.readAsArrayBuffer(d[path])})})},o.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>Object(ja.c)(t.name)),o={};for(const l of t)l.paths.forEach(path=>{const t=Object(ja.c)(path);if(-1!==n.indexOf(t))throw new Error(`Duplicate file basename found in weights manifest: '${t}'`);if(n.push(t),-1===r.indexOf(t))throw new Error(`Weight file with basename '${t}' is not provided.`);o[path]=e[r.indexOf(t)]});if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return o}}function pi(t){return new di(t)}function fi(t,e,n,r){!function(t){Object(A.assert)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(A.assert)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),Object(A.assert)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),Object(A.assert)(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e)}(n=null==n?0:n,r=null==r?1:r);let o=0;return Promise.all(t.map(l=>(l.then(l=>{const c=n+ ++o/t.length*(r-n);return e(c),l}),l)))}Da.registerSaveRouter(t=>Object(v.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(hi.URL_SCHEME)?function(t="model"){return new hi(t)}(t.slice(hi.URL_SCHEME.length)):null);var mi=n(202);async function gi(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(v.b)().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),o=(null==e.onProgress?await Promise.all(r):await fi(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(o):await fi(o,e.onProgress,.5,1)}async function bi(t,e="",n,r){return yi(t=>gi(t,{requestInit:r}))(t,e,n)}function yi(t){return async(e,n="",r)=>{const o=e.map(()=>!1),l={},c=null!=r?r.map(()=>!1):[],h=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const d="quantization"in t?t.quantization.dtype:t.dtype,f=mi.a[d]*A.sizeFromShape(t.shape),m=()=>{o[e]=!0,null==l[e]&&(l[e]=[]),l[e].push({manifestEntry:t,groupOffset:n,sizeBytes:f})};null!=r?r.forEach((e,n)=>{e===t.name&&(m(),c[n]=!0)}):m(),h.push(t.name),n+=f})}),!c.every(t=>t)){const t=r.filter((t,i)=>!c[i]);throw new Error("Could not find weights in manifest with names: "+t.join(", ")+". \nManifest JSON has weights with names: "+h.join(", ")+".")}const d=o.reduce((t,e,i)=>(e&&t.push(i),t),[]),f=[];d.forEach(i=>{e[i].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;f.push(e)})});const m=await t(f),y={};let x=0;return d.forEach(i=>{const t=e[i].paths.length;let n=0;for(let i=0;i<t;i++)n+=m[x+i].byteLength;const r=new ArrayBuffer(n),o=new Uint8Array(r);let c=0;for(let i=0;i<t;i++){const t=new Uint8Array(m[x+i]);o.set(t,c),c+=t.byteLength}l[i].forEach(t=>{const e=r.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(ja.e)(e,[t.manifestEntry]);for(const t in n)y[t]=n[t]}),x+=t}),y}}class xi{constructor(path,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,null!=t.fetchFunc?(Object(A.assert)("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Object(v.b)().platform.fetch,Object(A.assert)(null!=path&&path.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(path)&&Object(A.assert)(2===path.length,()=>`URL paths for http must have a length of 2, (actual length is ${path.length}).`),this.path=path,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const o=await this.fetch(this.path,e);if(o.ok)return{modelArtifactsInfo:Object(ja.g)(t),responses:[o]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+o.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,o=e.generatedBy,l=e.convertedBy,c=e.format,h=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let d,f;if(null!=r){const t=await this.loadWeights(r);[d,f]=t}return{modelTopology:n,weightSpecs:d,weightData:f,userDefinedMetadata:h,generatedBy:o,convertedBy:l,format:c}}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),o=n>e?t.substring(n):"";return[r+"/",o]}(e),o=this.weightPathPrefix||n,l=[];for(const e of t)l.push(...e.weights);const c=[];t.forEach(t=>{t.paths.forEach(path=>{c.push(o+path+r)})});const h=await gi(c,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[l,Object(ja.d)(h)]}}function vi(t){return null!=t.match(xi.URL_SCHEME_REGEX)}xi.URL_SCHEME_REGEX=/^https?:\/\//;const wi=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>vi(t)):vi(t),n)return Oi(t,e)}return null};function Oi(path,t){return new xi(path,t)}function Si(path,t){return Oi(path,t)}Da.registerSaveRouter(wi),Da.registerLoadRouter(wi);class Ci{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class ki{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function Ni(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new Ci(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ci({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ci({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function Ii(t){return new ki(t)}var Ei=n(190);let Ti;async function Ai(img,canvas){let t=Object(S.a)(img,"img","toPixels");if(!(img instanceof mt.a)){const e=t;t=Q(e,"int32"),e.dispose()}if(2!==t.rank&&3!==t.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const[e,n]=t.shape.slice(0,2),r=2===t.rank?1:t.shape[2];if(r>4||2===r)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+r);const data=await t.data(),o=zn(t),l=Sn(t),c=await Promise.all([o.data(),l.data()]),h=c[0],d=c[1],f=h[0],m=d[0];if(o.dispose(),l.dispose(),"float32"===t.dtype){if(f<0||m>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [${f} - ${m}].`)}else{if("int32"!==t.dtype)throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);if(f<0||m>255)throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [${f} - ${m}].`)}const y="float32"===t.dtype?255:1,x=new Uint8ClampedArray(n*e*4);for(let i=0;i<e*n;++i){let t,g,b,a;1===r?(t=data[i]*y,g=data[i]*y,b=data[i]*y,a=255):3===r?(t=data[3*i]*y,g=data[3*i+1]*y,b=data[3*i+2]*y,a=255):4===r&&(t=data[4*i]*y,g=data[4*i+1]*y,b=data[4*i+2]*y,a=data[4*i+3]*y);const e=4*i;x[e+0]=Math.round(t),x[e+1]=Math.round(g),x[e+2]=Math.round(b),x[e+3]=Math.round(a)}if(null!=canvas){canvas.width=n,canvas.height=e;const t=canvas.getContext("2d"),r=new ImageData(x,n,e);t.putImageData(r,0,0)}return t!==img&&t.dispose(),x}const Ri=Object(C.a)({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,o=!1,l=!1,c=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)l=!0;else{if(null==t.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);c=!0}if(o){const e=2;if(o&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(Ei.b)(O.eb,x.a.backendName)){const n={pixels:t},r={numChannels:e};return x.a.runKernel(O.eb,n,r)}const[h,d]=o?[t.videoWidth,t.videoHeight]:[t.width,t.height];let f,m;if(c?f=t.getContext("2d").getImageData(0,0,h,d).data:r||n?f=t.data:(l||o)&&(null==Ti&&(Ti=document.createElement("canvas").getContext("2d")),Ti.canvas.width=h,Ti.canvas.height=d,Ti.drawImage(t,0,0,h,d),f=Ti.getImageData(0,0,h,d).data),4===e)m=new Int32Array(f);else{const t=h*d;m=new Int32Array(t*e);for(let i=0;i<t;i++)for(let t=0;t<e;++t)m[i*e+t]=f[4*i+t]}return Jr(m,[d,h,e],"int32")}});class $i{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Fi{constructor(){this.classNameMap={}}static getMap(){return null==Fi.instance&&(Fi.instance=new Fi),Fi.instance}static register(t){Fi.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function ji(t){Object(A.assert)(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(A.assert)("string"==typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(A.assert)(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Fi.register(t)}const Di="2.3.0";class _i extends $i{minimize(t,e=!1,n){const{value:r,grads:o}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:o[t.name]}));this.applyGradients(t)}else this.applyGradients(o);return vt(o),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return yn(t,e)}dispose(){null!=this.iterations_&&vt(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:sn(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(_i,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});var zi=n(187);class Mi extends _i{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=x.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,i)=>{const n=x.a.registeredVariables[e];null==this.accumulatedGrads[i]&&(this.accumulatedGrads[i]={originalName:e+"/accum_grad",variable:xt(()=>$e(n).variable(!1))}),null==this.accumulatedUpdates[i]&&(this.accumulatedUpdates[i]={originalName:e+"/accum_var",variable:xt(()=>$e(n).variable(!1))});const r=Array.isArray(t)?t[i].tensor:t[e];if(null==r)return;const o=this.accumulatedGrads[i].variable,l=this.accumulatedUpdates[i].variable;xt(()=>{const t=T(Rt(o,this.rho),Rt(Bn(r),1-this.rho)),e=Rt(div(Pr(T(l,this.epsilon)),Pr(T(o,this.epsilon))),r),c=T(Rt(l,this.rho),Rt(Bn(e),1-this.rho));o.assign(t),l.assign(c);const h=T(Rt(e,-this.learningRate),n);n.assign(h)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(vt(this.accumulatedGrads.map(t=>t.variable)),vt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Mi.className="Adadelta",ji(Mi);class Li extends _i{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,i)=>{const n=x.a.registeredVariables[e];if(null==this.accumulatedGrads[i]){const t=!1;this.accumulatedGrads[i]={originalName:e+"/accumulator",variable:xt(()=>Ue(n.shape,this.initialAccumulatorValue).variable(t))}}const r=Array.isArray(t)?t[i].tensor:t[e];if(null==r)return;const o=this.accumulatedGrads[i].variable;xt(()=>{const t=T(o,Bn(r));o.assign(t);const e=T(Rt(div(r,Pr(T(t,x.a.backend.epsilon()))),-this.learningRate),n);n.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&vt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Li.className="Adagrad",ji(Li);class Bi extends _i{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],xt(()=>{this.accBeta1=sn(e).variable(),this.accBeta2=sn(n).variable()}),null==r&&(this.epsilon=x.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);xt(()=>{const n=sub(1,this.accBeta1),r=sub(1,this.accBeta2);e.forEach((e,i)=>{const o=x.a.registeredVariables[e];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:e+"/m",variable:xt(()=>$e(o).variable(!1))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:e+"/v",variable:xt(()=>$e(o).variable(!1))});const l=Array.isArray(t)?t[i].tensor:t[e];if(null==l)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=T(Rt(c,this.beta1),Rt(l,1-this.beta1)),f=T(Rt(h,this.beta2),Rt(Bn(l),1-this.beta2)),m=div(d,n),y=div(f,r);c.assign(d),h.assign(f);const v=T(Rt(div(m,T(Pr(y),this.epsilon)),-this.learningRate),o);o.assign(v)}),this.accBeta1.assign(Rt(this.accBeta1,this.beta1)),this.accBeta2.assign(Rt(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&vt(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&vt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),xt(()=>{this.accBeta1.assign(nr(this.beta1,this.iterations_+1)),this.accBeta2.assign(nr(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Bi.className="Adam",ji(Bi);class Pi extends _i{constructor(t,e,n,r=null,o=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],xt(()=>{this.iteration=sn(0).variable(),this.accBeta1=sn(e).variable()}),null==r&&(this.epsilon=x.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);xt(()=>{const n=sub(1,this.accBeta1),r=div(-this.learningRate,T(Rt(this.iteration,this.decay),1));e.forEach((e,i)=>{const o=x.a.registeredVariables[e];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:e+"/m",variable:$e(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:e+"/v",variable:$e(o).variable(!1)});const l=Array.isArray(t)?t[i].tensor:t[e];if(null==l)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=T(Rt(c,this.beta1),Rt(l,1-this.beta1)),f=Rt(h,this.beta2),m=k(l),y=cn(f,m);c.assign(d),h.assign(y);const v=T(Rt(div(r,n),div(d,T(y,this.epsilon))),o);o.assign(v)}),this.iteration.assign(T(this.iteration,1)),this.accBeta1.assign(Rt(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&vt(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&vt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Pi.className="Adamax",ji(Pi);class Wi extends _i{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,i)=>{const n=Array.isArray(t)?t[i].tensor:t[e];if(null==n)return;const r=x.a.registeredVariables[e];xt(()=>{const t=T(Rt(this.c,n),r);r.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=wt(sn(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Wi.className="SGD",ji(Wi);class Ui extends Wi{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=sn(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,i)=>{const n=x.a.registeredVariables[e];if(null==this.accumulations[i]){const t=!1;this.accumulations[i]={originalName:e+"/momentum",variable:xt(()=>$e(n).variable(t))}}const r=this.accumulations[i].variable,o=Array.isArray(t)?t[i].tensor:t[e];null!=o&&xt(()=>{let t;const e=T(Rt(this.m,r),o);t=this.useNesterov?T(Rt(this.c,T(o,Rt(e,this.m))),n):T(Rt(this.c,e),n),r.assign(e),n.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&vt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Ui.className="Momentum",ji(Ui);class Vi extends _i{constructor(t,e=.9,n=0,r=null,o=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,null==r&&(this.epsilon=x.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,i)=>{const n=x.a.registeredVariables[e];null==this.accumulatedMeanSquares[i]&&(this.accumulatedMeanSquares[i]={originalName:e+"/rms",variable:xt(()=>$e(n).variable(!1))}),null==this.accumulatedMoments[i]&&(this.accumulatedMoments[i]={originalName:e+"/momentum",variable:xt(()=>$e(n).variable(!1))}),null==this.accumulatedMeanGrads[i]&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:e+"/mg",variable:xt(()=>$e(n).variable(!1))});const r=Array.isArray(t)?t[i].tensor:t[e];if(null==r)return;const o=this.accumulatedMeanSquares[i].variable,l=this.accumulatedMoments[i].variable;xt(()=>{const t=T(Rt(o,this.decay),Rt(Bn(r),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[i].variable,c=T(Rt(e,this.decay),Rt(r,1-this.decay)),h=div(Rt(r,this.learningRate),Pr(sub(t,T(Bn(c),this.epsilon)))),d=T(Rt(l,this.momentum),h);o.assign(t),e.assign(c),l.assign(d);const f=sub(n,d);n.assign(f)}else{const t=T(Rt(o,this.decay),Rt(Bn(r),1-this.decay)),e=T(Rt(l,this.momentum),div(Rt(r,this.learningRate),Pr(T(t,this.epsilon))));o.assign(t),l.assign(e);const c=sub(n,e);n.assign(c)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&vt(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&vt(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&vt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Vi.className="RMSProp",ji(Vi);class Gi{static sgd(t){return new Wi(t)}static momentum(t,e,n=!1){return new Ui(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,o=!1){return new Vi(t,e,n,r,o)}static adam(t=.001,e=.9,n=.999,r=null){return new Bi(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Mi(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,o=0){return new Pi(t,e,n,r,o)}static adagrad(t,e=.1){return new Li(t,e)}}const Hi={sgd:Gi.sgd,momentum:Gi.momentum,adadelta:Gi.adadelta,adagrad:Gi.adagrad,rmsprop:Gi.rmsprop,adamax:Gi.adamax,adam:Gi.adam};var qi=n(203);function Ki(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Ji(t,e,n,r=!0){let o=[];if(r)o=o.concat(e.slice(0)),o.push(t[0]/n),o=o.concat(t.slice(1));else{o=o.concat(t[0]);const n=e.length;for(let i=0;i<n;++i)o=o.concat([t[i+1]/e[i],e[i]]);o=o.concat(t.slice(n+1))}return o}function Xi(t,e,n=!0){const r=[];if(n){r.push(e);for(let i=e+1;i<t;++i)i<=2*e?(r.push(i),r.push(i-(e+1))):r.push(i)}else{const n=[],o=[];for(let i=1;i<t;++i)i>=2*e+1||i%2==1?o.push(i):n.push(i);r.push(...n),r.push(0),r.push(...o)}return r}function Yi(t,e,n,r=!0){const o=[];r?o.push(t[0]/n):o.push(t[0]*n);for(let i=1;i<t.length;++i)i<=e.length?r?o.push(e[i-1]*t[i]):o.push(t[i]/e[i-1]):o.push(t[i]);return o}function Qi(t,e){const n=[0];for(let i=0;i<e;++i)n.push(t[i][0]);return n}function Zi(t,e,n){const r=t.slice(0,1);for(let i=0;i<n;++i)r.push(t[i+1]-e[i][0]-e[i][1]);return r}function to(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let o=1;for(let i=0;i<n.length-1;++i)o*=n[i];const l=t.shape,c=n.slice();c.pop();let h=1;for(let i=r;i<t.rank;++i)h*=l[i],c.push(l[i]);const d=[...Object(A.computeStrides)(t.shape).map(t=>t/h),1].slice(0,r);return[c,o,h,d]}const eo=1.7580993408473768,no=1.0507009873554805,ro=.3275911,so=.254829592,ao=-.284496736,io=1.421413741,oo=-1.453152027,uo=1.061405429;function lo(...t){Object(v.b)().getBool("IS_TEST")||console.warn(...t)}function co(...t){Object(v.b)().getBool("IS_TEST")||console.log(...t)}function ho(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let i=0;i<n.length;i+=2)n[i]=t[i/2],n[i+1]=e[i/2];return n}function po(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let i=0;i<t.length;i+=2)e[i/2]=t[i],n[i/2]=t[i+1];return{real:e,imag:n}}function fo(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let i=0;i<t.length;i+=4)n[Math.floor(i/4)]=t[i],r[Math.floor(i/4)]=t[i+1];return{real:n,imag:r}}function mo(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let i=2;i<t.length;i+=4)n[Math.floor(i/4)]=t[i],r[Math.floor(i/4)]=t[i+1];return{real:n,imag:r}}function go(t,e){return{real:t[2*e],imag:t[2*e+1]}}function bo(data,t,e,n){data[2*n]=t,data[2*n+1]=e}function yo(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let i=0;i<Math.ceil(t/2);i++){const o=(e?2:-2)*Math.PI*(i/t);n[i]=Math.cos(o),r[i]=Math.sin(o)}return{real:n,imag:r}}function xo(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function vo(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=jn(t.shape),r=Q(t,"float32"),o=n.complex(r,e);return e.dispose(),r.dispose(),o}if(!Object(A.hasEncodingLoss)(t.dtype,e))return x.a.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),o=Q(r,e);return r.dispose(),o}if("int32"===e)return n.int(t);if("bool"===e){const e=sn(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function wo(t,e){return x.a.makeTensorFromDataId(t.dataId,e,t.dtype)}function Oo(t,e,n){const r=(e-t)/(n-1),o=Object(A.makeZerosTypedArray)(n,"float32");o[0]=t;for(let i=1;i<o.length;i++)o[i]=o[i-1]+r;return mr(o,"float32")}var So=n(196);function Co(t,e,n){const r=new Array(t.rank).fill(0),o=t.shape.slice();return e.map(s=>{const e=[...o];e[n]=s;const l=qt(t,r,e);return r[n]+=s,l})}function ko(t,e){const n=new Array(t.rank);for(let i=0;i<n.length;i++)n[i]=t.shape[i]*e[i];const r=se(n,t.dtype);for(let i=0;i<r.values.length;++i){const e=r.indexToLoc(i),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const o=t.locToIndex(n);r.values[i]=t.values[o]}return r.toTensor()}function No(t,e,n,r,o){const l=e[e.length-1],[c,h]=[t.length/l,l],d=Object(A.getTypedArrayFromDType)(n,c*r),f=Object(A.getTypedArrayFromDType)("int32",c*r);for(let b=0;b<c;b++){const e=b*h,n=t.subarray(e,e+h),o=[];for(let i=0;i<n.length;i++)o.push({value:n[i],index:i});o.sort((a,b)=>b.value-a.value);const l=b*r,c=d.subarray(l,l+r),m=f.subarray(l,l+r);for(let i=0;i<r;i++)c[i]=o[i].value,m[i]=o[i].index}const m=e.slice();return m[m.length-1]=r,[Object(Et.a)(d,m,n),Object(Et.a)(f,m,"int32")]}class Io{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Eo{time(t){return To("time")}read(t){return To("read")}readSync(t){return To("readSync")}numDataIds(){return To("numDataIds")}disposeData(t){return To("disposeData")}write(t,e,n){return To("write")}move(t,e,n,r){return To("move")}memory(){return To("memory")}floatPrecision(){return To("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(a,b,t,e){return To("batchMatMul")}fusedBatchMatMul({a:a,b:b,transposeA:t,transposeB:e,bias:n,activation:r,preluActivationWeights:o}){return To("fusedBatchMatMul")}slice(t,e,n){return To("slice")}stridedSlice(t,e,n,r){return To("stridedSlice")}unstack(t,e){return To("unstack")}reverse(a,t){return To("reverse")}concat(t,e){return To("concat")}neg(a){return To("neg")}add(a,b){return To("add")}addN(t){return To("addN")}subtract(a,b){return To("subtract")}multiply(a,b){return To("multiply")}realDivide(a,b){return To("realDivide")}floorDiv(a,b){return To("floorDiv")}sum(t,e){return To("sum")}prod(t,e){return To("prod")}unsortedSegmentSum(t,e,n){return To("unsortedSegmentSum")}argMin(t,e){return To("argMin")}argMax(t,e){return To("argMax")}equal(a,b){return To("equal")}notEqual(a,b){return To("notEqual")}less(a,b){return To("less")}lessEqual(a,b){return To("lessEqual")}greater(a,b){return To("greater")}greaterEqual(a,b){return To("greaterEqual")}logicalNot(a){return To("logicalNot")}logicalAnd(a,b){return To("logicalAnd")}logicalOr(a,b){return To("logicalOr")}where(t){return To("where")}select(t,a,b){return To("select")}topk(t,e,n){return To("topk")}min(t,e){return To("min")}minimum(a,b){return To("minimum")}mod(a,b){return To("mod")}max(t,e){return To("max")}maximum(a,b){return To("maximum")}all(t,e){return To("all")}any(t,e){return To("any")}squaredDifference(a,b){return To("squaredDifference")}ceil(t){return To("ceil")}floor(t){return To("floor")}round(t){return To("round")}sign(t){return To("sign")}isNaN(t){return To("isNaN")}isInf(t){return To("isInf")}isFinite(t){return To("isFinite")}pow(a,b){return To("pow")}exp(t){return To("exp")}expm1(t){return To("expm1")}softmax(t,e){return To("softmax")}log(t){return To("log")}log1p(t){return To("log1p")}sqrt(t){return To("sqrt")}rsqrt(t){return To("rsqrt")}square(t){return To("square")}reciprocal(t){return To("reciprocal")}relu(t){return To("relu")}relu6(t){return To("relu6")}prelu(t,a){return To("prelu")}elu(t){return To("elu")}eluDer(t,e){return To("eluDer")}selu(t){return To("selu")}int(t){return To("int")}clip(t,e,n){return To("clip")}abs(t){return To("abs")}complexAbs(t){return To("complexAbs")}sigmoid(t){return To("sigmoid")}softplus(t){return To("softplus")}sin(t){return To("sin")}cos(t){return To("cos")}tan(t){return To("tan")}asin(t){return To("asin")}acos(t){return To("acos")}atan(t){return To("atan")}atan2(a,b){return To("atan2")}sinh(t){return To("sinh")}cosh(t){return To("cosh")}tanh(t){return To("tanh")}asinh(t){return To("asinh")}acosh(t){return To("acosh")}atanh(t){return To("atanh")}erf(t){return To("erf")}step(t,e){return To("step")}fusedConv2d({input:input,filter:filter,convInfo:t,bias:e,activation:n,preluActivationWeights:r}){return To("fusedConv2d")}conv2d(t,filter,e){return To("conv2d")}conv2dDerInput(t,filter,e){return To("conv2dDerInput")}conv2dDerFilter(t,e,n){return To("conv2dDerFilter")}fusedDepthwiseConv2D({input:input,filter:filter,convInfo:t,bias:e,activation:n,preluActivationWeights:r}){return To("fusedDepthwiseConv2D")}depthwiseConv2D(input,filter,t){return To("depthwiseConv2D")}depthwiseConv2DDerInput(t,filter,e){return To("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return To("depthwiseConv2DDerFilter")}conv3d(t,filter,e){return To("conv3d")}conv3dDerInput(t,filter,e){return To("conv3dDerInput")}conv3dDerFilter(t,e,n){return To("conv3dDerFilter")}maxPool(t,e){return To("maxPool")}maxPoolBackprop(t,e,n,r){return To("maxPoolBackprop")}avgPool(t,e){return To("avgPool")}avgPoolBackprop(t,e,n){return To("avgPoolBackprop")}avgPool3d(t,e){return To("avgPool3d")}avgPool3dBackprop(t,e,n){return To("avgPool3dBackprop")}maxPool3d(t,e){return To("maxPool3d")}maxPool3dBackprop(t,e,n,r){return To("maxPool3dBackprop")}reshape(t,e){return To("reshape")}cast(t,e){return To("cast")}tile(t,e){return To("tile")}pad(t,e,n){return To("pad")}transpose(t,e){return To("transpose")}gather(t,e,n){return To("gather")}gatherND(t,e){return To("gatherND")}scatterND(t,e,n){return To("scatterND")}batchToSpaceND(t,e,n){return To("batchToSpaceND")}spaceToBatchND(t,e,n){return To("spaceToBatchND")}resizeBilinear(t,e,n,r){return To("resizeBilinear")}resizeBilinearBackprop(t,e,n){return To("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return To("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return To("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,o,l){return To("batchNorm")}localResponseNormalization4D(t,e,n,r,o){return To("localResponseNormalization4D")}LRNGrad(t,e,n,r,o,l,c){return To("LRNGrad")}multinomial(t,e,n,r){return To("multinomial")}oneHot(t,e,n,r){return To("oneHot")}cumsum(t,e,n,r){return To("cumsum")}nonMaxSuppression(t,e,n,r,o){return To("nonMaxSuppression")}fft(t){return To("fft")}ifft(t){return To("ifft")}complex(t,e){return To("complex")}real(input){return To("real")}imag(input){return To("imag")}cropAndResize(image,t,e,n,r,o){return To("cropAndResize")}depthToSpace(t,e,n){return To("depthToSpace")}split(t,e,n){return To("split")}sparseToDense(t,e,n,r){return To("sparseToDense")}diag(t){return To("diag")}fill(t,e,n){return To("fill")}onesLike(t){return To("onesLike")}zerosLike(t){return To("zerosLike")}linspace(t,e,n){return To("linspace")}dispose(){return To("dispose")}}function To(t){throw new Error(`'${t}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}const Ao={kernelName:O.a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(t,Gr(Q(n,"float32"),-1))}}},Ro={kernelName:O.b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const a=Bn(Q(n,"float32")),b=Pr(sub(sn(1),a));return vn(div(t,b))}}}},$o={kernelName:O.c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const a=Pr(sub(Bn(Q(n,"float32")),1));return div(t,a)}}}},Fo={kernelName:O.d,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e,n=Te(a.shape,b.shape);return{a:()=>{let e=t;const r=Ee(a.shape,n);return r.length>0&&(e=Cn(e,r)),B(e,a.shape)},b:()=>{let e=t;const r=Ee(b.shape,n);return r.length>0&&(e=Cn(e,r)),B(e,b.shape)}}}},jo={kernelName:O.e,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,i)=>{n[i]=()=>t.clone()}),n}},Do={kernelName:O.h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$e(n)}}},_o={kernelName:O.i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$e(n)}}},zo={kernelName:O.j,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>div(t,Pr(sub(sn(1),Bn(Q(n,"float32")))))}}},Mo={kernelName:O.k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const a=Pr(T(sn(1),Bn(Q(n,"float32"))));return div(t,a)}}}},Lo={kernelName:O.m,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e,n=Te(a.shape,b.shape);return{a:()=>{const e=T(Bn(a),Bn(b));let r=Rt(t,div(b,e));const o=Ee(a.shape,n);return o.length>0&&(r=Cn(r,o)),B(r,a.shape)},b:()=>{const e=T(Bn(a),Bn(b));let r=vn(Rt(t,div(a,e)));const o=Ee(b.shape,n);return o.length>0&&(r=Cn(r,o)),B(r,b.shape)}}}},Bo={kernelName:O.l,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>div(t,T(Bn(Q(n,"float32")),1))}}},Po={kernelName:O.n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>div(t,sub(sn(1),Bn(Q(n,"float32"))))}}};const Wo=Object(C.a)({avgPool3dBackprop_:function(t,input,e,n,r=[1,1,1],o,l){const c=Object(S.a)(t,"dy","avgPool3dBackprop"),h=Object(S.a)(input,"input","avgPool3dBackprop");let d=c,f=h,m=!1;4===h.rank&&(m=!0,d=B(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),f=B(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),A.assert(5===d.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+d.rank+"."),A.assert(5===f.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+f.rank+"."),A.assert(ht(n,r),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),null!=l&&A.assert(A.isInt(o),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${l} but got pad ${o}.`);const y={dy:d,input:f},v={filterSize:e,strides:n,dilations:r,pad:o,dimRoundingMode:l},w=x.a.runKernelFunc(t=>{const c=et(f.shape,e,n,r,o,l);return t.avgPool3dBackprop(d,f,c)},y,null,O.q,v);return m?B(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}}),Uo={kernelName:O.p,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:o,strides:l,dilations:c,pad:h,dimRoundingMode:d}=n,f=null==c?[1,1,1]:c;return{x:()=>Wo(t,r,o,l,f,h,d)}}};const Vo=Object(C.a)({avgPoolBackprop_:function(t,input,e,n,r){const o=Object(S.a)(t,"dy","avgPoolBackprop"),l=Object(S.a)(input,"input","avgPoolBackprop");A.assert(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`);let c=l,h=o,d=!1;3===l.rank&&(d=!0,c=B(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A.assert(4===h.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+h.rank+"."),A.assert(4===c.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+c.rank+".");const f={dy:h,input:c},m={filterSize:e,strides:n,pad:r},y=x.a.runKernelFunc(t=>{const o=tt(c.shape,e,n,1,r);return t.avgPoolBackprop(h,c,o)},f,null,O.r,m);return d?B(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),Go={kernelName:O.o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:o,strides:l,pad:c}=n;return{x:()=>Vo(t,r,o,l,c)}}},Ho={kernelName:O.s,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[a,b]=e,{transposeA:r,transposeB:o}=n;return r||o?!r&&o?{a:()=>At(t,b,!1,!1),b:()=>At(t,a,!0,!1)}:r&&!o?{a:()=>At(b,t,!1,!0),b:()=>At(a,t,!1,!1)}:{a:()=>At(b,t,!0,!0),b:()=>At(t,a,!0,!0)}:{a:()=>At(t,b,!1,!0),b:()=>At(a,t,!0,!1)}}},qo={kernelName:O.t,gradFunc:(t,e,n)=>{const{blockShape:r,crops:o}=n;return{x:()=>Zn(t,r,o)}}},Ko={kernelName:O.u,gradFunc:(t,e,n)=>{const r=n,o=r.inputShape,l=r.shape,c=Array.from(l);for(let i=o.length-1;i>=0;i--)if(o[i]===l[i])c[i]=1;else if(1!==o[i])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${l}].`);const h=[];for(let i=0;i<c.length;i++)c[i]>1&&h.push(i);return{x:()=>Cn(t,h,!0)}}},Jo={kernelName:O.v,gradFunc:t=>({x:()=>t.clone()})},Xo={kernelName:O.w,gradFunc:t=>({x:()=>$e(t)})},Yo={kernelName:O.x,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:o,clipValueMax:l}=n;return{x:()=>Re(In(Qe(r,o),pn(r,l)),t,$e(t))}}},Qo={kernelName:O.z,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:o}=n,l=Object(A.parseAxisParam)(o,e[0].shape)[0],c=r.map(s=>s[l]);return Nr(t,c,l).map(t=>()=>t)}},Zo={kernelName:O.A,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,o]=e,{dilations:l,strides:c,pad:h,dataFormat:d}=n;return A.assert(ct(l),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${l}'`),{x:()=>fe(r.shape,t,o,c,h,d),filter:()=>js(r,t,o.shape,c,h,d)}}},tu={kernelName:O.C,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,filter]=e,{strides:o,pad:l,dataFormat:c,dimRoundingMode:h}=n;return{dy:()=>de(t,filter,o,l,c,1,h),filter:()=>js(t,r,filter.shape,o,l,c,h)}}};const eu=Object(C.a)({conv3DBackpropFilter_:function(t,e,n,r,o){let l=t;4===t.rank&&(l=B(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let c=e;4===c.rank&&(c=B(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A.assert(5===l.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+l.shape+"."),A.assert(5===c.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+c.shape+"."),A.assert(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),A.assert(l.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${l.shape[4]}) must match input depth in filter (${n[3]}.`),A.assert(c.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${c.shape[4]}) must match output depth for filter (${n[4]}).`);const h={x:l,y:c},d={strides:r,pad:o};return x.a.runKernelFunc(t=>{const e=st(l.shape,n,r,1,o);return t.conv3dDerFilter(l,c,e)},h,null,O.E,d)}}),nu={kernelName:O.D,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:o,pad:l}=n;A.assert(ct(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[c,h]=e;return{x:()=>be(c.shape,t,h,o,l),filter:()=>eu(c,t,h.shape,o,l)}}},ru={kernelName:O.G,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(vn(jr(Q(n,"float32"))),t)}}},su={kernelName:O.H,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(Dr(Q(n,"float32")),t)}}},au={kernelName:O.J,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:o,exclusive:l,reverse:c}=n;return{x:()=>{const e=z([o],r.rank);let n=we(t,o,l,!c);return null!=e&&(n=P(n,e)),n}}}},iu={kernelName:O.L,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:o,pad:l,dimRoundingMode:c}=n,h=null==r?[1,1]:r;A.assert(ct(h),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${h}'`);const[d,filter]=e;A.assert(4===d.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${d.rank}.`),A.assert(4===filter.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${filter.rank}.`),A.assert(d.shape[3]===filter.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${filter.shape[2]}.`),A.assert(ht(o,h),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${h}'.`),null!=c&&A.assert(A.isInt(l),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${l}.`);const f=nt(d.shape,filter.shape,o,h,l,c,!0);return{x:()=>Ps(d.shape,t,filter,f),filter:()=>Bs(d,t,filter.shape,f)}}},ou={kernelName:O.P,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,filter]=e,o={x:r,filter:filter,dy:t},l={x:r,filter:filter,dy:t};return{x:()=>x.a.runKernel(O.R,o,n),filter:()=>x.a.runKernel(O.Q,l,n)}}},uu={kernelName:O.S,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e,n=Te(a.shape,b.shape);return{a:()=>{const e=div(t,Q(b,"float32")),r=Ee(a.shape,n);return r.length>0?B(Cn(e,r),a.shape):e},b:()=>{let e=Rt(t,Q(a,"float32"));const r=Ee(b.shape,n);r.length>0&&(e=B(Cn(e,r),b.shape));const o=Bn(b);return vn(div(e,Q(o,"float32")))}}}},lu={kernelName:O.T,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),o={dy:t,y:n};return{x:()=>x.a.runKernelFunc(r,o,null,O.U)}}},cu={kernelName:O.W,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=Rt(ze(vn(Bn(n))),2/Math.sqrt(Math.PI));return{x:()=>Rt(t,a)}}},hu={kernelName:O.X,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(t,n)}}},du={kernelName:O.Y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(t,ze(n))}}},pu={kernelName:O.cb,gradFunc:t=>({x:()=>$e(t)})},fu={kernelName:O.db,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e,n=Te(a.shape,b.shape);return{a:()=>{const e=div(t,Q(b,"float32")),r=Ee(a.shape,n);return r.length>0?B(Cn(e,r),a.shape):e},b:()=>{let e=Rt(t,Q(a,"float32"));const r=Ee(b.shape,n);r.length>0&&(e=B(Cn(e,r),b.shape));const o=Bn(b);return vn(div(e,Q(o,"float32")))}}}},mu={kernelName:O.fb,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[o,l,c,h]=e,d=null==h?sn(1):h,f=Ee(l.shape,o.shape),m=[];if(1===l.rank){for(let i=0;i<o.shape.length-1;++i)m.push(o.shape[i]);m.push(1)}const y=sub(o,l),x=Rt(t,d),v=Tr(T(c,sn(r))),w=Rt(Rt(Rt(v,v),v),sn(-.5));return{x:()=>1===l.rank?B(Rt(Rt(t,Be(B(v,[1,1,1,l.shape[0]]),m)),d),o.shape):B(Rt(Rt(t,v),d),o.shape),mean:()=>{let t=Rt(Rt(v,sn(-1)),x);return 1===l.rank&&(t=Cn(t,f)),B(t,l.shape)},variance:()=>{let t=Rt(Rt(w,y),x);return 1===l.rank&&(t=Cn(t,f)),B(t,l.shape)},scale:()=>{const e=Rt(y,v);let n=Rt(t,e);return 1===l.rank&&(n=Cn(n,f)),B(n,l.shape)},offset:()=>{let e=t;return 1===l.rank&&(e=Cn(e,f)),B(e,l.shape)}}}},gu={kernelName:O.jb,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,o]=e,{axis:l}=n,c=Object(A.parseAxisParam)(l,r.shape)[0];return{x:()=>{const e=r.shape,n=o.size,h=e.slice(0,c),d=h.length,f=e.slice(l,e.length).slice(1),m=f.length,y=bu(0,d),x=bu(d+1,d+1+m),v=yu([h,[n],f]),w=B(t,v),O=B(o,[n]),S=yu([[d],y,x]),C=P(w,S);let k=es(C,O,r.shape[c]);const N=M(S);return k=P(k,N),k},indices:()=>o}}};function bu(t,e){const n=[];for(let i=t;i<e;++i)n.push(i);return n}function yu(t){const e=[];for(let i=0;i<t.length;++i)for(let n=0;n<t[i].length;++n)e.push(t[i][n]);return e}const xu={kernelName:O.lb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e;return{a:()=>$e(a),b:()=>$e(b)}}},vu={kernelName:O.nb,gradFunc:t=>({x:()=>Q(t,"float32")})},wu={kernelName:O.pb,gradFunc:t=>({x:()=>$e(t)})},Ou={kernelName:O.qb,gradFunc:t=>({x:()=>$e(t)})},Su={kernelName:O.rb,gradFunc:t=>({x:()=>$e(t)})},Cu={kernelName:O.yb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>div(t,T(n,1))}}},ku={kernelName:O.xb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>div(t,Q(n,"float32"))}}},Nu={kernelName:O.zb,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:o}=n;return{logits:()=>{const e=ze(r);return sub(t,Rt(Cn(t,o,!0),e))}}}};const Iu=Object(C.a)({localResponseNormalizationBackprop_:function(t,e,n,r=5,o=1,l=1,c=.5){const h={x:t,y:e,dy:n},d={depthRadius:r,bias:o,alpha:l,beta:c};return x.a.runKernelFunc(h=>h.LRNGrad(n,t,e,r,o,l,c),h,null,O.tb,d)}}),Eu={kernelName:O.sb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,o]=e,{depthRadius:l,bias:c,alpha:h,beta:d}=n;return{x:()=>Iu(r,o,t,l,c,h,d)}}};function Tu(t,e,n,r,o){return e.rank<n.rank&&(e=B(e,D(e.shape,r))),t.rank<n.rank&&(t=B(t,D(t.shape,r))),{x:()=>{const r=Rt(t,Q(Ae(n,e),t.dtype));return null==o?r:P(r,o)}}}const Au={kernelName:O.Db,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:o}=r,[l,c]=e,h=A.parseAxisParam(o,l.shape),d=z(h,l.rank),f=Tu(t,c,l,h,d);return{x:()=>{let t=f.x();return null!=d&&(t=P(t)),t}}}},Ru={kernelName:O.Jb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e;return{a:()=>Rt(t,Q(Qe(a,b),"float32")),b:()=>Rt(t,Q(dn(a,b),"float32"))}}};const $u=Object(C.a)({maxPool3dBackprop_:function(t,input,output,e,n,r=[1,1,1],o,l){const c=Object(S.a)(t,"dy","maxPool3dBackprop"),h=Object(S.a)(input,"input","maxPool3dBackprop"),d=Object(S.a)(output,"output","maxPool3dBackprop");let f=c,m=h,y=d,v=!1;4===h.rank&&(v=!0,f=B(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),m=B(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]]),y=B(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),A.assert(5===f.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+f.rank+"."),A.assert(5===m.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+m.rank+"."),A.assert(5===y.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+y.rank+"."),A.assert(ht(n,r),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`),null!=l&&A.assert(A.isInt(o),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${l} but got pad ${o}.`);const w={dy:f,input:m,output:y},C={filterSize:e,strides:n,dilations:r,pad:o,dimRoundingMode:l},k=x.a.runKernelFunc(t=>{const c=et(m.shape,e,n,r,o,l);return t.maxPool3dBackprop(f,m,y,c)},w,null,O.Gb,C);return v?B(k,[k.shape[1],k.shape[2],k.shape[3],k.shape[4]]):k}}),Fu={kernelName:O.Fb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,o]=e,{filterSize:l,strides:c,dilations:h,pad:d,dimRoundingMode:f}=n,m=null==h?[1,1,1]:h;return{x:()=>$u(t,r,o,l,c,m,d,f)}}};const ju=Object(C.a)({maxPoolBackprop_:function(t,input,output,e,n,r,o){const l=Object(S.a)(t,"dy","maxPoolBackprop"),c=Object(S.a)(input,"input","maxPoolBackprop"),h=Object(S.a)(output,"output","maxPoolBackprop");A.assert(c.rank===l.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${l.rank})`),A.assert(4===l.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+l.rank+"."),A.assert(4===c.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+c.rank+"."),null!=o&&A.assert(A.isInt(r),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const d={dy:l,input:c,output:h},f={filterSize:e,strides:n,pad:r,dimRoundingMode:o};return x.a.runKernelFunc(t=>{const d=tt(c.shape,e,n,1,r,o);return t.maxPoolBackprop(l,c,h,d)},d,null,O.Hb,f)}}),Du={kernelName:O.Eb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,o]=e,{filterSize:l,strides:c,pad:h}=n;return{x:()=>ju(t,r,o,l,c,h)}}},_u={kernelName:O.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:o}=r,[l,c]=e,h=A.parseAxisParam(o,l.shape),d=z(h,l.rank),f=Tu(t,c,l,h,d);return{x:()=>{let t=f.x();return null!=d&&(t=P(t)),t}}}},zu={kernelName:O.Lb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e;return{a:()=>Rt(t,Q(pn(a,b),"float32")),b:()=>Rt(t,Q(Ye(a,b),"float32"))}}},Mu={kernelName:O.Mb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e,n=Te(a.shape,b.shape);return{a:()=>{const e=Ee(a.shape,n);return e.length>0?B(Cn(t,e),a.shape):t},b:()=>{const e=Rt(t,vn(Ve(div(a,b)))),r=Ee(b.shape,n);return r.length>0?B(Cn(e,r),b.shape):e}}}},Lu={kernelName:O.Nb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e,n=Te(a.shape,b.shape);return{a:()=>{const e=Rt(t,Q(b,"float32")),r=Ee(a.shape,n);return r.length>0?B(Cn(e,r),a.shape):e},b:()=>{const e=Rt(t,Q(a,"float32")),r=Ee(b.shape,n);return r.length>0?B(Cn(e,r),b.shape):e}}}},Bu={kernelName:O.Ob,gradFunc:t=>({x:()=>vn(t)})},Pu={kernelName:O.Tb,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>jn(n.shape,"float32")}}},Wu={kernelName:O.Ub,gradFunc:t=>({x:()=>$e(t)})},Uu={kernelName:O.Vb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:o}=n,l=o.map(p=>p[0]);return{x:()=>qt(t,l,r.shape)}}},Vu={kernelName:O.Wb,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[a,b,n]=e,base=a,r=b,o=Te(base.shape,r.shape);return{a:()=>{const e=Q(r,"float32");let n=Rt(t,Rt(e,nr(base,sub(e,sn(1)))));const l=Ee(base.shape,o);return l.length>0&&(n=Cn(n,l)),B(n,base.shape)},b:()=>{const e=Ye(base,0),l=Re(e,gn(base),$e(base));let c=Rt(t,Rt(n,l));const h=Ee(r.shape,o);return h.length>0&&(c=Cn(c,h)),B(c,r.shape)}}}},Gu={kernelName:O.Xb,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,mask=Ye(n,0);return{x:()=>Re(mask,t,Rt(t,r)),alpha:()=>{let e=Re(mask,$e(t),Rt(t,n));const o=Ee(r.shape,t.shape);return o.length>0&&(e=Cn(e,o)),B(e,r.shape)}}}},Hu={kernelName:O.bc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>div(t,vn(Bn(n)))}}},qu={kernelName:O.dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,mask=Rt(pn(n,6),Gr(n));return{x:()=>Rt(t,Q(mask,"float32"))}}},Ku={kernelName:O.cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(t,Q(Gr(n),"float32"))}}},Ju={kernelName:O.ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>B(t,n.shape)}}},Xu={kernelName:O.fc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,o=e=>{const{alignCorners:o}=n;return e.resizeBilinearBackprop(t,r,o)},l={images:r};return{images:()=>x.a.runKernelFunc(o,l,null,O.gc,n)}}},Yu={kernelName:O.hc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,o=e=>{const{alignCorners:o}=n;return e.resizeNearestNeighborBackprop(t,r,o)},l={images:r};return{images:()=>x.a.runKernelFunc(o,l,null,O.ic,n)}}},Qu={kernelName:O.jc,gradFunc:(t,e,n)=>{const{dims:r}=n,o=Object(A.parseAxisParam)(r,t.shape);return{x:()=>nn(t,o)}}},Zu={kernelName:O.lc,gradFunc:t=>({x:()=>$e(t)})},tl={kernelName:O.mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vn(div(t,Rt(nr(n,1.5),2)))}}},el={kernelName:O.oc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Q($e(n),"float32"),t:()=>Rt(t,Q(n,t.dtype)),e:()=>Rt(t,Q(En(n),t.dtype))}}},nl={kernelName:O.pc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const mask=Ye(n,sn(0)),e=sn(eo),r=sn(no),o=Rt(t,r),l=Rt(Rt(t,e),ze(Q(n,"float32")));return Re(mask,o,l)}}}},rl={kernelName:O.qc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(t,Rt(n,sub(sn(1),n)))}}},sl={kernelName:O.rc,gradFunc:t=>({x:()=>$e(t)})},al={kernelName:O.sc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(xe(Q(n,"float32")),t)}}},il={kernelName:O.tc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(ve(Q(n,"float32")),t)}}},ll={kernelName:O.uc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:o,size:l}=n,c=r.shape,[h,d]=Ht(r,o,l),f=[];for(let i=0;i<t.rank;i++)f.push([h[i],c[i]-h[i]-d[i]]);return{x:()=>Kn(t,f)}}},cl={kernelName:O.vc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:o}=n,l=Rt(t,r);return{logits:()=>sub(l,Rt(Cn(l,[o],!0),r))}}},hl={kernelName:O.wc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(t,$t(n))}}},pl={kernelName:O.xc,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:o}=n;return{x:()=>Xt(t,r,o)}}},fl={kernelName:O.zc,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Tt(t,r)}}},ml={kernelName:O.Ac,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>div(t,Rt(Pr(Q(n,"float32")),2))}}},gl={kernelName:O.Bc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(t,Rt(Q(n,"float32"),2))}}};const bl=[Ao,Ro,$o,Fo,jo,Do,_o,zo,Mo,Lo,Bo,Po,Uo,Go,Ho,qo,Ko,Jo,Xo,Yo,Qo,tu,Zo,nu,ru,su,au,iu,ou,uu,lu,cu,hu,du,fu,pu,mu,gu,xu,vu,wu,Ou,Su,Cu,ku,Nu,Eu,Au,Au,Ru,Fu,Du,_u,zu,Mu,Lu,Bu,Pu,Wu,Uu,Uu,Vu,Gu,Hu,qu,Ku,Ju,Xu,Yu,Qu,Zu,tl,el,nl,rl,sl,al,il,ll,cl,hl,pl,pl,fl,fl,ml,{kernelName:O.Cc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e,n=sn(2);return{a:()=>Rt(t,Rt(n,sub(a,b))),b:()=>Rt(t,Rt(n,sub(b,a)))}}},gl,{kernelName:O.Dc,gradFunc:t=>({x:()=>$e(t)})},{kernelName:O.Fc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[a,b]=e,n=Te(a.shape,b.shape);return{a:()=>{let e=t;const r=Ee(a.shape,n);return r.length>0&&(e=Cn(e,r)),B(e,a.shape)},b:()=>{let e=t;const r=Ee(b.shape,n);return r.length>0&&(e=Cn(e,r)),B(vn(e),b.shape)}}}},{kernelName:O.Gc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,o=r.shape.slice(),{axis:l}=n;Object(A.parseAxisParam)(l,r.shape).forEach(t=>{o[t]=1});const c=B(t,o),h=Rt(c,Dn(r.shape,"float32"));return{x:()=>h}}},{kernelName:O.Hc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>div(t,Bn(xe(n)))}}},{kernelName:O.Ic,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Rt(sub(sn(1),Bn(n)),t)}}},{kernelName:O.Jc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:o}=n;return{x:()=>{let e=$e(r);if(1===r.rank)for(let i=0;i<o[0];++i)e=T(e,qt(t,[i*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)e=T(e,qt(t,[i*r.shape[0],n*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)for(let l=0;l<o[2];++l)e=T(e,qt(t,[i*r.shape[0],n*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)for(let l=0;l<o[2];++l)for(let c=0;c<o[3];++c)e=T(e,qt(t,[i*r.shape[0],n*r.shape[1],l*r.shape[2],c*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:O.Lc,gradFunc:(t,e,n)=>{const r=n,{perm:o}=r,l=M(o);return{x:()=>P(t,l)}}},{kernelName:O.Mc,gradFunc:(t,e,n)=>{const r=n,{axis:o}=r;return{value:()=>Vr(t,o)}}},{kernelName:O.Nc,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=cn(e,$e(e)),r=Xe(t,n);let o=Qe(e,sn(0,"int32"));const l=r.rank-o.rank;for(let i=0;i<l;++i)o=Me(o,i+1);o=In(o,Dn(r.shape,"bool"));const c=$e(r);return Re(o,r,c)}(t,n)}}},{kernelName:O.Oc,gradFunc:t=>({x:()=>$e(t)})}];for(const t of bl)Object(Ei.d)(t);mt.a.prototype.abs=function(){return this.throwIfDisposed(),k(this)},mt.a.prototype.acos=function(){return this.throwIfDisposed(),N(this)},mt.a.prototype.acosh=function(){return this.throwIfDisposed(),I(this)},mt.a.prototype.addStrict=function(t){return this.throwIfDisposed(),ps(this,t)},mt.a.prototype.add=function(b){return this.throwIfDisposed(),T(this,b)},mt.a.prototype.all=function(t,e){return this.throwIfDisposed(),W(this,t,e)},mt.a.prototype.any=function(t,e){return this.throwIfDisposed(),U(this,t,e)},mt.a.prototype.argMax=function(t){return this.throwIfDisposed(),V(this,t)},mt.a.prototype.argMin=function(t){return this.throwIfDisposed(),G(this,t)},mt.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(A.assert)(1===this.size,()=>"The array must have only 1 element."),B(this,[])},mt.a.prototype.asType=function(t){return this.throwIfDisposed(),Q(this,t)},mt.a.prototype.as1D=function(){return this.throwIfDisposed(),B(this,[this.size])},mt.a.prototype.as2D=function(t,e){return this.throwIfDisposed(),B(this,[t,e])},mt.a.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),B(this,[t,e,n])},mt.a.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),B(this,[t,e,n,r])},mt.a.prototype.as5D=function(t,e,n,r,o){return this.throwIfDisposed(),B(this,[t,e,n,r,o])},mt.a.prototype.asin=function(){return this.throwIfDisposed(),H(this)},mt.a.prototype.asinh=function(){return this.throwIfDisposed(),K(this)},mt.a.prototype.atan=function(){return this.throwIfDisposed(),J(this)},mt.a.prototype.atan2=function(b){return this.throwIfDisposed(),X(this,b)},mt.a.prototype.atanh=function(){return this.throwIfDisposed(),Y(this)},mt.a.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),ft(this,t,e,n,r)},mt.a.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Xt(this,t,e)},mt.a.prototype.batchNorm=function(t,e,n,r,o){return this.throwIfDisposed(),Qt(this,t,e,n,r,o)},mt.a.prototype.broadcastTo=function(t){return this.throwIfDisposed(),re(this,t)},mt.a.prototype.cast=function(t){return this.throwIfDisposed(),Q(this,t)},mt.a.prototype.ceil=function(){return this.throwIfDisposed(),ae(this)},mt.a.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ie(this,t,e)},mt.a.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof mt.a&&(t=[t]),Tt([this,...t],e)},mt.a.prototype.conv1d=function(filter,t,e,n,r,o){return this.throwIfDisposed(),pe(this,filter,t,e,n,r,o)},mt.a.prototype.conv2dTranspose=function(filter,t,e,n,r){return this.throwIfDisposed(),me(this,filter,t,e,n,r)},mt.a.prototype.conv2d=function(filter,t,e,n,r,o){return this.throwIfDisposed(),de(this,filter,t,e,n,r,o)},mt.a.prototype.cos=function(){return this.throwIfDisposed(),xe(this)},mt.a.prototype.cosh=function(){return this.throwIfDisposed(),ve(this)},mt.a.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),we(this,t,e,n)},mt.a.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Oe(this,t,e)},mt.a.prototype.depthwiseConv2D=function(filter,t,e,n,r,o){return gt("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Se(this,filter,t,e,n,r,o)},mt.a.prototype.depthwiseConv2d=function(filter,t,e,n,r,o){return this.throwIfDisposed(),Se(this,filter,t,e,n,r,o)},mt.a.prototype.dilation2d=function(filter,t,e,n,r){return this.throwIfDisposed(),ke(this,filter,t,e,n,r)},mt.a.prototype.divNoNan=function(b){return this.throwIfDisposed(),Fe(this,b)},mt.a.prototype.divStrict=function(t){return this.throwIfDisposed(),fs(this,t)},mt.a.prototype.div=function(b){return this.throwIfDisposed(),div(this,b)},mt.a.prototype.dot=function(b){return this.throwIfDisposed(),je(this,b)},mt.a.prototype.elu=function(){return this.throwIfDisposed(),De(this)},mt.a.prototype.equalStrict=function(t){return this.throwIfDisposed(),os(this,t)},mt.a.prototype.equal=function(b){return this.throwIfDisposed(),Ae(this,b)},mt.a.prototype.erf=function(){return this.throwIfDisposed(),_e(this)},mt.a.prototype.exp=function(){return this.throwIfDisposed(),ze(this)},mt.a.prototype.expandDims=function(t){return this.throwIfDisposed(),Me(this,t)},mt.a.prototype.expm1=function(){return this.throwIfDisposed(),Le(this)},mt.a.prototype.fft=function(){return this.throwIfDisposed(),We(this)},mt.a.prototype.flatten=function(){return this.throwIfDisposed(),B(this,[this.size])},mt.a.prototype.floor=function(){return this.throwIfDisposed(),Ve(this)},mt.a.prototype.floorDiv=function(b){return this.throwIfDisposed(),Ne(this,b)},mt.a.prototype.gather=function(t,e){return this.throwIfDisposed(),Xe(this,t,e)},mt.a.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),us(this,t)},mt.a.prototype.greaterEqual=function(b){return this.throwIfDisposed(),Qe(this,b)},mt.a.prototype.greaterStrict=function(t){return this.throwIfDisposed(),ls(this,t)},mt.a.prototype.greater=function(b){return this.throwIfDisposed(),Ye(this,b)},mt.a.prototype.ifft=function(){return this.throwIfDisposed(),Ze(this)},mt.a.prototype.irfft=function(){return this.throwIfDisposed(),an(this)},mt.a.prototype.isFinite=function(){return this.throwIfDisposed(),on(this)},mt.a.prototype.isInf=function(){return this.throwIfDisposed(),un(this)},mt.a.prototype.isNaN=function(){return this.throwIfDisposed(),ln(this)},mt.a.prototype.leakyRelu=function(t){return this.throwIfDisposed(),hn(this,t)},mt.a.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),cs(this,t)},mt.a.prototype.lessEqual=function(b){return this.throwIfDisposed(),pn(this,b)},mt.a.prototype.lessStrict=function(t){return this.throwIfDisposed(),hs(this,t)},mt.a.prototype.less=function(b){return this.throwIfDisposed(),dn(this,b)},mt.a.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),mn(this,t,e,n,r)},mt.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),On(this)},mt.a.prototype.logSoftmax=function(t){return this.throwIfDisposed(),kn(this,t)},mt.a.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Nn(this,t,e)},mt.a.prototype.log=function(){return this.throwIfDisposed(),gn(this)},mt.a.prototype.log1p=function(){return this.throwIfDisposed(),bn(this)},mt.a.prototype.logicalAnd=function(b){return this.throwIfDisposed(),In(this,b)},mt.a.prototype.logicalNot=function(){return this.throwIfDisposed(),En(this)},mt.a.prototype.logicalOr=function(b){return this.throwIfDisposed(),Tn(this,b)},mt.a.prototype.logicalXor=function(b){return this.throwIfDisposed(),An(this,b)},mt.a.prototype.matMul=function(b,t,e){return this.throwIfDisposed(),At(this,b,t,e)},mt.a.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Rn(this,t,e,n,r)},mt.a.prototype.max=function(t,e){return this.throwIfDisposed(),Sn(this,t,e)},mt.a.prototype.maximumStrict=function(t){return this.throwIfDisposed(),ms(this,t)},mt.a.prototype.maximum=function(b){return this.throwIfDisposed(),cn(this,b)},mt.a.prototype.mean=function(t,e){return this.throwIfDisposed(),_n(this,t,e)},mt.a.prototype.min=function(t,e){return this.throwIfDisposed(),zn(this,t,e)},mt.a.prototype.minimumStrict=function(t){return this.throwIfDisposed(),gs(this,t)},mt.a.prototype.minimum=function(b){return this.throwIfDisposed(),Mn(this,b)},mt.a.prototype.modStrict=function(t){return this.throwIfDisposed(),bs(this,t)},mt.a.prototype.mod=function(b){return this.throwIfDisposed(),Ln(this,b)},mt.a.prototype.mulStrict=function(t){return this.throwIfDisposed(),ys(this,t)},mt.a.prototype.mul=function(b){return this.throwIfDisposed(),Rt(this,b)},mt.a.prototype.neg=function(){return this.throwIfDisposed(),vn(this)},mt.a.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Os(this,t,e,n)},mt.a.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),ds(this,t)},mt.a.prototype.notEqual=function(b){return this.throwIfDisposed(),Vn(this,b)},mt.a.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Gn(this,t,e,n)},mt.a.prototype.onesLike=function(){return this.throwIfDisposed(),Hn(this)},mt.a.prototype.pad=function(t,e){return this.throwIfDisposed(),Kn(this,t,e)},mt.a.prototype.pool=function(t,e,n,r,o){return this.throwIfDisposed(),er(this,t,e,n,r,o)},mt.a.prototype.powStrict=function(t){return this.throwIfDisposed(),xs(this,t)},mt.a.prototype.pow=function(t){return this.throwIfDisposed(),nr(this,t)},mt.a.prototype.prelu=function(t){return this.throwIfDisposed(),rr(this,t)},mt.a.prototype.prod=function(t,e){return this.throwIfDisposed(),ar(this,t,e)},mt.a.prototype.reciprocal=function(){return this.throwIfDisposed(),yr(this)},mt.a.prototype.relu=function(){return this.throwIfDisposed(),xr(this)},mt.a.prototype.relu6=function(){return this.throwIfDisposed(),vr(this)},mt.a.prototype.reshapeAs=function(t){return this.throwIfDisposed(),B(this,t.shape)},mt.a.prototype.reshape=function(t){return this.throwIfDisposed(),B(this,t)},mt.a.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),pa(this,t,e)},mt.a.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),fa(this,t,e)},mt.a.prototype.reverse=function(t){return this.throwIfDisposed(),nn(this,t)},mt.a.prototype.rfft=function(){return this.throwIfDisposed(),Ir(this)},mt.a.prototype.round=function(){return this.throwIfDisposed(),Er(this)},mt.a.prototype.rsqrt=function(){return this.throwIfDisposed(),Tr(this)},mt.a.prototype.selu=function(){return this.throwIfDisposed(),Ar(this)},mt.a.prototype.separableConv2d=function(t,e,n,r,o,l){return this.throwIfDisposed(),Rr(this,t,e,n,r,o,l)},mt.a.prototype.sigmoid=function(){return this.throwIfDisposed(),$t(this)},mt.a.prototype.sign=function(){return this.throwIfDisposed(),Fr(this)},mt.a.prototype.sin=function(){return this.throwIfDisposed(),jr(this)},mt.a.prototype.sinh=function(){return this.throwIfDisposed(),Dr(this)},mt.a.prototype.slice=function(t,e){return this.throwIfDisposed(),qt(this,t,e)},mt.a.prototype.softmax=function(t){return this.throwIfDisposed(),Br(this,t)},mt.a.prototype.softplus=function(){return this.throwIfDisposed(),wn(this)},mt.a.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Zn(this,t,e)},mt.a.prototype.split=function(t,e){return this.throwIfDisposed(),Nr(this,t,e)},mt.a.prototype.sqrt=function(){return this.throwIfDisposed(),Pr(this)},mt.a.prototype.square=function(){return this.throwIfDisposed(),Bn(this)},mt.a.prototype.squaredDifference=function(b){return this.throwIfDisposed(),Wr(this,b)},mt.a.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),vs(this,t)},mt.a.prototype.squeeze=function(t){return this.throwIfDisposed(),Ur(this,t)},mt.a.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof mt.a?[this,t]:[this,...t];return Vr(n,e)},mt.a.prototype.step=function(t){return this.throwIfDisposed(),Gr(this,t)},mt.a.prototype.stridedSlice=function(t,e,n,r,o,l,c,h){return this.throwIfDisposed(),Hr(this,t,e,n,r,o,l,c,h)},mt.a.prototype.subStrict=function(t){return this.throwIfDisposed(),ws(this,t)},mt.a.prototype.sub=function(b){return this.throwIfDisposed(),sub(this,b)},mt.a.prototype.sum=function(t,e){return this.throwIfDisposed(),Cn(this,t,e)},mt.a.prototype.tan=function(){return this.throwIfDisposed(),qr(this)},mt.a.prototype.tanh=function(){return this.throwIfDisposed(),Kt(this)},mt.a.prototype.tile=function(t){return this.throwIfDisposed(),Be(this,t)},mt.a.prototype.toBool=function(){return this.throwIfDisposed(),Q(this,"bool")},mt.a.prototype.toFloat=function(){return this.throwIfDisposed(),Q(this,"float32")},mt.a.prototype.toInt=function(){return this.throwIfDisposed(),Q(this,"int32")},mt.a.prototype.topk=function(t,e){return this.throwIfDisposed(),Zr(this,t,e)},mt.a.prototype.transpose=function(t){return this.throwIfDisposed(),P(this,t)},mt.a.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),es(this,t,e)},mt.a.prototype.unstack=function(t){return this.throwIfDisposed(),ns(this,t)},mt.a.prototype.where=function(t,e){return this.throwIfDisposed(),Re(t,this,e)},mt.a.prototype.zerosLike=function(){return this.throwIfDisposed(),$e(this)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return w}));var r=n(183),o=n(201),l=n(174),c=n(190),h=n(180);class d{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new f)}profileKernel(t,e,n){let r;const o=this.backendTimer.time(()=>{r=n()});r.map(e=>{e.data().then(n=>{!function(t,e,n){if("float32"!==e)return!1;for(let i=0;i<t.length;i++){const e=t[i];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}}(n,e.dtype,t)})});return{kernelName:t,outputs:r,inputs:e,timeMs:o.then(t=>t.kernelMs),extraInfo:o.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:o,extraInfo:l}=t;n.forEach(t=>{Promise.all([t.data(),r,l]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],o,n[2])})})}}class f{logKernelProfile(t,e,n,r,o,l){const time="number"==typeof r?h.rightPad(r+"ms",9):r.error,c=h.rightPad(t,25),d=e.rank,f=e.size,m=h.rightPad(e.shape.toString(),14);let y="";for(const t in o){const input=o[t];if(null!=input){const n=input.shape||e.shape,r=n.length;y+=`${t}: ${r}D ${r>0?n:""} `}}console.log(`%c${c}\t%c${time}\t%c${d}D ${m}\t%c${f}\t%c${y}\t%c${l}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var m=n(179),y=n(181);class x{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class v{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new x}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let i=0;i<t.length;i++){const e=t[i];if(await this.initializeBackend(e).success)return void await this.setBackend(e)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){Object(c.c)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(c.c)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(Promise.resolve(n)===n){const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((a,b)=>this.registryFactory[b].priority-this.registryFactory[a].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let i=0;i<t.length;i++){const e=t[i],{success:n,asyncInit:r}=this.initializeBackend(e);if(r||n)return{name:e,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,o=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,o,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return v.nextTensorId++}nextVariableId(){return v.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t},n={dtype:"float32"};return w.runKernelFunc(e=>e.cast(t,"float32"),e,null,l.v,n)}}),[],{}),e}runKernel(t,e,n,r,o){return this.runKernelFunc(null,e,null,t,n,r,o)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let o=0;n.forEach(t=>{o+="complex64"===t.dtype?3:1});const l=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],c=r-e-o-l;if(c>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${c} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,o,l,h){let d,f=[];const m=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const y=this.state.numBytes,x=this.state.numTensors;let v;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const w=Object(c.b)(r,this.backendName);let O,S;if(null!=w)v=()=>{const t=this.backend.numDataIds();O=w.kernelFunc({inputs:e,attrs:o,backend:this.backend});const n=Array.isArray(O)?O:[O];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const c=n.map(({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n));if(m){let t=this.getTensorsForGradient(r,e,c);if(null==t){null==h&&(h=[]);const e=c.filter((t,i)=>h[i]);t=(l||[]).slice().concat(e)}f=this.saveTensorsForBackwardMode(t)}return c};else{const e=t=>{m&&(f=t.map(t=>this.keep(this.clone(t))))};v=()=>{const n=this.backend.numDataIds();O=this.tidy(()=>t(this.backend,e));const o=Array.isArray(O)?O:[O];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,o),o}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(S=this.profiler.profileKernel(r,e,()=>v()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(S),d=S.outputs):d=v()}),m&&this.addTapeNode(r,e,d,n,f,o),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-y,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-x,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>null!=e[t]?e[t].shape:null),outputShapes:d.map(t=>t.shape),kernelTimeMs:S.timeMs,extraInfo:S.extraInfo}),Array.isArray(O)?d:d[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Object(c.a)(t);if(null!=r){const t=r.inputsToSave||[],o=r.outputsToSave||[];let l;r.saveAllInputs?(h.assert(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(e).map(t=>e[t])):l=t.map(t=>e[t]);const c=n.filter((t,i)=>o[i]);return l.concat(c)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let o=t;"string"===n&&h.isString(t[0])&&(o=t.map(t=>h.encodeString(t)));const l=r.write(o,e,n),c=new m.a(e,n,l,this.nextTensorId());if(this.incRef(c,r),"string"===n){const t=this.state.tensorInfo.get(l),e=Object(h.bytesFromStringArray)(o);this.state.numBytes+=e-t.bytes,t.bytes=e}return c}makeTensorFromDataId(t,e,n,r){n=n||"float32";const o=new m.a(e,n,t,this.nextTensorId());return this.incRef(o,r),o}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const o=new m.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}incRef(a,t){const e=this.state.tensorInfo.has(a.dataId)?this.state.tensorInfo.get(a.dataId).refCount:0;if(this.state.numTensors++,"string"===a.dtype&&this.state.numStringTensors++,0===e){this.state.numDataBuffers++;let e=0;"complex64"!==a.dtype&&"string"!==a.dtype&&(e=a.size*h.bytesPerElement(a.dtype)),this.state.tensorInfo.set(a.dataId,{backend:t||this.backend,dtype:a.dtype,shape:a.shape,bytes:e,refCount:0}),this.state.numBytes+=e}this.state.tensorInfo.get(a.dataId).refCount++,a instanceof m.c||this.track(a)}disposeTensor(a){if(!this.state.tensorInfo.has(a.dataId))return;this.state.numTensors--,"string"===a.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(a.dataId);t.refCount<=1?("complex64"!==a.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(a.dataId),this.state.tensorInfo.delete(a.dataId)):this.state.tensorInfo.get(a.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,o,l){const d={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:o},f=Object(c.a)(t);null!=f&&(r=f.gradFunc),null!=r&&(d.gradient=t=>(t=t.map((t,i)=>{if(null==t){const output=n[i],t=h.makeZerosTypedArray(output.size,output.dtype);return this.makeTensor(t,output.shape,output.dtype)}return t}),r(t.length>1?t:t[0],o,l))),this.state.activeTape.push(d)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(y.getTensorsInContainer)(t),n=new Set(e.map(t=>t.id));for(let i=0;i<this.state.activeScope.track.length;i++){const t=this.state.activeScope.track[i];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(h.assert(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));h.assert(o instanceof m.a,()=>"The result y returned by f() must be a tensor.");const l=function(t,e,n){const r={},o={};for(let i=0;i<e.length;i++)r[e[i].id]=!0;for(let i=0;i<t.length;i++){const n=t[i],l=n.inputs;for(const t in l){const input=l[t];let c=!1;for(let t=0;t<e.length;t++)if(r[input.id]){n.outputs.forEach(output=>r[output.id]=!0),c=!0,o[n.id]=!0;break}if(c)break}}const l={};l[n.id]=!0;const c={};for(let i=t.length-1;i>=0;i--){const e=t[i],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(l[e.outputs[t].id]){for(const t in n)l[n[t].id]=!0,c[e.id]=!0;break}}const h=[];for(let i=0;i<t.length;i++){const e=t[i];if(o[e.id]&&c[e.id]){const t={};for(const n in e.inputs){const o=e.inputs[n];r[o.id]&&(t[n]=o)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,h.push(n)}}return h}(this.state.activeTape,e,o);if(!r&&0===l.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[o.id]=null==n?function(t){const e=Object(h.makeOnesTypedArray)(Object(h.sizeFromShape)(t),"float32");return w.makeTensor(e,t,"float32")}(o.shape):n,function(t,e,n,r){for(let i=e.length-1;i>=0;i--){const o=e[i],l=[];if(o.outputs.forEach(e=>{const n=t[e.id];null!=n?l.push(n):l.push(null)}),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const c=o.gradient(l);for(const e in o.inputs){if(!(e in c))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(c)}.`);const l=n(()=>c[e]());if("float32"!==l.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${l.dtype}'`);const d=o.inputs[e];if(!h.arraysEqual(l.shape,d.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${e}' has shape '${l.shape}', which does not match the shape of the input '${d.shape}'`);if(null==t[d.id])t[d.id]=l;else{const e=t[d.id];t[d.id]=r(e,l),e.dispose()}}}}(t,l,t=>this.tidy(t),O);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:o,grads:r}})}customGrad(t){return h.assert(h.isFunction(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;h.assert(e.every(t=>t instanceof m.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((input,i)=>{r[i]=input}),this.runKernelFunc((r,o)=>(n=t(...e,o),h.assert(n.value instanceof m.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),h.assert(h.isFunction(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(t,r)=>{const o=n.gradFunc(t,r),l=Array.isArray(o)?o:[o];h.assert(l.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),h.assert(l.every(t=>t instanceof m.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const c={};return l.forEach((t,i)=>{c[i]=()=>t}),c})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(h.now)(),n=await this.backend.time(t);return n.wallMs=Object(h.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new x;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}v.nextTensorId=0,v.nextVariableId=0;const w=function(){const t=Object(o.b)();if(null==t._tfengine){const e=new r.a(t);t._tfengine=new v(e)}return Object(r.c)(t._tfengine.ENV),Object(m.f)(()=>t._tfengine),t._tfengine}();function O(a,b){const t={a:a,b:b};return w.runKernelFunc((t,e)=>{const n=t.add(a,b);return e([a,b]),n},t,null,l.d)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return d})),n.d(e,"f",(function(){return x})),n.d(e,"e",(function(){return v})),n.d(e,"d",(function(){return w})),n.d(e,"a",(function(){return O})),n.d(e,"c",(function(){return S}));var r=n(180);function o(t,e,n,o){const d=Object(r.computeStrides)(e),f=function(t,e,n,o){const c=Object(r.sizeFromShape)(e),d=o[o.length-1],f=new Array(d).fill(0),m=e.length,y="complex64"===n?h(t):t;if(m>1)for(let t=0;t<c/d;t++){const e=t*d;for(let t=0;t<d;t++)f[t]=Math.max(f[t],l(y[e+t],0,n).length)}return f}(t,e,n,d),m=e.length,y=function t(e,n,r,o,d,f=!0){const m="complex64"===r?2:1,y=n[0],x=n.length;if(0===x){if("complex64"===r){return[l(h(e)[0],0,r)]}return"bool"===r?[c(e[0])]:[e[0].toString()]}if(1===x){if(y>20){const t=3*m;let n=Array.from(e.slice(0,t)),o=Array.from(e.slice((y-3)*m,y*m));return"complex64"===r&&(n=h(n),o=h(o)),["["+n.map((t,i)=>l(t,d[i],r)).join(", ")+", ..., "+o.map((t,i)=>l(t,d[y-3+i],r)).join(", ")+"]"]}return["["+("complex64"===r?h(e):Array.from(e)).map((t,i)=>l(t,d[i],r)).join(", ")+"]"]}const v=n.slice(1),w=o.slice(1),O=o[0]*m,S=[];if(y>20){for(let i=0;i<3;i++){const n=i*O,o=n+O;S.push(...t(e.slice(n,o),v,r,w,d,!1))}S.push("...");for(let i=y-3;i<y;i++){const n=i*O,o=n+O;S.push(...t(e.slice(n,o),v,r,w,d,i===y-1))}}else for(let i=0;i<y;i++){const n=i*O,o=n+O;S.push(...t(e.slice(n,o),v,r,w,d,i===y-1))}const C=2===x?",":"";S[0]="["+S[0]+C;for(let i=1;i<S.length-1;i++)S[i]=" "+S[i]+C;let k=",\n";for(let i=2;i<x;i++)k+="\n";return S[S.length-1]=" "+S[S.length-1]+"]"+(f?"":k),S}(t,e,n,d,f),x=["Tensor"];return o&&(x.push("  dtype: "+n),x.push("  rank: "+m),x.push(`  shape: [${e}]`),x.push("  values:")),x.push(y.map(t=>"    "+t).join("\n")),x.join("\n")}function l(t,e,n){let o;return o=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":Object(r.isString)(t)?`'${t}'`:"bool"===n?c(t):parseFloat(t.toFixed(7)).toString(),Object(r.rightPad)(o,e)}function c(t){return 0===t?"false":"true"}function h(t){const e=[];for(let i=0;i<t.length;i+=2)e.push([t[i],t[i+1]]);return e}class d{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r.sizeFromShape(t),null!=n){const t=n.length;r.assert(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.getArrayFromDType(e,this.size),this.strides=Object(r.computeStrides)(t)}set(t,...e){0===e.length&&(e=[0]),r.assert(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let i=0;for(const e of t){if(e<0||e>=this.shape[i]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}i++}let e=t[t.length-1];for(let i=0;i<t.length-1;++i)e+=this.strides[i]*t[i];return this.values[e]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let i=0;i<t.length-1;++i)e+=this.strides[i]*t[i];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let i=0;i<e.length-1;++i)e[i]=Math.floor(t/this.strides[i]),t-=e[i]*this.strides[i];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return f().makeTensor(this.values,this.shape,this.dtype)}}let f=null,m=null,y=null;function x(t){f=t}function v(t){m=t}function w(t){y=t}class O{constructor(t,e,n,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r.sizeFromShape(t),this.strides=Object(r.computeStrides)(t),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return m.buffer(this.shape,this.dtype,t)}bufferSync(){return m.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(r.toNestedArray)(this.shape,t)}arraySync(){return Object(r.toNestedArray)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const data=f().read(this.dataId);if("string"===this.dtype){const t=await data;try{return t.map(b=>r.decodeString(b))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return data}dataSync(){this.throwIfDisposed();const data=f().readSync(this.dataId);if("string"===this.dtype)try{return data.map(b=>r.decodeString(b))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return data}async bytes(){this.throwIfDisposed();const data=await f().read(this.dataId);return"string"===this.dtype?data:new Uint8Array(data.buffer)}dispose(){this.isDisposed||(f().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return m.print(this,t)}clone(){return this.throwIfDisposed(),m.clone(this)}toString(t=!1){return o(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),m.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),f().makeVariable(this,t,e,n)}}Object.defineProperty(O,Symbol.hasInstance,{value:t=>!!t&&null!=t.dataId&&null!=t.shape&&null!=t.dtype});class S extends O{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!r.arraysEqual(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);f().disposeTensor(this),this.dataId=t.dataId,f().incRef(this,null)}dispose(){f().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(S,Symbol.hasInstance,{value:t=>t instanceof O&&null!=t.assign&&t.assign instanceof Function})},function(t,e,n){"use strict";n.r(e),n.d(e,"shuffle",(function(){return o})),n.d(e,"clamp",(function(){return l})),n.d(e,"nearestLargerEven",(function(){return c})),n.d(e,"sum",(function(){return h})),n.d(e,"randUniform",(function(){return d})),n.d(e,"distSquared",(function(){return f})),n.d(e,"assert",(function(){return m})),n.d(e,"assertShapesMatch",(function(){return y})),n.d(e,"assertNonNull",(function(){return x})),n.d(e,"flatten",(function(){return v})),n.d(e,"sizeFromShape",(function(){return w})),n.d(e,"isScalarShape",(function(){return O})),n.d(e,"arraysEqual",(function(){return S})),n.d(e,"isInt",(function(){return C})),n.d(e,"tanh",(function(){return k})),n.d(e,"sizeToSquarishShape",(function(){return N})),n.d(e,"createShuffledIndices",(function(){return I})),n.d(e,"rightPad",(function(){return E})),n.d(e,"repeatedTry",(function(){return T})),n.d(e,"inferFromImplicitShape",(function(){return A})),n.d(e,"parseAxisParam",(function(){return R})),n.d(e,"squeezeShape",(function(){return $})),n.d(e,"getTypedArrayFromDType",(function(){return F})),n.d(e,"getArrayFromDType",(function(){return j})),n.d(e,"checkConversionForErrors",(function(){return D})),n.d(e,"isValidDtype",(function(){return _})),n.d(e,"hasEncodingLoss",(function(){return z})),n.d(e,"isTypedArray",(function(){return M})),n.d(e,"bytesPerElement",(function(){return L})),n.d(e,"bytesFromStringArray",(function(){return B})),n.d(e,"isString",(function(){return P})),n.d(e,"isBoolean",(function(){return W})),n.d(e,"isNumber",(function(){return U})),n.d(e,"inferDtype",(function(){return V})),n.d(e,"isFunction",(function(){return G})),n.d(e,"nearestDivisor",(function(){return H})),n.d(e,"computeStrides",(function(){return K})),n.d(e,"toTypedArray",(function(){return J})),n.d(e,"toNestedArray",(function(){return X})),n.d(e,"makeOnesTypedArray",(function(){return Y})),n.d(e,"makeZerosTypedArray",(function(){return Q})),n.d(e,"makeZerosNestedTypedArray",(function(){return Z})),n.d(e,"now",(function(){return tt})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return et})),n.d(e,"fetch",(function(){return nt})),n.d(e,"encodeString",(function(){return st})),n.d(e,"decodeString",(function(){return at})),n.d(e,"locToIndex",(function(){return it})),n.d(e,"indexToLoc",(function(){return ot}));var r=n(183);function o(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function l(t,e,n){return Math.max(t,Math.min(e,n))}function c(t){return t%2==0?t:t+1}function h(t){let e=0;for(let i=0;i<t.length;i++)e+=t[i];return e}function d(a,b){const t=Math.random();return b*t+(1-t)*a}function f(a,b){let t=0;for(let i=0;i<a.length;i++){const e=Number(a[i])-Number(b[i]);t+=e*e}return t}function m(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function y(t,e,n=""){m(S(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function x(a){m(null!=a,()=>"The input to the tensor constructor must be a non-null value.")}function v(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||M(t)&&!n)for(let i=0;i<t.length;++i)v(t[i],e,n);else e.push(t);return e}function w(t){if(0===t.length)return 1;let e=t[0];for(let i=1;i<t.length;i++)e*=t[i];return e}function O(t){return 0===t.length}function S(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let i=0;i<t.length;i++)if(t[i]!==e[i])return!1;return!0}function C(a){return a%1==0}function k(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function N(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function I(t){const e=new Uint32Array(t);for(let i=0;i<t;++i)e[i]=i;return o(e),e}function E(a,t){return t<=a.length?a:a+" ".repeat(t-a.length)}function T(t,e=(t=>0),n){return new Promise((r,o)=>{let l=0;const c=()=>{if(t())return void r();l++;const h=e(l);null!=n&&l>=n?o():setTimeout(c,h)};c()})}function A(t,e){let n=1,r=-1;for(let i=0;i<t.length;++i)if(t[i]>=0)n*=t[i];else if(-1===t[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(t[i]<0)throw Error(`Shapes can not be < 0. Found ${t[i]} at dim ${i}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const o=t.slice();return o[r]=e/n,o}function R(t,e){const n=e.length;return m((t=null==t?e.map((s,i)=>i):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t),m(t.every(t=>C(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(a=>a<0?n+a:a)}function $(t,e){const n=[],r=[],o=null!=e&&Array.isArray(e)&&0===e.length,l=null==e||o?null:R(e,t).sort();let c=0;for(let i=0;i<t.length;++i){if(null!=l){if(l[c]===i&&1!==t[i])throw new Error(`Can't squeeze axis ${i} since its dim '${t[i]}' is not 1`);(null==l[c]||l[c]>i)&&1===t[i]&&(n.push(t[i]),r.push(i)),l[c]<=i&&c++}1!==t[i]&&(n.push(t[i]),r.push(i))}return{newShape:n,keptDims:r}}function F(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function j(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function D(t,e){for(let i=0;i<t.length;i++){const n=t[i];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function _(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function z(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function M(a){return a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array}function L(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function B(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function P(t){return"string"==typeof t||t instanceof String}function W(t){return"boolean"==typeof t}function U(t){return"number"==typeof t}function V(t){return Array.isArray(t)?V(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":U(t)?"float32":P(t)?"string":W(t)?"bool":"float32"}function G(t){return!!(t&&t.constructor&&t.call&&t.apply)}function H(t,e){for(let i=e;i<t;++i)if(t%i==0)return i;return t}function K(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let i=e-3;i>=0;--i)n[i]=n[i+1]*t[i+1];return n}function J(a,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(a)&&(a=v(a)),Object(r.b)().getBool("DEBUG")&&D(a,t),function(a,t){return a instanceof Float32Array&&"float32"===t||a instanceof Int32Array&&"int32"===t||a instanceof Uint8Array&&"bool"===t}(a,t))return a;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(a);if("int32"===t)return new Int32Array(a);if("bool"===t){const t=new Uint8Array(a.length);for(let i=0;i<t.length;++i)0!==Math.round(a[i])&&(t[i]=1);return t}throw new Error("Unknown data type "+t)}function X(t,a){if(0===t.length)return a[0];const e=t.reduce((t,e)=>t*e);if(0===e)return[];if(e!==a.length)throw new Error(`[${t}] does not match the input size ${a.length}.`);return function t(e,n,a){const r=new Array;if(1===n.length){const t=n[0];for(let i=0;i<t;i++)r[i]=a[e+i]}else{const o=n[0],l=n.slice(1),c=l.reduce((t,e)=>t*e);for(let i=0;i<o;i++)r[i]=t(e+i*c,l,a)}return r}(0,t,a)}function Y(t,e){const n=Q(t,e);for(let i=0;i<n.length;i++)n[i]=1;return n}function Q(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function Z(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return X(t,new Float32Array(n));if("int32"===e)return X(t,new Int32Array(n));if("bool"===e)return X(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function tt(){return Object(r.b)().platform.now()}function et(t){t.forEach(e=>{m(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function nt(path,t){return Object(r.b)().platform.fetch(path,t)}function st(s,t="utf-8"){return t=t||"utf-8",Object(r.b)().platform.encode(s,t)}function at(t,e="utf-8"){return e=e||"utf-8",Object(r.b)().platform.decode(t,e)}function it(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let i=0;i<t.length-1;++i)r+=n[i]*t[i];return r}function ot(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let i=0;i<r.length-1;++i)r[i]=Math.floor(t/n[i]),t-=r[i]*n[i];return r[r.length-1]=t,r}},function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return c})),n.d(e,"assertTypesMatch",(function(){return h})),n.d(e,"isTensorInList",(function(){return d})),n.d(e,"getTensorsInContainer",(function(){return f}));var r=n(179),o=n(187),l=n(180);function c(a,b){if(a.dtype===b.dtype)return[a,b];const t=Object(o.b)(a.dtype,b.dtype);return[a.cast(t),b.cast(t)]}function h(a,b){Object(l.assert)(a.dtype===b.dtype,()=>`The dtypes of the first(${a.dtype}) and second(${b.dtype}) input must match`)}function d(t,e){return e.some(e=>e.id===t.id)}function f(t){const e=[];return function t(e,n,o){if(null==e)return;if(e instanceof r.a)return void n.push(e);if(l=e,!Array.isArray(l)&&"object"!=typeof l)return;var l;const c=e;for(const e in c){const r=c[e];o.has(r)||(o.add(r),t(r,n,o))}}(t,e,new Set),e}},function(t,e,n){"use strict";n.d(e,"d",(function(){return o})),n.d(e,"e",(function(){return l})),n.d(e,"f",(function(){return c})),n.d(e,"b",(function(){return h})),n.d(e,"g",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"a",(function(){return y}));var r=n(177);function o(t,e,n,o){const c=e.inputParams[t];if(c&&void 0!==c.inputIndexStart){const t=c.inputIndexStart,h=0===c.inputIndexEnd?void 0:void 0===c.inputIndexEnd?t+1:c.inputIndexEnd;if("tensor"===c.type)return l(e.inputNames[c.inputIndexStart],n,o);if("tensors"===c.type){return e.inputNames.slice(t,h).map(t=>l(t,n,o))}const d=l(e.inputNames.slice(t)[0],n,o),data=d.dataSync();return"number"===c.type?data[0]:r.Jd.toNestedArray(d.shape,data)}const h=e.attrParams[t];return h&&h.value}function l(t,e,n){const[r,o]=f(t),l=n.currentContextIds.find(t=>!!e[d(r,t)]);return void 0!==l?e[d(r,l)][o]:void 0}function c(t,e,n){return e[d(t,n.currentContextId)]}function h(t,e){const[n,r]=f(t);return[d(n,e&&e.currentContextId),r]}function d(t,e){return e?`${t}-${e}`:t}function f(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function m(t,e,n){let r=o("pad",t,e,n);if("explicit"===r){r=o("explicitPaddings",t,e,n);const l=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)l[i][0]=r[2*i],l[i][1]=r[2*i+1];return l}return r}function y(t){return t.kept?t:r.X(t)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return c}));class r{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(e instanceof Promise)throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(s,...t)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,t[0],t[1]),t.join("="))),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)})}}}function o(){return l}let l=null;function c(t){l=t}},function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return h})),n.d(e,"e",(function(){return d})),n.d(e,"a",(function(){return x})),n.d(e,"b",(function(){return v})),n.d(e,"d",(function(){return w})),n.d(e,"c",(function(){return O})),n.d(e,"g",(function(){return S}));var r=n(186),o=n(188),l=n(180),c=n(202);async function h(t,e){const n=[],r=[],o=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let i=0;i<o.length;++i){const l=o[i],c=Array.isArray(t)?t[i].tensor:t[l];if("float32"!==c.dtype&&"int32"!==c.dtype&&"bool"!==c.dtype&&"string"!==c.dtype&&"complex64"!==c.dtype)throw new Error(`Unsupported dtype in weight '${l}': ${c.dtype}`);const h={name:l,shape:c.shape,dtype:c.dtype};if("string"===c.dtype){const t=new Promise(async t=>{const e=await c.bytes(),n=e.reduce((p,t)=>p+t.length,0)+4*e.length,r=new Uint8Array(n);let o=0;for(let i=0;i<e.length;i++){const t=e[i],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,o),o+=4,r.set(t,o),o+=t.length}t(r)});r.push(t)}else r.push(c.data());null!=e&&(h.group=e),n.push(h)}return{data:f(await Promise.all(r)),specs:n}}function d(t,e){const n={};let h,d=0;for(const f of e){const e=f.name,m=f.dtype,y=f.shape,x=Object(l.sizeFromShape)(y);let v;if("quantization"in f){const n=f.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${f.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${f.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==m)throw new Error(`Weight ${f.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${m}.`)}const r=c.a[n.dtype],o=t.slice(d,d+x*r),l="uint8"===n.dtype?new Uint8Array(o):new Uint16Array(o);if("float32"===m)if("uint8"===n.dtype||"uint16"===n.dtype){v=new Float32Array(l.length);for(let i=0;i<l.length;i++){const t=l[i];v[i]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===h&&(h=C()),v=h(l)}else{if("int32"!==m)throw new Error(`Unsupported dtype in weight '${e}': ${m}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);v=new Int32Array(l.length);for(let i=0;i<l.length;i++){const t=l[i];v[i]=Math.round(t*n.scale+n.min)}}d+=x*r}else if("string"===m){const e=Object(l.sizeFromShape)(f.shape);v=[];for(let i=0;i<e;i++){const e=new Uint32Array(t.slice(d,d+4))[0];d+=4;const n=new Uint8Array(t.slice(d,d+e));v.push(n),d+=e}}else{const l=c.a[m],h=t.slice(d,d+x*l);if("float32"===m)v=new Float32Array(h);else if("int32"===m)v=new Int32Array(h);else if("bool"===m)v=new Uint8Array(h);else{if("complex64"!==m)throw new Error(`Unsupported dtype in weight '${e}': ${m}`);{v=new Float32Array(h);const t=new Float32Array(v.length/2),image=new Float32Array(v.length/2);for(let i=0;i<t.length;i++)t[i]=v[2*i],image[i]=v[2*i+1];const l=Object(o.a)(t,y,"float32"),c=Object(o.a)(image,y,"float32");n[e]=Object(r.a)(l,c)}}d+=x*l}"complex64"!==m&&(n[e]=Object(o.a)(v,y,m))}return n}function f(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let o=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),o),o+=t.byteLength}),r.buffer}const m=void 0!==t&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function y(e){return m?t.byteLength(e):new Blob([e]).size}function x(e){if(m)return t.from(e).toString("base64");const n=new Uint8Array(e);let s="";for(let i=0,t=n.length;i<t;i++)s+=String.fromCharCode(n[i]);return btoa(s)}function v(e){if(m){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const s=atob(e),n=new Uint8Array(s.length);for(let i=0;i<s.length;++i)n.set([s.charCodeAt(i)],i);return n.buffer}function w(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function O(path){for(path=path.trim();path.endsWith("/");)path=path.slice(0,path.length-1);const t=path.split("/");return t[t.length-1]}function S(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:y(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:y(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function C(){const t=function(){const t=i=>{let t=i<<13,e=0;for(;0==(8388608&t);)e-=8388608,t<<=1;return t&=-8388609,e+=947912704,t|e},e=new Uint32Array(2048);e[0]=0;for(let i=1;i<1024;i++)e[i]=t(i);for(let i=1024;i<2048;i++)e[i]=939524096+(i-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let i=1;i<31;i++)t[i]=i<<23;for(let i=33;i<63;i++)t[i]=2147483648+(i-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let i=0;i<64;i++)t[i]=1024;return t[0]=t[32]=0,t}();return r=>{const o=new ArrayBuffer(4*r.length),l=new Uint32Array(o);for(let o=0;o<r.length;o++){const c=r[o],h=t[n[c>>10]+(1023&c)]+e[c>>10];l[o]=h}return new Float32Array(o)}}}).call(this,n(197).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(178),o=n(180);function l(t,e,n,l){if(null==l&&(l=Object(o.inferDtype)(t)),"complex64"===l)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(o.isTypedArray)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(o.assertNonNegativeIntegerDimensions)(e);const t=Object(o.sizeFromShape)(e),r=Object(o.sizeFromShape)(n);Object(o.assert)(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let i=0;i<n.length;++i){const t=n[i],r=i!==n.length-1||t!==Object(o.sizeFromShape)(e.slice(i));Object(o.assert)(n[i]===e[i]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Object(o.isTypedArray)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==l?Object(o.toTypedArray)(t,l):Object(o.flatten)(t,[],!0),r.a.makeTensor(t,e,l)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n(178),o=n(174),l=n(176),c=n(180),h=n(175);const d=Object(h.a)({complex_:function(t,e){const n=Object(l.a)(t,"real","complex"),h=Object(l.a)(e,"imag","complex");c.assertShapesMatch(n.shape,h.shape,`real and imag shapes, ${n.shape} and ${h.shape}, must match in call to tf.complex().`);const d={real:n,imag:h};return r.a.runKernelFunc(t=>t.complex(n,h),d,null,o.y)}})},function(t,e,n){"use strict";var r,o,l,c,h;n.d(e,"b",(function(){return f})),n.d(e,"a",(function(){return m})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(o||(o={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(l||(l={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(c||(c={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(h||(h={}));const d={float32:c,int32:o,bool:l,complex64:h};function f(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return d[t][e]}function m(t){return f(t,"int32")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(176),o=n(185);function l(t,e,n){const l=Object(r.c)(t,n);return Object(o.a)(t,e,l,n)}},function(t,e,n){"use strict";n.d(e,"f",(function(){return m})),n.d(e,"e",(function(){return y})),n.d(e,"d",(function(){return x})),n.d(e,"g",(function(){return v})),n.d(e,"a",(function(){return w})),n.d(e,"b",(function(){return $})),n.d(e,"c",(function(){return r}));var r,o=n(177),l=n(192),c=n(198);function h(t){return t instanceof o.r?{value:t.clone(),recurse:!1}:Object(c.e)(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class d{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class f extends d{constructor(){super(f.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let i=0;i<n;i++)e[i]=this.get(this.wrap(this.begin+i));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function m(t){return new O(t)}function y(t){return new S(t)}function x(t,e){return new j(t,e)}function v(t,e=r.FAIL){return new D(t,e)}f.INITIAL_CAPACITY=32;class w{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new A(this,t)}filter(t){return new E(this,t)}map(t){return new T(this,t)}mapAsync(t){return new R(this,t)}serialMapAsync(t){return new R(this,t).serial()}flatmap(t){return new F(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new I(this,t,e)}columnMajorBatch(t,e=!0,n=c.f){return this.rowMajorBatch(t,e).map(t=>Object(c.d)(t,n))}concatenate(t,e){return new j(m([this,t]),e)}take(t){return t<0||null==t?this:new N(this,t)}skip(t){return t<0||null==t?this:new k(this,t)}prefetch(t){return new _(this,t)}shuffle(t,e){return new z(this,t,e)}serial(){return new C(this)}}class O extends w{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Object(c.b)(e,h)),done:!1};var e}}class S extends w{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class C extends w{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class k extends w{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;o.pb(t.value)}return this.upstream.next()}}class N extends w{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class I extends w{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class E extends w{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;o.pb(t.value)}}}class T extends w{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=o.Ad.getTensorsInContainer(t.value),n=this.transform(t.value),r=o.Ad.getTensorsInContainer(n);for(const t of e)o.Ad.isTensorInList(t,r)||t.dispose();return{value:n,done:!1}}}class A extends w{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class R extends w{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=o.Ad.getTensorsInContainer(t.value),n=await this.transform(t.value),r=o.Ad.getTensorsInContainer(n);for(const t of e)o.Ad.isTensorInList(t,r)||t.dispose();return{value:n,done:!1}}}class $ extends w{constructor(){super(),this.outputQueue=new f,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class F extends ${constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=o.Ad.getTensorsInContainer(t.value),n=this.transform(t.value),r=o.Ad.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const t of e)o.Ad.isTensorInList(t,r)||t.dispose();return!0}}class j extends w{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(r||(r={}));class D extends w{constructor(t,e=r.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const o=await Object(c.c)(this.iterators,(function(t){if(t instanceof w){return{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:o,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class _ extends w{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new d(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class z extends _{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=l.alea(n||o.Jd.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(t,e,n){"use strict";n.d(e,"b",(function(){return h})),n.d(e,"a",(function(){return d})),n.d(e,"c",(function(){return f})),n.d(e,"e",(function(){return m})),n.d(e,"d",(function(){return y}));var r=n(183),o=n(201);const l=Object(o.a)("kernelRegistry",()=>new Map),c=Object(o.a)("gradRegistry",()=>new Map);function h(t,e){const n=x(t,e);return l.get(n)}function d(t){return c.get(t)}function f(t){const e=l.entries(),n=[];for(;;){const{done:r,value:o}=e.next();if(r)break;const[l,c]=o,[h]=l.split("_");h===t&&n.push(c)}return n}function m(t){const{kernelName:e,backendName:n}=t,r=x(e,n);l.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),l.set(r,t)}function y(t){const{kernelName:e}=t;c.has(e)&&Object(r.b)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),c.set(e,t)}function x(t,e){return`${e}_${t}`}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));const r={};function o(t){return r[t]}},function(t,e,n){var r=n(223),o=n(224),l=n(225),c=n(226),h=n(227),d=n(228),f=n(229);f.alea=r,f.xor128=o,f.xorwow=l,f.xorshift7=c,f.xor4096=h,f.tychei=d,t.exports=f},function(t,e,n){var content=n(214);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,n(59).default)("cfeef6c0",content,!0,{sourceMap:!1})},function(t,e,n){var content=n(216);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,n(59).default)("f45b8640",content,!0,{sourceMap:!1})},function(t,e,n){var content=n(218);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,n(59).default)("116fe310",content,!0,{sourceMap:!1})},function(t,e,n){"use strict";function r(){if("undefined"!=typeof navigator&&null!=navigator){const a=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))}return!1}function o(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return r})),n.d(e,"isBrowser",(function(){return o}))},function(t,e,n){"use strict";(function(t){var r=n(231),o=n(232),l=n(233);function c(){return d.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function h(t,e){if(c()<e)throw new RangeError("Invalid typed array length");return d.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=d.prototype:(null===t&&(t=new d(e)),t.length=e),t}function d(t,e,n){if(!(d.TYPED_ARRAY_SUPPORT||this instanceof d))return new d(t,e,n);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return y(this,t)}return f(this,t,e,n)}function f(t,e,n,r){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r);d.TYPED_ARRAY_SUPPORT?(t=e).__proto__=d.prototype:t=x(t,e);return t}(t,e,n,r):"string"==typeof e?function(t,e,n){"string"==typeof n&&""!==n||(n="utf8");if(!d.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|w(e,n),o=(t=h(t,r)).write(e,n);o!==r&&(t=t.slice(0,o));return t}(t,e,n):function(t,e){if(d.isBuffer(e)){var n=0|v(e.length);return 0===(t=h(t,n)).length||e.copy(t,0,0,n),t}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||(r=e.length)!=r?h(t,0):x(t,e);if("Buffer"===e.type&&l(e.data))return x(t,e.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function m(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function y(t,e){if(m(e),t=h(t,e<0?0:0|v(e)),!d.TYPED_ARRAY_SUPPORT)for(var i=0;i<e;++i)t[i]=0;return t}function x(t,e){var n=e.length<0?0:0|v(e.length);t=h(t,n);for(var i=0;i<n;i+=1)t[i]=255&e[i];return t}function v(t){if(t>=c())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+c().toString(16)+" bytes");return 0|t}function w(t,e){if(d.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return K(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return J(t).length;default:if(r)return K(t).length;e=(""+e).toLowerCase(),r=!0}}function O(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return _(this,e,n);case"utf8":case"utf-8":return F(this,e,n);case"ascii":return j(this,e,n);case"latin1":case"binary":return D(this,e,n);case"base64":return $(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return z(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function S(b,t,e){var i=b[t];b[t]=b[e],b[e]=i}function C(t,e,n,r,o){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(o)return-1;n=t.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof e&&(e=d.from(e,r)),d.isBuffer(e))return 0===e.length?-1:k(t,e,n,r,o);if("number"==typeof e)return e&=255,d.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):k(t,[e],n,r,o);throw new TypeError("val must be string, number or Buffer")}function k(t,e,n,r,o){var i,l=1,c=t.length,h=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;l=2,c/=2,h/=2,n/=2}function d(t,i){return 1===l?t[i]:t.readUInt16BE(i*l)}if(o){var f=-1;for(i=n;i<c;i++)if(d(t,i)===d(e,-1===f?0:i-f)){if(-1===f&&(f=i),i-f+1===h)return f*l}else-1!==f&&(i-=i-f),f=-1}else for(n+h>c&&(n=c-h),i=n;i>=0;i--){for(var m=!0,y=0;y<h;y++)if(d(t,i+y)!==d(e,y)){m=!1;break}if(m)return i}return-1}function N(t,e,n,r){n=Number(n)||0;var o=t.length-n;r?(r=Number(r))>o&&(r=o):r=o;var l=e.length;if(l%2!=0)throw new TypeError("Invalid hex string");r>l/2&&(r=l/2);for(var i=0;i<r;++i){var c=parseInt(e.substr(2*i,2),16);if(isNaN(c))return i;t[n+i]=c}return i}function I(t,e,n,r){return X(K(e,t.length-n),t,n,r)}function E(t,e,n,r){return X(function(t){for(var e=[],i=0;i<t.length;++i)e.push(255&t.charCodeAt(i));return e}(e),t,n,r)}function T(t,e,n,r){return E(t,e,n,r)}function A(t,e,n,r){return X(J(e),t,n,r)}function R(t,e,n,r){return X(function(t,e){for(var n,r,o,l=[],i=0;i<t.length&&!((e-=2)<0);++i)n=t.charCodeAt(i),r=n>>8,o=n%256,l.push(o),l.push(r);return l}(e,t.length-n),t,n,r)}function $(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function F(t,e,n){n=Math.min(t.length,n);for(var r=[],i=e;i<n;){var o,l,c,h,d=t[i],f=null,m=d>239?4:d>223?3:d>191?2:1;if(i+m<=n)switch(m){case 1:d<128&&(f=d);break;case 2:128==(192&(o=t[i+1]))&&(h=(31&d)<<6|63&o)>127&&(f=h);break;case 3:o=t[i+1],l=t[i+2],128==(192&o)&&128==(192&l)&&(h=(15&d)<<12|(63&o)<<6|63&l)>2047&&(h<55296||h>57343)&&(f=h);break;case 4:o=t[i+1],l=t[i+2],c=t[i+3],128==(192&o)&&128==(192&l)&&128==(192&c)&&(h=(15&d)<<18|(63&o)<<12|(63&l)<<6|63&c)>65535&&h<1114112&&(f=h)}null===f?(f=65533,m=1):f>65535&&(f-=65536,r.push(f>>>10&1023|55296),f=56320|1023&f),r.push(f),i+=m}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",i=0;for(;i<e;)n+=String.fromCharCode.apply(String,t.slice(i,i+=4096));return n}(r)}e.Buffer=d,e.SlowBuffer=function(t){+t!=t&&(t=0);return d.alloc(+t)},e.INSPECT_MAX_BYTES=50,d.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=c(),d.poolSize=8192,d._augment=function(t){return t.__proto__=d.prototype,t},d.from=function(t,e,n){return f(null,t,e,n)},d.TYPED_ARRAY_SUPPORT&&(d.prototype.__proto__=Uint8Array.prototype,d.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&d[Symbol.species]===d&&Object.defineProperty(d,Symbol.species,{value:null,configurable:!0})),d.alloc=function(t,e,n){return function(t,e,n,r){return m(e),e<=0?h(t,e):void 0!==n?"string"==typeof r?h(t,e).fill(n,r):h(t,e).fill(n):h(t,e)}(null,t,e,n)},d.allocUnsafe=function(t){return y(null,t)},d.allocUnsafeSlow=function(t){return y(null,t)},d.isBuffer=function(b){return!(null==b||!b._isBuffer)},d.compare=function(a,b){if(!d.isBuffer(a)||!d.isBuffer(b))throw new TypeError("Arguments must be Buffers");if(a===b)return 0;for(var t=a.length,e=b.length,i=0,n=Math.min(t,e);i<n;++i)if(a[i]!==b[i]){t=a[i],e=b[i];break}return t<e?-1:e<t?1:0},d.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},d.concat=function(t,e){if(!l(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return d.alloc(0);var i;if(void 0===e)for(e=0,i=0;i<t.length;++i)e+=t[i].length;var n=d.allocUnsafe(e),r=0;for(i=0;i<t.length;++i){var o=t[i];if(!d.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(n,r),r+=o.length}return n},d.byteLength=w,d.prototype._isBuffer=!0,d.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var i=0;i<t;i+=2)S(this,i,i+1);return this},d.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var i=0;i<t;i+=4)S(this,i,i+3),S(this,i+1,i+2);return this},d.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var i=0;i<t;i+=8)S(this,i,i+7),S(this,i+1,i+6),S(this,i+2,i+5),S(this,i+3,i+4);return this},d.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?F(this,0,t):O.apply(this,arguments)},d.prototype.equals=function(b){if(!d.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b||0===d.compare(this,b)},d.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},d.prototype.compare=function(t,e,n,r,o){if(!d.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),e<0||n>t.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&e>=n)return 0;if(r>=o)return-1;if(e>=n)return 1;if(this===t)return 0;for(var l=(o>>>=0)-(r>>>=0),c=(n>>>=0)-(e>>>=0),h=Math.min(l,c),f=this.slice(r,o),m=t.slice(e,n),i=0;i<h;++i)if(f[i]!==m[i]){l=f[i],c=m[i];break}return l<c?-1:c<l?1:0},d.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},d.prototype.indexOf=function(t,e,n){return C(this,t,e,n,!0)},d.prototype.lastIndexOf=function(t,e,n){return C(this,t,e,n,!1)},d.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var o=this.length-e;if((void 0===n||n>o)&&(n=o),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var l=!1;;)switch(r){case"hex":return N(this,t,e,n);case"utf8":case"utf-8":return I(this,t,e,n);case"ascii":return E(this,t,e,n);case"latin1":case"binary":return T(this,t,e,n);case"base64":return A(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,t,e,n);default:if(l)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),l=!0}},d.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function j(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(127&t[i]);return r}function D(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(t[i]);return r}function _(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var o="",i=e;i<n;++i)o+=H(t[i]);return o}function z(t,e,n){for(var r=t.slice(e,n),o="",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}function M(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function L(t,e,n,r,o,l){if(!d.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>o||e<l)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function B(t,e,n,r){e<0&&(e=65535+e+1);for(var i=0,o=Math.min(t.length-n,2);i<o;++i)t[n+i]=(e&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function P(t,e,n,r){e<0&&(e=4294967295+e+1);for(var i=0,o=Math.min(t.length-n,4);i<o;++i)t[n+i]=e>>>8*(r?i:3-i)&255}function W(t,e,n,r,o,l){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function U(t,e,n,r,l){return l||W(t,0,n,4),o.write(t,e,n,r,23,4),n+4}function V(t,e,n,r,l){return l||W(t,0,n,8),o.write(t,e,n,r,52,8),n+8}d.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),d.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=d.prototype;else{var o=e-t;n=new d(o,void 0);for(var i=0;i<o;++i)n[i]=this[i+t]}return n},d.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||M(t,e,this.length);for(var r=this[t],o=1,i=0;++i<e&&(o*=256);)r+=this[t+i]*o;return r},d.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||M(t,e,this.length);for(var r=this[t+--e],o=1;e>0&&(o*=256);)r+=this[t+--e]*o;return r},d.prototype.readUInt8=function(t,e){return e||M(t,1,this.length),this[t]},d.prototype.readUInt16LE=function(t,e){return e||M(t,2,this.length),this[t]|this[t+1]<<8},d.prototype.readUInt16BE=function(t,e){return e||M(t,2,this.length),this[t]<<8|this[t+1]},d.prototype.readUInt32LE=function(t,e){return e||M(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},d.prototype.readUInt32BE=function(t,e){return e||M(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},d.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||M(t,e,this.length);for(var r=this[t],o=1,i=0;++i<e&&(o*=256);)r+=this[t+i]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*e)),r},d.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||M(t,e,this.length);for(var i=e,r=1,o=this[t+--i];i>0&&(r*=256);)o+=this[t+--i]*r;return o>=(r*=128)&&(o-=Math.pow(2,8*e)),o},d.prototype.readInt8=function(t,e){return e||M(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},d.prototype.readInt16LE=function(t,e){e||M(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},d.prototype.readInt16BE=function(t,e){e||M(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},d.prototype.readInt32LE=function(t,e){return e||M(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},d.prototype.readInt32BE=function(t,e){return e||M(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},d.prototype.readFloatLE=function(t,e){return e||M(t,4,this.length),o.read(this,t,!0,23,4)},d.prototype.readFloatBE=function(t,e){return e||M(t,4,this.length),o.read(this,t,!1,23,4)},d.prototype.readDoubleLE=function(t,e){return e||M(t,8,this.length),o.read(this,t,!0,52,8)},d.prototype.readDoubleBE=function(t,e){return e||M(t,8,this.length),o.read(this,t,!1,52,8)},d.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||L(this,t,e,n,Math.pow(2,8*n)-1,0);var o=1,i=0;for(this[e]=255&t;++i<n&&(o*=256);)this[e+i]=t/o&255;return e+n},d.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||L(this,t,e,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+n},d.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,1,255,0),d.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},d.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,2,65535,0),d.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):B(this,t,e,!0),e+2},d.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,2,65535,0),d.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):B(this,t,e,!1),e+2},d.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,4,4294967295,0),d.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):P(this,t,e,!0),e+4},d.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,4,4294967295,0),d.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):P(this,t,e,!1),e+4},d.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var o=Math.pow(2,8*n-1);L(this,t,e,n,o-1,-o)}var i=0,l=1,sub=0;for(this[e]=255&t;++i<n&&(l*=256);)t<0&&0===sub&&0!==this[e+i-1]&&(sub=1),this[e+i]=(t/l>>0)-sub&255;return e+n},d.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var o=Math.pow(2,8*n-1);L(this,t,e,n,o-1,-o)}var i=n-1,l=1,sub=0;for(this[e+i]=255&t;--i>=0&&(l*=256);)t<0&&0===sub&&0!==this[e+i+1]&&(sub=1),this[e+i]=(t/l>>0)-sub&255;return e+n},d.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,1,127,-128),d.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},d.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,2,32767,-32768),d.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):B(this,t,e,!0),e+2},d.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,2,32767,-32768),d.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):B(this,t,e,!1),e+2},d.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,4,2147483647,-2147483648),d.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):P(this,t,e,!0),e+4},d.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),d.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):P(this,t,e,!1),e+4},d.prototype.writeFloatLE=function(t,e,n){return U(this,t,e,!0,n)},d.prototype.writeFloatBE=function(t,e,n){return U(this,t,e,!1,n)},d.prototype.writeDoubleLE=function(t,e,n){return V(this,t,e,!0,n)},d.prototype.writeDoubleBE=function(t,e,n){return V(this,t,e,!1,n)},d.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var i,o=r-n;if(this===t&&n<e&&e<r)for(i=o-1;i>=0;--i)t[i+e]=this[i+n];else if(o<1e3||!d.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)t[i+e]=this[i+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+o),e);return o},d.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===t.length){var code=t.charCodeAt(0);code<256&&(t=code)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!d.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var i;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(i=e;i<n;++i)this[i]=t;else{var o=d.isBuffer(t)?t:K(new d(t,r).toString()),l=o.length;for(i=0;i<n-e;++i)this[i+e]=o[i%l]}return this};var G=/[^+\/0-9A-Za-z-_]/g;function H(t){return t<16?"0"+t.toString(16):t.toString(16)}function K(t,e){var n;e=e||1/0;for(var r=t.length,o=null,l=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!o){if(n>56319){(e-=3)>-1&&l.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&l.push(239,191,189);continue}o=n;continue}if(n<56320){(e-=3)>-1&&l.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(e-=3)>-1&&l.push(239,191,189);if(o=null,n<128){if((e-=1)<0)break;l.push(n)}else if(n<2048){if((e-=2)<0)break;l.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;l.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;l.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return l}function J(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(G,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function X(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);++i)e[i+n]=t[i];return i}}).call(this,n(20))},function(t,e,n){"use strict";n.d(e,"b",(function(){return o})),n.d(e,"d",(function(){return c})),n.d(e,"f",(function(){return h})),n.d(e,"c",(function(){return d})),n.d(e,"e",(function(){return f})),n.d(e,"a",(function(){return m}));var r=n(177);function o(input,t){return l(input,t)}function l(input,t,e=new Map,n=new Set){if(null==input)return null;if(n.has(input))throw new Error("Circular references are not supported.");if(e.has(input))return e.get(input);const r=t(input);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(f(input)){const r=Array.isArray(input)?[]:{};n.add(input);for(const o in input){const c=l(input[o],t,e,n);r[o]=c}return n.delete(input),r}throw new Error("Can't recurse into non-iterable type: "+input)}return e.set(input,r.value),r.value}function c(t,e=h){return function t(e,n,r=new Set){const input=e[0];if(r.has(input))throw new Error("Circular references are not supported.");const o=n(e);if(o.recurse&&null!==o.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse){if(f(input)){const o=Array.isArray(input)?[]:{};r.add(input);for(const l in input){const c=e.map(t=>t[l]),h=t(c,n,r);o[l]=h}return r.delete(input),o}throw new Error("Can't recurse into non-iterable type: "+input)}return o.value}(t,e)}function h(t){return null===t?null:f(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function d(input,t){const e=new Map;l(input,t,e);for(const t of Array.from(e.keys())){const n=e.get(t);if(n instanceof Promise){const r=await n;e.set(t,r)}}return l(input,t,e)}function f(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof r.r))}function m(t){return null==t||(null===(e=t)||"object"!=typeof e&&"function"!=typeof e)||Array.isArray(t)||"object"==typeof t&&t instanceof r.r||r.Jd.isTypedArray(t);var e}},function(t,e,n){var content=n(256);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,n(59).default)("49270a12",content,!0,{sourceMap:!1})},function(t,e,n){"use strict";n.r(e);var r=n(209),o=n.n(r),l=(n(211),{components:{Dropzone:o.a},props:["onAdd"],data:function(){return{dropzoneOptions:{url:"http://localhost",createImageThumbnails:!1,autoProcessQueue:!1,thumbnailWidth:null,thumbnailHeight:null}}},mounted:function(){this.$refs.el.dropzone}}),c=(n(213),n(21)),component=Object(c.a)(l,(function(){var t=this.$createElement,e=this._self._c||t;return e("dropzone",{ref:"el",attrs:{id:"dropzone",options:this.dropzoneOptions,useCustomSlot:!0,"include-styling":!0},on:{"vdropzone-file-added":this.onAdd}},[e("h3",{staticClass:"dropzone-custom-title"},[this._v("\n    Upload "),e("br"),this._v("or"),e("br"),this._v("\n    Copy and Paste "),e("br"),e("br"),this._v("\n    KCAPTCHA Image!\n  ")])])}),[],!1,null,null,null);e.default=component.exports;installComponents(component,{Dropzone:n(200).default})},function(t,e,n){"use strict";(function(t,r){let o;function l(){if(null==o){let e;if("undefined"!=typeof window)e=window;else if(void 0!==t)e=t;else if(void 0!==r)e=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}o=e}return o}function c(t,e){const n=function(){const t=l();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return l})),n.d(e,"a",(function(){return c}))}).call(this,n(20),n(104))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return o}));const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==t?t:t=>t();function o(){return new Promise(t=>r(()=>t()))}}).call(this,n(106).setImmediate)},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return A})),n.d(e,"i",(function(){return $})),n.d(e,"c",(function(){return F})),n.d(e,"f",(function(){return j})),n.d(e,"e",(function(){return z})),n.d(e,"d",(function(){return M})),n.d(e,"k",(function(){return B})),n.d(e,"g",(function(){return P})),n.d(e,"h",(function(){return W})),n.d(e,"j",(function(){return U})),n.d(e,"b",(function(){return V}));var r=n(177),o=n(234),l=n(191),c=n(182),h=n(235),d=n(236),f=n(237),m=n(238),y=n(239),x=n(240),v=n(241),w=n(242),O=n(243),S=n(244),C=n(245),k=n(246),N=n(247),I=n(248),E=n(249),T=n(250);class A{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[h,d,f,m,y,x,v,S,O,w,C,k,N,I,E,T].map(t=>t.json));this.opMappers=t.reduce((map,t)=>(map[t.tfOpName]=t,map),{})}transformGraph(t,e={}){const n=t.node,r=[],o=[],l=n.reduce((map,t)=>(map[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")&&r.push(map[t.name]),"Const"===t.op&&o.push(map[t.name]),map),{});let h=[];const d=[];let f={},m={};null!=e&&(f=this.mapSignatureEntries(e.inputs),m=this.mapSignatureEntries(e.outputs));const y=Object.keys(l);y.forEach(t=>{const e=l[t];e.inputNames.forEach(t=>{const[n]=Object(c.b)(t);e.inputs.push(l[n]),l[n].children.push(e)})}),0===Object.keys(m).length?y.forEach(t=>{const e=l[t];0===e.children.length&&d.push(e)}):Object.keys(m).forEach(t=>{const[e]=Object(c.b)(t),n=l[e];null!=n&&(n.signatureKey=m[t],d.push(n))}),Object.keys(f).length>0?Object.keys(f).forEach(t=>{const[e]=Object(c.b)(t),n=l[e];n&&(n.signatureKey=f[t],h.push(n))}):h=r;let x={};return null!=t.library&&null!=t.library.function&&(x=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{})),{nodes:l,inputs:h,outputs:d,weights:o,placeholders:r,signature:e,functions:x}}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(l.a)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(input=>input.startsWith("^")?input.substr(1):input),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((map,param)=>(map[param.name]={type:param.type,inputIndexStart:param.start,inputIndexEnd:param.end},map),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((map,param)=>{const e=param.type;let n=void 0;switch(param.type){case"string":n=$(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=$(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"string[]":n=W(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=W(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"number":n=j(t.attr,param.tfName,param.defaultValue||0),void 0===n&&param.tfDeprecatedName&&(n=j(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"number[]":n=P(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=P(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"bool":n=F(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=F(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"bool[]":n=V(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=V(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"shape":n=B(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=B(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"shape[]":n=U(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=U(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"dtype":n=z(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=z(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"dtype[]":n=M(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=M(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"func":n=_(t.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=_(t.attr,param.tfDeprecatedName,param.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${param.type} for op: ${t.op}`)}return map[param.name]={value:n,type:e},map},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((map,t)=>(map[t.name]=this.mapNode(t),"Const"===t.op&&n.push(map[t.name]),map),{}));const o=[],l=[];t.signature.inputArg.forEach(t=>{const[e]=Object(c.b)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:D(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,o.push(n),r[e]=n});Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach(t=>{const[n]=Object(c.b)(t);e.inputs.push(r[n]),r[n].children.push(e)})});const h=t.ret;t.signature.outputArg.forEach(output=>{const[t,e]=Object(c.b)(h[output.name]),n=r[t];null!=n&&(n.defaultOutput=e,l.push(n))});const d=this.mapArgsToSignature(t);return{nodes:r,inputs:o,outputs:l,weights:n,placeholders:[],signature:d}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((map,t)=>(map[t.name]=this.mapArgToTensorInfo(t),map),{}),outputs:t.signature.outputArg.reduce((map,e)=>(map[e.name]=this.mapArgToTensorInfo(e,t.ret),map),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function R(s,e){const n=Array.isArray(s)?String.fromCharCode.apply(null,s):function(text){const e=Object(r.vb)().global;if(void 0!==e.atob)return e.atob(text);if(void 0!==t)return new t(text,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(s);return e?n:n.toLowerCase()}function $(t,e,n,r=!1){const param=t[e];return null!=param?R(param.s,r):n}function F(t,e,n){const param=t[e];return param?param.b:n}function j(t,e,n){const param=t[e]||{},r=null!=param.i?param.i:null!=param.f?param.f:n;return"number"==typeof r?r:parseInt(r,10)}function D(t){switch("string"==typeof t&&(t=o.a[t]),t){case o.a.DT_FLOAT:return"float32";case o.a.DT_INT32:case o.a.DT_INT64:case o.a.DT_INT8:case o.a.DT_UINT8:return"int32";case o.a.DT_BOOL:return"bool";case o.a.DT_DOUBLE:return"float32";case o.a.DT_STRING:return"string";default:return null}}function _(t,e,n){const param=t[e];return param&&param.func?param.func.name:n}function z(t,e,n){const param=t[e];return param&&param.type?D(param.type):n}function M(t,e,n){const param=t[e];return param&&param.list&&param.list.type?param.list.type.map(t=>D(t)):n}function L(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function B(t,e,n){const param=t[e];return param&&param.shape?L(param.shape):n}function P(t,e,n){const param=t[e];return param?((param.list.f&&param.list.f.length?param.list.f:param.list.i)||[]).map(t=>"number"==typeof t?t:parseInt(t,10)):n}function W(t,e,n,r=!1){const param=t[e];return param&&param.list&&param.list.s?param.list.s.map(t=>R(t,r)):n}function U(t,e,n){const param=t[e];return param&&param.list&&param.list.shape?param.list.shape.map(t=>L(t)):n}function V(t,e,n){const param=t[e];return param&&param.list&&param.list.b?param.list.b:n}}).call(this,n(197).Buffer)},function(t,e,n){"use strict";n.r(e);var r={created:function(){document.onpaste=this.pasteImage},props:["onPaste"],methods:{pasteImage:function(t){for(var e=this,n=(t.clipboardData||t.originalEvent.clipboardData).items,r=null,i=0;i<n.length;i++)0===n[i].type.indexOf("image")&&(r=n[i].getAsFile());if(null!==r){var o=new FileReader;o.onload=function(t){e.onPaste(t.target.result)},o.readAsDataURL(r)}}}},o=n(21),component=Object(o.a)(r,(function(){var t=this.$createElement;return(this._self._c||t)("div")}),[],!1,null,null,null);e.default=component.exports},function(t,e,n){"use strict";n.r(e);n(105),n(28);var r,o,l=n(3),c={props:["changeModalState"],data:function(){return{open:!0,exampleImages:[{path:"examples/01.png",copyText:"복사",downloadText:"다운로드"},{path:"examples/08.png",copyText:"복사",downloadText:"다운로드"},{path:"examples/63.png",copyText:"복사",downloadText:"다운로드"},{path:"examples/88.png",copyText:"복사",downloadText:"다운로드"},{path:"examples/97.png",copyText:"복사",downloadText:"다운로드"}]}},watch:{open:function(t){this.changeModalState(t)}},methods:{copy:(o=Object(l.a)(regeneratorRuntime.mark((function t(e){var n,r,o;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.copyText,e.copyText="복사 중...",t.next=4,fetch(e.path);case 4:return r=t.sent,t.next=7,r.blob();case 7:return o=t.sent,t.next=10,navigator.clipboard.write([new ClipboardItem({"image/png":o})]);case 10:e.copyText="복사됨!",setTimeout((function(){e.copyText=n}),4e3);case 12:case"end":return t.stop()}}),t)}))),function(t){return o.apply(this,arguments)}),download:(r=Object(l.a)(regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(e.path,{mode:"no-cors"}).then((function(t){return t.blob()})).then((function(t){var n=window.URL.createObjectURL(t),a=document.createElement("a");a.style.display="none",a.href=n,a.download=e.path.split("/").pop(),document.body.appendChild(a),a.click(),window.URL.revokeObjectURL(n)}));case 2:case"end":return t.stop()}}),t)}))),function(t){return r.apply(this,arguments)})}},h=(n(217),n(21)),component=Object(h.a)(c,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("sui-modal",{staticClass:"center",attrs:{basic:""},model:{value:t.open,callback:function(e){t.open=e},expression:"open"}},[n("sui-header",{tag:"h1",staticClass:"message"},[t._v("사용법")]),t._v(" "),n("h3",{staticClass:"message"},[t._v("KCAPTCHA 이미지를 업로드 또는 붙여넣기합니다")]),t._v(" "),n("sui-header",{tag:"h4",staticClass:"center",attrs:{color:"orange"}},[t._v("\n    길이 2인 숫자 CAPTCHA만 사용가능합니다\n  ")]),t._v(" "),n("sui-header",{tag:"h3",staticClass:"center"},[t._v("예시 이미지")]),t._v(" "),t._l(t.exampleImages,(function(e){return n("div",{key:e.path,staticClass:"modal-component"},[n("div",[n("img",{attrs:{src:e.path}})]),t._v(" "),n("div",[n("sui-button",{attrs:{basic:"",color:"olive"},on:{click:function(){return t.copy(e)}}},[t._v("\n        "+t._s(e.copyText)+"\n      ")])],1),t._v(" "),n("div",[n("sui-button",{attrs:{basic:"",color:"green"},on:{click:function(){return t.download(e)}}},[t._v("\n        "+t._s(e.downloadText)+"\n      ")])],1)])})),t._v(" "),n("br"),t._v(" "),n("div",{staticClass:"modal-component"},[n("sui-modal-actions",[n("sui-button",{attrs:{basic:"",size:"large",color:"orange"},nativeOn:{click:function(e){return t.changeModalState(!1)}}},[t._v(" 닫기 ")])],1)],1)],2)}),[],!1,null,null,null);e.default=component.exports},function(t,e,n){"use strict";n.r(e);n(215);var r=n(21),component=Object(r.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("a",{staticClass:"github-corner",attrs:{href:"https://github.com/ryanking13/kcaptcha","aria-label":"View source on Github"}},[e("svg",{staticStyle:{fill:"#151513",color:"#fff",position:"absolute",top:"0",border:"0",right:"0"},attrs:{width:"80",height:"80",viewBox:"0 0 250 250","aria-hidden":"true"}},[e("path",{attrs:{d:"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"}}),e("path",{staticClass:"octo-arm",staticStyle:{"transform-origin":"130px 106px"},attrs:{d:"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2",fill:"currentColor"}}),e("path",{staticClass:"octo-body",attrs:{d:"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z",fill:"currentColor"}})])])}),[],!1,null,null,null);e.default=component.exports},,function(t,e,n){var component={};(component=n(210)).name="dropzone",component.props=component.props||["useCustomSlot","includeStyling"],component.render=function(t){var e=this._self,n=this.$slots.default&&this.$slots.default.length,r=""===this.useCustomSlot||!0===this.useCustomSlot||n?[t("div",{staticClass:"dz-message"},this.$slots.default)]:this.$slots.default,o=!1!==this.$props.includeStyling;return t("div",{props:e.props,attrs:{class:o?"vue-dropzone dropzone":"",id:e.id||""},ref:"dropzoneElement"},r)},t.exports=component},function(t,e,n){t.exports=function(){"use strict";var t,e=(function(t){var e=function(){function t(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}();function i(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var r=function(){function t(){n(this,t)}return e(t,[{key:"on",value:function(t,e){return this._callbacks=this._callbacks||{},this._callbacks[t]||(this._callbacks[t]=[]),this._callbacks[t].push(e),this}},{key:"emit",value:function(t){this._callbacks=this._callbacks||{};var e=this._callbacks[t];if(e){for(var i=arguments.length,n=Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];for(var o=0,s=s=e;!(o>=s.length);)s[o++].apply(this,n)}return this}},{key:"off",value:function(t,e){if(!this._callbacks||0===arguments.length)return this._callbacks={},this;var i=this._callbacks[t];if(!i)return this;if(1===arguments.length)return delete this._callbacks[t],this;for(var n=0;n<i.length;n++)if(i[n]===e){i.splice(n,1);break}return this}}]),t}(),o=function(t){function o(t,e){n(this,o);var r,s=i(this,(o.__proto__||Object.getPrototypeOf(o)).call(this)),a=void 0;if(s.element=t,s.version=o.version,s.defaultOptions.previewTemplate=s.defaultOptions.previewTemplate.replace(/\n*/g,""),s.clickableElements=[],s.listeners=[],s.files=[],"string"==typeof s.element&&(s.element=document.querySelector(s.element)),!s.element||null==s.element.nodeType)throw new Error("Invalid dropzone element.");if(s.element.dropzone)throw new Error("Dropzone already attached.");o.instances.push(s),s.element.dropzone=s;var l,u=null!=(r=o.optionsForElement(s.element))?r:{};if(s.options=o.extend({},s.defaultOptions,u,null!=e?e:{}),s.options.forceFallback||!o.isBrowserSupported())return l=s.options.fallback.call(s),i(s,l);if(null==s.options.url&&(s.options.url=s.element.getAttribute("action")),!s.options.url)throw new Error("No URL provided.");if(s.options.acceptedFiles&&s.options.acceptedMimeTypes)throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");if(s.options.uploadMultiple&&s.options.chunking)throw new Error("You cannot set both: uploadMultiple and chunking.");return s.options.acceptedMimeTypes&&(s.options.acceptedFiles=s.options.acceptedMimeTypes,delete s.options.acceptedMimeTypes),null!=s.options.renameFilename&&(s.options.renameFile=function(t){return s.options.renameFilename.call(s,t.name,t)}),s.options.method=s.options.method.toUpperCase(),(a=s.getExistingFallback())&&a.parentNode&&a.parentNode.removeChild(a),!1!==s.options.previewsContainer&&(s.options.previewsContainer?s.previewsContainer=o.getElement(s.options.previewsContainer,"previewsContainer"):s.previewsContainer=s.element),s.options.clickable&&(!0===s.options.clickable?s.clickableElements=[s.element]:s.clickableElements=o.getElements(s.options.clickable,"clickable")),s.init(),s}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(o,r),e(o,null,[{key:"initClass",value:function(){this.prototype.Emitter=r,this.prototype.events=["drop","dragstart","dragend","dragenter","dragover","dragleave","addedfile","addedfiles","removedfile","thumbnail","error","errormultiple","processing","processingmultiple","uploadprogress","totaluploadprogress","sending","sendingmultiple","success","successmultiple","canceled","canceledmultiple","complete","completemultiple","reset","maxfilesexceeded","maxfilesreached","queuecomplete"],this.prototype.defaultOptions={url:null,method:"post",withCredentials:!1,timeout:3e4,parallelUploads:2,uploadMultiple:!1,chunking:!1,forceChunking:!1,chunkSize:2e6,parallelChunkUploads:!1,retryChunks:!1,retryChunksLimit:3,maxFilesize:256,paramName:"file",createImageThumbnails:!0,maxThumbnailFilesize:10,thumbnailWidth:120,thumbnailHeight:120,thumbnailMethod:"crop",resizeWidth:null,resizeHeight:null,resizeMimeType:null,resizeQuality:.8,resizeMethod:"contain",filesizeBase:1e3,maxFiles:null,headers:null,clickable:!0,ignoreHiddenFiles:!0,acceptedFiles:null,acceptedMimeTypes:null,autoProcessQueue:!0,autoQueue:!0,addRemoveLinks:!1,previewsContainer:null,hiddenInputContainer:"body",capture:null,renameFilename:null,renameFile:null,forceFallback:!1,dictDefaultMessage:"Drop files here to upload",dictFallbackMessage:"Your browser does not support drag'n'drop file uploads.",dictFallbackText:"Please use the fallback form below to upload your files like in the olden days.",dictFileTooBig:"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",dictInvalidFileType:"You can't upload files of this type.",dictResponseError:"Server responded with {{statusCode}} code.",dictCancelUpload:"Cancel upload",dictUploadCanceled:"Upload canceled.",dictCancelUploadConfirmation:"Are you sure you want to cancel this upload?",dictRemoveFile:"Remove file",dictRemoveFileConfirmation:null,dictMaxFilesExceeded:"You can not upload any more files.",dictFileSizeUnits:{tb:"TB",gb:"GB",mb:"MB",kb:"KB",b:"b"},init:function(){},params:function(t,e,i){if(i)return{dzuuid:i.file.upload.uuid,dzchunkindex:i.index,dztotalfilesize:i.file.size,dzchunksize:this.options.chunkSize,dztotalchunkcount:i.file.upload.totalChunkCount,dzchunkbyteoffset:i.index*this.options.chunkSize}},accept:function(t,e){return e()},chunksUploaded:function(t,e){e()},fallback:function(){var t=void 0;this.element.className=this.element.className+" dz-browser-not-supported";for(var e=0,i=i=this.element.getElementsByTagName("div");!(e>=i.length);){var n=i[e++];if(/(^| )dz-message($| )/.test(n.className)){t=n,n.className="dz-message";break}}t||(t=o.createElement('<div class="dz-message"><span></span></div>'),this.element.appendChild(t));var r=t.getElementsByTagName("span")[0];return r&&(null!=r.textContent?r.textContent=this.options.dictFallbackMessage:null!=r.innerText&&(r.innerText=this.options.dictFallbackMessage)),this.element.appendChild(this.getFallbackForm())},resize:function(t,e,i,n){var r={srcX:0,srcY:0,srcWidth:t.width,srcHeight:t.height},o=t.width/t.height;null==e&&null==i?(e=r.srcWidth,i=r.srcHeight):null==e?e=i*o:null==i&&(i=e/o);var s=(e=Math.min(e,r.srcWidth))/(i=Math.min(i,r.srcHeight));if(r.srcWidth>e||r.srcHeight>i)if("crop"===n)o>s?(r.srcHeight=t.height,r.srcWidth=r.srcHeight*s):(r.srcWidth=t.width,r.srcHeight=r.srcWidth/s);else{if("contain"!==n)throw new Error("Unknown resizeMethod '"+n+"'");o>s?i=e/o:e=i*o}return r.srcX=(t.width-r.srcWidth)/2,r.srcY=(t.height-r.srcHeight)/2,r.trgWidth=e,r.trgHeight=i,r},transformFile:function(t,e){return(this.options.resizeWidth||this.options.resizeHeight)&&t.type.match(/image.*/)?this.resizeImage(t,this.options.resizeWidth,this.options.resizeHeight,this.options.resizeMethod,e):e(t)},previewTemplate:'<div class="dz-preview dz-file-preview">\n  <div class="dz-image"><img data-dz-thumbnail /></div>\n  <div class="dz-details">\n    <div class="dz-size"><span data-dz-size></span></div>\n    <div class="dz-filename"><span data-dz-name></span></div>\n  </div>\n  <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>\n  <div class="dz-error-message"><span data-dz-errormessage></span></div>\n  <div class="dz-success-mark">\n    <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n      <title>Check</title>\n      <defs></defs>\n      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n        <path d="M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" stroke-opacity="0.198794158" stroke="#747474" fill-opacity="0.816519475" fill="#FFFFFF" sketch:type="MSShapeGroup"></path>\n      </g>\n    </svg>\n  </div>\n  <div class="dz-error-mark">\n    <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n      <title>Error</title>\n      <defs></defs>\n      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n        <g id="Check-+-Oval-2" sketch:type="MSLayerGroup" stroke="#747474" stroke-opacity="0.198794158" fill="#FFFFFF" fill-opacity="0.816519475">\n          <path d="M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" sketch:type="MSShapeGroup"></path>\n        </g>\n      </g>\n    </svg>\n  </div>\n</div>',drop:function(t){return this.element.classList.remove("dz-drag-hover")},dragstart:function(t){},dragend:function(t){return this.element.classList.remove("dz-drag-hover")},dragenter:function(t){return this.element.classList.add("dz-drag-hover")},dragover:function(t){return this.element.classList.add("dz-drag-hover")},dragleave:function(t){return this.element.classList.remove("dz-drag-hover")},paste:function(t){},reset:function(){return this.element.classList.remove("dz-started")},addedfile:function(t){var e=this;if(this.element===this.previewsContainer&&this.element.classList.add("dz-started"),this.previewsContainer){t.previewElement=o.createElement(this.options.previewTemplate.trim()),t.previewTemplate=t.previewElement,this.previewsContainer.appendChild(t.previewElement);for(var i=0,n=n=t.previewElement.querySelectorAll("[data-dz-name]");!(i>=n.length);){var r=n[i++];r.textContent=t.name}for(var s=0,a=a=t.previewElement.querySelectorAll("[data-dz-size]");!(s>=a.length);)(r=a[s++]).innerHTML=this.filesize(t.size);this.options.addRemoveLinks&&(t._removeLink=o.createElement('<a class="dz-remove" href="javascript:undefined;" data-dz-remove>'+this.options.dictRemoveFile+"</a>"),t.previewElement.appendChild(t._removeLink));for(var l=function(i){return i.preventDefault(),i.stopPropagation(),t.status===o.UPLOADING?o.confirm(e.options.dictCancelUploadConfirmation,(function(){return e.removeFile(t)})):e.options.dictRemoveFileConfirmation?o.confirm(e.options.dictRemoveFileConfirmation,(function(){return e.removeFile(t)})):e.removeFile(t)},u=0,c=c=t.previewElement.querySelectorAll("[data-dz-remove]");!(u>=c.length);)c[u++].addEventListener("click",l)}},removedfile:function(t){return null!=t.previewElement&&null!=t.previewElement.parentNode&&t.previewElement.parentNode.removeChild(t.previewElement),this._updateMaxFilesReachedClass()},thumbnail:function(t,e){if(t.previewElement){t.previewElement.classList.remove("dz-file-preview");for(var i=0,n=n=t.previewElement.querySelectorAll("[data-dz-thumbnail]");!(i>=n.length);){var r=n[i++];r.alt=t.name,r.src=e}return setTimeout((function(){return t.previewElement.classList.add("dz-image-preview")}),1)}},error:function(t,e){if(t.previewElement){t.previewElement.classList.add("dz-error"),"String"!=typeof e&&e.error&&(e=e.error);for(var i=0,n=n=t.previewElement.querySelectorAll("[data-dz-errormessage]");!(i>=n.length);)n[i++].textContent=e}},errormultiple:function(){},processing:function(t){if(t.previewElement&&(t.previewElement.classList.add("dz-processing"),t._removeLink))return t._removeLink.innerHTML=this.options.dictCancelUpload},processingmultiple:function(){},uploadprogress:function(t,e,i){if(t.previewElement)for(var n=0,r=r=t.previewElement.querySelectorAll("[data-dz-uploadprogress]");!(n>=r.length);){var o=r[n++];"PROGRESS"===o.nodeName?o.value=e:o.style.width=e+"%"}},totaluploadprogress:function(){},sending:function(){},sendingmultiple:function(){},success:function(t){if(t.previewElement)return t.previewElement.classList.add("dz-success")},successmultiple:function(){},canceled:function(t){return this.emit("error",t,this.options.dictUploadCanceled)},canceledmultiple:function(){},complete:function(t){if(t._removeLink&&(t._removeLink.innerHTML=this.options.dictRemoveFile),t.previewElement)return t.previewElement.classList.add("dz-complete")},completemultiple:function(){},maxfilesexceeded:function(){},maxfilesreached:function(){},queuecomplete:function(){},addedfiles:function(){}},this.prototype._thumbnailQueue=[],this.prototype._processingThumbnail=!1}},{key:"extend",value:function(t){for(var e=arguments.length,i=Array(e>1?e-1:0),n=1;n<e;n++)i[n-1]=arguments[n];for(var r=0,o=o=i;!(r>=o.length);){var s=o[r++];for(var a in s){var l=s[a];t[a]=l}}return t}}]),e(o,[{key:"getAcceptedFiles",value:function(){return this.files.filter((function(t){return t.accepted})).map((function(t){return t}))}},{key:"getRejectedFiles",value:function(){return this.files.filter((function(t){return!t.accepted})).map((function(t){return t}))}},{key:"getFilesWithStatus",value:function(t){return this.files.filter((function(e){return e.status===t})).map((function(t){return t}))}},{key:"getQueuedFiles",value:function(){return this.getFilesWithStatus(o.QUEUED)}},{key:"getUploadingFiles",value:function(){return this.getFilesWithStatus(o.UPLOADING)}},{key:"getAddedFiles",value:function(){return this.getFilesWithStatus(o.ADDED)}},{key:"getActiveFiles",value:function(){return this.files.filter((function(t){return t.status===o.UPLOADING||t.status===o.QUEUED})).map((function(t){return t}))}},{key:"init",value:function(){var t=this;"form"===this.element.tagName&&this.element.setAttribute("enctype","multipart/form-data"),this.element.classList.contains("dropzone")&&!this.element.querySelector(".dz-message")&&this.element.appendChild(o.createElement('<div class="dz-default dz-message"><span>'+this.options.dictDefaultMessage+"</span></div>")),this.clickableElements.length&&function e(){return t.hiddenFileInput&&t.hiddenFileInput.parentNode.removeChild(t.hiddenFileInput),t.hiddenFileInput=document.createElement("input"),t.hiddenFileInput.setAttribute("type","file"),(null===t.options.maxFiles||t.options.maxFiles>1)&&t.hiddenFileInput.setAttribute("multiple","multiple"),t.hiddenFileInput.className="dz-hidden-input",null!==t.options.acceptedFiles&&t.hiddenFileInput.setAttribute("accept",t.options.acceptedFiles),null!==t.options.capture&&t.hiddenFileInput.setAttribute("capture",t.options.capture),t.hiddenFileInput.style.visibility="hidden",t.hiddenFileInput.style.position="absolute",t.hiddenFileInput.style.top="0",t.hiddenFileInput.style.left="0",t.hiddenFileInput.style.height="0",t.hiddenFileInput.style.width="0",o.getElement(t.options.hiddenInputContainer,"hiddenInputContainer").appendChild(t.hiddenFileInput),t.hiddenFileInput.addEventListener("change",(function(){var i=t.hiddenFileInput.files;if(i.length)for(var n=0,r=r=i;!(n>=r.length);){var o=r[n++];t.addFile(o)}return t.emit("addedfiles",i),e()}))}(),this.URL=null!==window.URL?window.URL:window.webkitURL;for(var e=0,i=i=this.events;!(e>=i.length);){var n=i[e++];this.on(n,this.options[n])}this.on("uploadprogress",(function(){return t.updateTotalUploadProgress()})),this.on("removedfile",(function(){return t.updateTotalUploadProgress()})),this.on("canceled",(function(e){return t.emit("complete",e)})),this.on("complete",(function(e){if(0===t.getAddedFiles().length&&0===t.getUploadingFiles().length&&0===t.getQueuedFiles().length)return setTimeout((function(){return t.emit("queuecomplete")}),0)}));var r=function(t){return t.stopPropagation(),t.preventDefault?t.preventDefault():t.returnValue=!1};return this.listeners=[{element:this.element,events:{dragstart:function(e){return t.emit("dragstart",e)},dragenter:function(e){return r(e),t.emit("dragenter",e)},dragover:function(e){var i=void 0;try{i=e.dataTransfer.effectAllowed}catch(t){}return e.dataTransfer.dropEffect="move"===i||"linkMove"===i?"move":"copy",r(e),t.emit("dragover",e)},dragleave:function(e){return t.emit("dragleave",e)},drop:function(e){return r(e),t.drop(e)},dragend:function(e){return t.emit("dragend",e)}}}],this.clickableElements.forEach((function(e){return t.listeners.push({element:e,events:{click:function(i){return(e!==t.element||i.target===t.element||o.elementInside(i.target,t.element.querySelector(".dz-message")))&&t.hiddenFileInput.click(),!0}}})})),this.enable(),this.options.init.call(this)}},{key:"destroy",value:function(){return this.disable(),this.removeAllFiles(!0),(null!=this.hiddenFileInput?this.hiddenFileInput.parentNode:void 0)&&(this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput),this.hiddenFileInput=null),delete this.element.dropzone,o.instances.splice(o.instances.indexOf(this),1)}},{key:"updateTotalUploadProgress",value:function(){var t=void 0,e=0,i=0;if(this.getActiveFiles().length){for(var n=0,r=r=this.getActiveFiles();!(n>=r.length);){var o=r[n++];e+=o.upload.bytesSent,i+=o.upload.total}t=100*e/i}else t=100;return this.emit("totaluploadprogress",t,i,e)}},{key:"_getParamName",value:function(t){return"function"==typeof this.options.paramName?this.options.paramName(t):this.options.paramName+(this.options.uploadMultiple?"["+t+"]":"")}},{key:"_renameFile",value:function(t){return"function"!=typeof this.options.renameFile?t.name:this.options.renameFile(t)}},{key:"getFallbackForm",value:function(){var t,e=void 0;if(t=this.getExistingFallback())return t;var i='<div class="dz-fallback">';this.options.dictFallbackText&&(i+="<p>"+this.options.dictFallbackText+"</p>"),i+='<input type="file" name="'+this._getParamName(0)+'" '+(this.options.uploadMultiple?'multiple="multiple"':void 0)+' /><input type="submit" value="Upload!"></div>';var n=o.createElement(i);return"FORM"!==this.element.tagName?(e=o.createElement('<form action="'+this.options.url+'" enctype="multipart/form-data" method="'+this.options.method+'"></form>')).appendChild(n):(this.element.setAttribute("enctype","multipart/form-data"),this.element.setAttribute("method",this.options.method)),null!=e?e:n}},{key:"getExistingFallback",value:function(){for(var t=function(t){for(var e=0,i=i=t;!(e>=i.length);){var n=i[e++];if(/(^| )fallback($| )/.test(n.className))return n}},e=["div","form"],i=0;i<e.length;i++){var n,r=e[i];if(n=t(this.element.getElementsByTagName(r)))return n}}},{key:"setupEventListeners",value:function(){return this.listeners.map((function(t){return function(){var e=[];for(var i in t.events){var n=t.events[i];e.push(t.element.addEventListener(i,n,!1))}return e}()}))}},{key:"removeEventListeners",value:function(){return this.listeners.map((function(t){return function(){var e=[];for(var i in t.events){var n=t.events[i];e.push(t.element.removeEventListener(i,n,!1))}return e}()}))}},{key:"disable",value:function(){var t=this;return this.clickableElements.forEach((function(t){return t.classList.remove("dz-clickable")})),this.removeEventListeners(),this.disabled=!0,this.files.map((function(e){return t.cancelUpload(e)}))}},{key:"enable",value:function(){return delete this.disabled,this.clickableElements.forEach((function(t){return t.classList.add("dz-clickable")})),this.setupEventListeners()}},{key:"filesize",value:function(t){var e=0,i="b";if(t>0){for(var n=["tb","gb","mb","kb","b"],r=0;r<n.length;r++){var o=n[r];if(t>=Math.pow(this.options.filesizeBase,4-r)/10){e=t/Math.pow(this.options.filesizeBase,4-r),i=o;break}}e=Math.round(10*e)/10}return"<strong>"+e+"</strong> "+this.options.dictFileSizeUnits[i]}},{key:"_updateMaxFilesReachedClass",value:function(){return null!=this.options.maxFiles&&this.getAcceptedFiles().length>=this.options.maxFiles?(this.getAcceptedFiles().length===this.options.maxFiles&&this.emit("maxfilesreached",this.files),this.element.classList.add("dz-max-files-reached")):this.element.classList.remove("dz-max-files-reached")}},{key:"drop",value:function(t){if(t.dataTransfer){this.emit("drop",t);for(var e=[],i=0;i<t.dataTransfer.files.length;i++)e[i]=t.dataTransfer.files[i];if(this.emit("addedfiles",e),e.length){var n=t.dataTransfer.items;n&&n.length&&null!=n[0].webkitGetAsEntry?this._addFilesFromItems(n):this.handleFiles(e)}}}},{key:"paste",value:function(t){if(null!=(null!=(e=null!=t?t.clipboardData:void 0)?function(t){return t.items}(e):void 0)){var e;this.emit("paste",t);var n=t.clipboardData.items;return n.length?this._addFilesFromItems(n):void 0}}},{key:"handleFiles",value:function(t){for(var e=0,i=i=t;!(e>=i.length);){var n=i[e++];this.addFile(n)}}},{key:"_addFilesFromItems",value:function(t){var e=this;return function(){for(var i=[],n=0,r=r=t;!(n>=r.length);){var o,s=r[n++];null!=s.webkitGetAsEntry&&(o=s.webkitGetAsEntry())?o.isFile?i.push(e.addFile(s.getAsFile())):o.isDirectory?i.push(e._addFilesFromDirectory(o,o.name)):i.push(void 0):null==s.getAsFile||null!=s.kind&&"file"!==s.kind?i.push(void 0):i.push(e.addFile(s.getAsFile()))}return i}()}},{key:"_addFilesFromDirectory",value:function(t,e){var i=this,n=t.createReader(),r=function(t){return n=function(e){return e.log(t)},null!=(e=console)&&"function"==typeof e.log?n(e):void 0;var e,n};return function t(){return n.readEntries((function(n){if(n.length>0){for(var r=0,o=o=n;!(r>=o.length);){var s=o[r++];s.isFile?s.file((function(t){if(!i.options.ignoreHiddenFiles||"."!==t.name.substring(0,1))return t.fullPath=e+"/"+t.name,i.addFile(t)})):s.isDirectory&&i._addFilesFromDirectory(s,e+"/"+s.name)}t()}return null}),r)}()}},{key:"accept",value:function(t,e){return this.options.maxFilesize&&t.size>1024*this.options.maxFilesize*1024?e(this.options.dictFileTooBig.replace("{{filesize}}",Math.round(t.size/1024/10.24)/100).replace("{{maxFilesize}}",this.options.maxFilesize)):o.isValidFile(t,this.options.acceptedFiles)?null!=this.options.maxFiles&&this.getAcceptedFiles().length>=this.options.maxFiles?(e(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}",this.options.maxFiles)),this.emit("maxfilesexceeded",t)):this.options.accept.call(this,t,e):e(this.options.dictInvalidFileType)}},{key:"addFile",value:function(t){var e=this;return t.upload={uuid:o.uuidv4(),progress:0,total:t.size,bytesSent:0,filename:this._renameFile(t),chunked:this.options.chunking&&(this.options.forceChunking||t.size>this.options.chunkSize),totalChunkCount:Math.ceil(t.size/this.options.chunkSize)},this.files.push(t),t.status=o.ADDED,this.emit("addedfile",t),this._enqueueThumbnail(t),this.accept(t,(function(i){return i?(t.accepted=!1,e._errorProcessing([t],i)):(t.accepted=!0,e.options.autoQueue&&e.enqueueFile(t)),e._updateMaxFilesReachedClass()}))}},{key:"enqueueFiles",value:function(t){for(var e=0,i=i=t;!(e>=i.length);){var n=i[e++];this.enqueueFile(n)}return null}},{key:"enqueueFile",value:function(t){var e=this;if(t.status!==o.ADDED||!0!==t.accepted)throw new Error("This file can't be queued because it has already been processed or was rejected.");if(t.status=o.QUEUED,this.options.autoProcessQueue)return setTimeout((function(){return e.processQueue()}),0)}},{key:"_enqueueThumbnail",value:function(t){var e=this;if(this.options.createImageThumbnails&&t.type.match(/image.*/)&&t.size<=1024*this.options.maxThumbnailFilesize*1024)return this._thumbnailQueue.push(t),setTimeout((function(){return e._processThumbnailQueue()}),0)}},{key:"_processThumbnailQueue",value:function(){var t=this;if(!this._processingThumbnail&&0!==this._thumbnailQueue.length){this._processingThumbnail=!0;var e=this._thumbnailQueue.shift();return this.createThumbnail(e,this.options.thumbnailWidth,this.options.thumbnailHeight,this.options.thumbnailMethod,!0,(function(i){return t.emit("thumbnail",e,i),t._processingThumbnail=!1,t._processThumbnailQueue()}))}}},{key:"removeFile",value:function(t){if(t.status===o.UPLOADING&&this.cancelUpload(t),this.files=s(this.files,t),this.emit("removedfile",t),0===this.files.length)return this.emit("reset")}},{key:"removeAllFiles",value:function(t){null==t&&(t=!1);for(var e=0,i=i=this.files.slice();!(e>=i.length);){var n=i[e++];(n.status!==o.UPLOADING||t)&&this.removeFile(n)}return null}},{key:"resizeImage",value:function(t,e,i,n,r){var s=this;return this.createThumbnail(t,e,i,n,!0,(function(e,i){if(null==i)return r(t);var n=s.options.resizeMimeType;null==n&&(n=t.type);var a=i.toDataURL(n,s.options.resizeQuality);return"image/jpeg"!==n&&"image/jpg"!==n||(a=u.restore(t.dataURL,a)),r(o.dataURItoBlob(a))}))}},{key:"createThumbnail",value:function(t,e,i,n,r,o){var s=this,a=new FileReader;return a.onload=function(){if(t.dataURL=a.result,"image/svg+xml"!==t.type)return s.createThumbnailFromUrl(t,e,i,n,r,o);null!=o&&o(a.result)},a.readAsDataURL(t)}},{key:"createThumbnailFromUrl",value:function(t,e,i,n,r,o,s){var a=this,u=document.createElement("img");return s&&(u.crossOrigin=s),u.onload=function(){var s=function(t){return t(1)};return"undefined"!=typeof EXIF&&null!==EXIF&&r&&(s=function(t){return EXIF.getData(u,(function(){return t(EXIF.getTag(this,"Orientation"))}))}),s((function(r){t.width=u.width,t.height=u.height;var s=a.options.resize.call(a,t,e,i,n),c=document.createElement("canvas"),h=c.getContext("2d");switch(c.width=s.trgWidth,c.height=s.trgHeight,r>4&&(c.width=s.trgHeight,c.height=s.trgWidth),r){case 2:h.translate(c.width,0),h.scale(-1,1);break;case 3:h.translate(c.width,c.height),h.rotate(Math.PI);break;case 4:h.translate(0,c.height),h.scale(1,-1);break;case 5:h.rotate(.5*Math.PI),h.scale(1,-1);break;case 6:h.rotate(.5*Math.PI),h.translate(0,-c.width);break;case 7:h.rotate(.5*Math.PI),h.translate(c.height,-c.width),h.scale(-1,1);break;case 8:h.rotate(-.5*Math.PI),h.translate(-c.height,0)}l(h,u,null!=s.srcX?s.srcX:0,null!=s.srcY?s.srcY:0,s.srcWidth,s.srcHeight,null!=s.trgX?s.trgX:0,null!=s.trgY?s.trgY:0,s.trgWidth,s.trgHeight);var p=c.toDataURL("image/png");if(null!=o)return o(p,c)}))},null!=o&&(u.onerror=o),u.src=t.dataURL}},{key:"processQueue",value:function(){var t=this.options.parallelUploads,e=this.getUploadingFiles().length,i=e;if(!(e>=t)){var n=this.getQueuedFiles();if(n.length>0){if(this.options.uploadMultiple)return this.processFiles(n.slice(0,t-e));for(;i<t;){if(!n.length)return;this.processFile(n.shift()),i++}}}}},{key:"processFile",value:function(t){return this.processFiles([t])}},{key:"processFiles",value:function(t){for(var e=0,i=i=t;!(e>=i.length);){var n=i[e++];n.processing=!0,n.status=o.UPLOADING,this.emit("processing",n)}return this.options.uploadMultiple&&this.emit("processingmultiple",t),this.uploadFiles(t)}},{key:"_getFilesWithXhr",value:function(t){return this.files.filter((function(e){return e.xhr===t})).map((function(t){return t}))}},{key:"cancelUpload",value:function(t){if(t.status===o.UPLOADING){for(var e=this._getFilesWithXhr(t.xhr),i=0,n=n=e;!(i>=n.length);)n[i++].status=o.CANCELED;void 0!==t.xhr&&t.xhr.abort();for(var r=0,s=s=e;!(r>=s.length);){var a=s[r++];this.emit("canceled",a)}this.options.uploadMultiple&&this.emit("canceledmultiple",e)}else t.status!==o.ADDED&&t.status!==o.QUEUED||(t.status=o.CANCELED,this.emit("canceled",t),this.options.uploadMultiple&&this.emit("canceledmultiple",[t]));if(this.options.autoProcessQueue)return this.processQueue()}},{key:"resolveOption",value:function(t){if("function"==typeof t){for(var e=arguments.length,i=Array(e>1?e-1:0),n=1;n<e;n++)i[n-1]=arguments[n];return t.apply(this,i)}return t}},{key:"uploadFile",value:function(t){return this.uploadFiles([t])}},{key:"uploadFiles",value:function(t){var e=this;this._transformFiles(t,(function(i){if(t[0].upload.chunked){var n=t[0],r=i[0];n.upload.chunks=[];var s=function(){for(var i=0;void 0!==n.upload.chunks[i];)i++;if(!(i>=n.upload.totalChunkCount)){var s=i*e.options.chunkSize,a=Math.min(s+e.options.chunkSize,n.size),l={name:e._getParamName(0),data:r.webkitSlice?r.webkitSlice(s,a):r.slice(s,a),filename:n.upload.filename,chunkIndex:i};n.upload.chunks[i]={file:n,index:i,dataBlock:l,status:o.UPLOADING,progress:0,retries:0},e._uploadData(t,[l])}};if(n.upload.finishedChunkUpload=function(i){var r=!0;i.status=o.SUCCESS,i.dataBlock=null,i.xhr=null;for(var a=0;a<n.upload.totalChunkCount;a++){if(void 0===n.upload.chunks[a])return s();n.upload.chunks[a].status!==o.SUCCESS&&(r=!1)}r&&e.options.chunksUploaded(n,(function(){e._finished(t,"",null)}))},e.options.parallelChunkUploads)for(var a=0;a<n.upload.totalChunkCount;a++)s();else s()}else{for(var l=[],u=0;u<t.length;u++)l[u]={name:e._getParamName(u),data:i[u],filename:t[u].upload.filename};e._uploadData(t,l)}}))}},{key:"_getChunk",value:function(t,e){for(var i=0;i<t.upload.totalChunkCount;i++)if(void 0!==t.upload.chunks[i]&&t.upload.chunks[i].xhr===e)return t.upload.chunks[i]}},{key:"_uploadData",value:function(t,e){for(var i=this,n=new XMLHttpRequest,r=0,s=s=t;!(r>=s.length);)s[r++].xhr=n;t[0].upload.chunked&&(t[0].upload.chunks[e[0].chunkIndex].xhr=n);var a=this.resolveOption(this.options.method,t),l=this.resolveOption(this.options.url,t);n.open(a,l,!0),n.timeout=this.resolveOption(this.options.timeout,t),n.withCredentials=!!this.options.withCredentials,n.onload=function(e){i._finishedUploading(t,n,e)},n.onerror=function(){i._handleUploadError(t,n)},(null!=n.upload?n.upload:n).onprogress=function(e){return i._updateFilesUploadProgress(t,n,e)};var u={Accept:"application/json","Cache-Control":"no-cache","X-Requested-With":"XMLHttpRequest"};for(var c in this.options.headers&&o.extend(u,this.options.headers),u){var h=u[c];h&&n.setRequestHeader(c,h)}var p=new FormData;if(this.options.params){var d=this.options.params;for(var f in"function"==typeof d&&(d=d.call(this,t,n,t[0].upload.chunked?this._getChunk(t[0],n):null)),d){var m=d[f];p.append(f,m)}}for(var y=0,g=g=t;!(y>=g.length);){var x=g[y++];this.emit("sending",x,n,p)}this.options.uploadMultiple&&this.emit("sendingmultiple",t,n,p),this._addFormElementData(p);for(var v=0;v<e.length;v++){var b=e[v];p.append(b.name,b.data,b.filename)}this.submitRequest(n,p,t)}},{key:"_transformFiles",value:function(t,e){for(var i=this,n=[],r=0,o=function(o){i.options.transformFile.call(i,t[o],(function(i){n[o]=i,++r===t.length&&e(n)}))},s=0;s<t.length;s++)o(s)}},{key:"_addFormElementData",value:function(t){if("FORM"===this.element.tagName)for(var e=0,i=i=this.element.querySelectorAll("input, textarea, select, button");!(e>=i.length);){var n=i[e++],r=n.getAttribute("name"),o=n.getAttribute("type");if(o&&(o=o.toLowerCase()),null!=r)if("SELECT"===n.tagName&&n.hasAttribute("multiple"))for(var s=0,a=a=n.options;!(s>=a.length);){var l=a[s++];l.selected&&t.append(r,l.value)}else(!o||"checkbox"!==o&&"radio"!==o||n.checked)&&t.append(r,n.value)}}},{key:"_updateFilesUploadProgress",value:function(t,e,i){var n=void 0;if(void 0!==i){if(n=100*i.loaded/i.total,t[0].upload.chunked){var r=t[0],o=this._getChunk(r,e);o.progress=n,o.total=i.total,o.bytesSent=i.loaded,r.upload.progress=0,r.upload.total=0,r.upload.bytesSent=0;for(var s=0;s<r.upload.totalChunkCount;s++)void 0!==r.upload.chunks[s]&&void 0!==r.upload.chunks[s].progress&&(r.upload.progress+=r.upload.chunks[s].progress,r.upload.total+=r.upload.chunks[s].total,r.upload.bytesSent+=r.upload.chunks[s].bytesSent);r.upload.progress=r.upload.progress/r.upload.totalChunkCount}else for(var a=0,l=l=t;!(a>=l.length);){var u=l[a++];u.upload.progress=n,u.upload.total=i.total,u.upload.bytesSent=i.loaded}for(var c=0,h=h=t;!(c>=h.length);){var p=h[c++];this.emit("uploadprogress",p,p.upload.progress,p.upload.bytesSent)}}else{var d=!0;n=100;for(var f=0,m=m=t;!(f>=m.length);){var y=m[f++];100===y.upload.progress&&y.upload.bytesSent===y.upload.total||(d=!1),y.upload.progress=n,y.upload.bytesSent=y.upload.total}if(d)return;for(var g=0,x=x=t;!(g>=x.length);){var v=x[g++];this.emit("uploadprogress",v,n,v.upload.bytesSent)}}}},{key:"_finishedUploading",value:function(t,e,i){var n=void 0;if(t[0].status!==o.CANCELED&&4===e.readyState){if("arraybuffer"!==e.responseType&&"blob"!==e.responseType&&(n=e.responseText,e.getResponseHeader("content-type")&&~e.getResponseHeader("content-type").indexOf("application/json")))try{n=JSON.parse(n)}catch(t){i=t,n="Invalid JSON response from server."}this._updateFilesUploadProgress(t),200<=e.status&&e.status<300?t[0].upload.chunked?t[0].upload.finishedChunkUpload(this._getChunk(t[0],e)):this._finished(t,n,i):this._handleUploadError(t,e,n)}}},{key:"_handleUploadError",value:function(t,e,i){if(t[0].status!==o.CANCELED){if(t[0].upload.chunked&&this.options.retryChunks){var n=this._getChunk(t[0],e);if(n.retries++<this.options.retryChunksLimit)return void this._uploadData(t,[n.dataBlock]);console.warn("Retried this chunk too often. Giving up.")}for(var r=0,s=s=t;!(r>=s.length);)s[r++],this._errorProcessing(t,i||this.options.dictResponseError.replace("{{statusCode}}",e.status),e)}}},{key:"submitRequest",value:function(t,e,i){t.send(e)}},{key:"_finished",value:function(t,e,i){for(var n=0,r=r=t;!(n>=r.length);){var s=r[n++];s.status=o.SUCCESS,this.emit("success",s,e,i),this.emit("complete",s)}if(this.options.uploadMultiple&&(this.emit("successmultiple",t,e,i),this.emit("completemultiple",t)),this.options.autoProcessQueue)return this.processQueue()}},{key:"_errorProcessing",value:function(t,e,i){for(var n=0,r=r=t;!(n>=r.length);){var s=r[n++];s.status=o.ERROR,this.emit("error",s,e,i),this.emit("complete",s)}if(this.options.uploadMultiple&&(this.emit("errormultiple",t,e,i),this.emit("completemultiple",t)),this.options.autoProcessQueue)return this.processQueue()}}],[{key:"uuidv4",value:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){var e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)}))}}]),o}();o.initClass(),o.version="5.5.1",o.options={},o.optionsForElement=function(t){return t.getAttribute("id")?o.options[a(t.getAttribute("id"))]:void 0},o.instances=[],o.forElement=function(t){if("string"==typeof t&&(t=document.querySelector(t)),null==(null!=t?t.dropzone:void 0))throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");return t.dropzone},o.autoDiscover=!0,o.discover=function(){var t=void 0;if(document.querySelectorAll)t=document.querySelectorAll(".dropzone");else{t=[];var e=function(e){return function(){for(var i=[],n=0,r=r=e;!(n>=r.length);){var o=r[n++];/(^| )dropzone($| )/.test(o.className)?i.push(t.push(o)):i.push(void 0)}return i}()};e(document.getElementsByTagName("div")),e(document.getElementsByTagName("form"))}return function(){for(var e=[],i=0,n=n=t;!(i>=n.length);){var r=n[i++];!1!==o.optionsForElement(r)?e.push(new o(r)):e.push(void 0)}return e}()},o.blacklistedBrowsers=[/opera.*(Macintosh|Windows Phone).*version\/12/i],o.isBrowserSupported=function(){var t=!0;if(window.File&&window.FileReader&&window.FileList&&window.Blob&&window.FormData&&document.querySelector)if("classList"in document.createElement("a"))for(var e=0,i=i=o.blacklistedBrowsers;!(e>=i.length);)i[e++].test(navigator.userAgent)&&(t=!1);else t=!1;else t=!1;return t},o.dataURItoBlob=function(t){for(var e=atob(t.split(",")[1]),i=t.split(",")[0].split(":")[1].split(";")[0],n=new ArrayBuffer(e.length),r=new Uint8Array(n),o=0,s=e.length,a=0<=s;a?o<=s:o>=s;a?o++:o--)r[o]=e.charCodeAt(o);return new Blob([n],{type:i})};var s=function(t,e){return t.filter((function(t){return t!==e})).map((function(t){return t}))},a=function(t){return t.replace(/[\-_](\w)/g,(function(t){return t.charAt(1).toUpperCase()}))};o.createElement=function(t){var e=document.createElement("div");return e.innerHTML=t,e.childNodes[0]},o.elementInside=function(t,e){if(t===e)return!0;for(;t=t.parentNode;)if(t===e)return!0;return!1},o.getElement=function(t,e){var i=void 0;if("string"==typeof t?i=document.querySelector(t):null!=t.nodeType&&(i=t),null==i)throw new Error("Invalid `"+e+"` option provided. Please provide a CSS selector or a plain HTML element.");return i},o.getElements=function(t,e){var i=void 0,n=void 0;if(t instanceof Array){n=[];try{for(var r=0,o=o=t;!(r>=o.length);)i=o[r++],n.push(this.getElement(i,e))}catch(t){n=null}}else if("string"==typeof t){n=[];for(var s=0,a=a=document.querySelectorAll(t);!(s>=a.length);)i=a[s++],n.push(i)}else null!=t.nodeType&&(n=[t]);if(null==n||!n.length)throw new Error("Invalid `"+e+"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.");return n},o.confirm=function(t,e,i){return window.confirm(t)?e():null!=i?i():void 0},o.isValidFile=function(t,e){if(!e)return!0;e=e.split(",");for(var i=t.type,n=i.replace(/\/.*$/,""),r=0,o=o=e;!(r>=o.length);){var s=o[r++];if("."===(s=s.trim()).charAt(0)){if(-1!==t.name.toLowerCase().indexOf(s.toLowerCase(),t.name.length-s.length))return!0}else if(/\/\*$/.test(s)){if(n===s.replace(/\/.*$/,""))return!0}else if(i===s)return!0}return!1},"undefined"!=typeof jQuery&&null!==jQuery&&(jQuery.fn.dropzone=function(t){return this.each((function(){return new o(this,t)}))}),null!==t?t.exports=o:window.Dropzone=o,o.ADDED="added",o.QUEUED="queued",o.ACCEPTED=o.QUEUED,o.UPLOADING="uploading",o.PROCESSING=o.UPLOADING,o.CANCELED="canceled",o.ERROR="error",o.SUCCESS="success";var l=function(t,e,i,n,r,o,s,a,l,u){var c=function(t){t.naturalWidth;var e=t.naturalHeight,i=document.createElement("canvas");i.width=1,i.height=e;var n=i.getContext("2d");n.drawImage(t,0,0);for(var r=n.getImageData(1,0,1,e).data,o=0,s=e,a=e;a>o;)0===r[4*(a-1)+3]?s=a:o=a,a=s+o>>1;var l=a/e;return 0===l?1:l}(e);return t.drawImage(e,i,n,r,o,s,a,l,u/c)},u=function(){function t(){n(this,t)}return e(t,null,[{key:"initClass",value:function(){this.KEY_STR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}},{key:"encode64",value:function(t){for(var e="",i=void 0,n=void 0,r="",o=void 0,s=void 0,a=void 0,l="",u=0;o=(i=t[u++])>>2,s=(3&i)<<4|(n=t[u++])>>4,a=(15&n)<<2|(r=t[u++])>>6,l=63&r,isNaN(n)?a=l=64:isNaN(r)&&(l=64),e=e+this.KEY_STR.charAt(o)+this.KEY_STR.charAt(s)+this.KEY_STR.charAt(a)+this.KEY_STR.charAt(l),i=n=r="",o=s=a=l="",u<t.length;);return e}},{key:"restore",value:function(t,e){if(!t.match("data:image/jpeg;base64,"))return e;var i=this.decode64(t.replace("data:image/jpeg;base64,","")),n=this.slice2Segments(i),r=this.exifManipulation(e,n);return"data:image/jpeg;base64,"+this.encode64(r)}},{key:"exifManipulation",value:function(t,e){var i=this.getExifArray(e),n=this.insertExif(t,i);return new Uint8Array(n)}},{key:"getExifArray",value:function(t){for(var e=void 0,i=0;i<t.length;){if(255===(e=t[i])[0]&225===e[1])return e;i++}return[]}},{key:"insertExif",value:function(t,e){var i=t.replace("data:image/jpeg;base64,",""),n=this.decode64(i),r=n.indexOf(255,3),o=n.slice(0,r),s=n.slice(r),a=o;return(a=a.concat(e)).concat(s)}},{key:"slice2Segments",value:function(t){for(var e=0,i=[];!(255===t[e]&218===t[e+1]);){if(255===t[e]&216===t[e+1])e+=2;else{var n=e+(256*t[e+2]+t[e+3])+2,r=t.slice(e,n);i.push(r),e=n}if(e>t.length)break}return i}},{key:"decode64",value:function(t){var e=void 0,i=void 0,n="",r=void 0,o=void 0,s="",a=0,l=[];for(/[^A-Za-z0-9\+\/\=]/g.exec(t)&&console.warn("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");e=this.KEY_STR.indexOf(t.charAt(a++))<<2|(r=this.KEY_STR.indexOf(t.charAt(a++)))>>4,i=(15&r)<<4|(o=this.KEY_STR.indexOf(t.charAt(a++)))>>2,n=(3&o)<<6|(s=this.KEY_STR.indexOf(t.charAt(a++))),l.push(e),64!==o&&l.push(i),64!==s&&l.push(n),e=i=n="",r=o=s="",a<t.length;);return l}}]),t}();u.initClass(),o._autoDiscoverFunction=function(){if(o.autoDiscover)return o.discover()},function(t,e){var i=!1,n=!0,r=t.document,o=r.documentElement,s=r.addEventListener?"addEventListener":"attachEvent",a=r.addEventListener?"removeEventListener":"detachEvent",l=r.addEventListener?"":"on",u=function n(o){if("readystatechange"!==o.type||"complete"===r.readyState)return("load"===o.type?t:r)[a](l+o.type,n,!1),!i&&(i=!0)?e.call(t,o.type||o):void 0};if("complete"!==r.readyState){if(r.createEventObject&&o.doScroll){try{n=!t.frameElement}catch(t){}n&&function t(){try{o.doScroll("left")}catch(e){return void setTimeout(t,50)}return u("poll")}()}r[s](l+"DOMContentLoaded",u,!1),r[s](l+"readystatechange",u,!1),t[s](l+"load",u,!1)}}(window,o._autoDiscoverFunction)}(t={exports:{}}),t.exports),i={getSignedURL(t,e){let i={filePath:t.name,contentType:t.type};return new Promise((n,r)=>{var o=new FormData;let s=new XMLHttpRequest,a="function"==typeof e.signingURL?e.signingURL(t):e.signingURL;s.open("POST",a),s.onload=function(){200==s.status?n(JSON.parse(s.response)):r(s.statusText)},s.onerror=function(t){console.error("Network Error : Could not send request to AWS (Maybe CORS errors)"),r(t)},!0===e.withCredentials&&(s.withCredentials=!0),Object.entries(e.headers||{}).forEach(([t,e])=>{s.setRequestHeader(t,e)}),i=Object.assign(i,e.params||{}),Object.entries(i).forEach(([t,e])=>{o.append(t,e)}),s.send(o)})},sendFile(t,e,i){var n=i?this.setResponseHandler:this.sendS3Handler;return this.getSignedURL(t,e).then(e=>n(e,t)).catch(t=>t)},setResponseHandler(t,e){e.s3Signature=t.signature,e.s3Url=t.postEndpoint},sendS3Handler(t,e){let i=new FormData,n=t.signature;return Object.keys(n).forEach((function(t){i.append(t,n[t])})),i.append("file",e),new Promise((e,n)=>{let r=new XMLHttpRequest;r.open("POST",t.postEndpoint),r.onload=function(){if(201==r.status){var t=(new window.DOMParser).parseFromString(r.response,"text/xml").firstChild.children[0].innerHTML;e({success:!0,message:t})}else{var i=(new window.DOMParser).parseFromString(r.response,"text/xml").firstChild.children[0].innerHTML;n({success:!1,message:i+". Request is marked as resolved when returns as status 201"})}},r.onerror=function(t){var e=(new window.DOMParser).parseFromString(r.response,"text/xml").firstChild.children[1].innerHTML;n({success:!1,message:e})},r.send(i)})}};return e.autoDiscover=!1,function(t,e,i,n,r,o,s,a,l,u){"boolean"!=typeof s&&(s,s=!1);var c,h="function"==typeof i?i.options:i;if(t&&t.render&&(h.render=t.render,h.staticRenderFns=t.staticRenderFns,h._compiled=!0),c)if(h.functional){var p=h.render;h.render=function(t,e){return c.call(e),p(t,e)}}else{var d=h.beforeCreate;h.beforeCreate=d?[].concat(d,c):[c]}return i}({render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{ref:"dropzoneElement",class:{"vue-dropzone dropzone":this.includeStyling},attrs:{id:this.id}},[this.useCustomSlot?e("div",{staticClass:"dz-message"},[this._t("default",[this._v("Drop files here to upload")])],2):this._e()])},staticRenderFns:[]},0,{props:{id:{type:String,required:!0,default:"dropzone"},options:{type:Object,required:!0},includeStyling:{type:Boolean,default:!0,required:!1},awss3:{type:Object,required:!1,default:null},destroyDropzone:{type:Boolean,default:!0,required:!1},duplicateCheck:{type:Boolean,default:!1,required:!1},useCustomSlot:{type:Boolean,default:!1,required:!1}},data:()=>({isS3:!1,isS3OverridesServerPropagation:!1,wasQueueAutoProcess:!0}),computed:{dropzoneSettings(){let t={thumbnailWidth:200,thumbnailHeight:200};return Object.keys(this.options).forEach((function(e){t[e]=this.options[e]}),this),null!==this.awss3&&(t.autoProcessQueue=!1,this.isS3=!0,this.isS3OverridesServerPropagation=!1===this.awss3.sendFileToServer,void 0!==this.options.autoProcessQueue&&(this.wasQueueAutoProcess=this.options.autoProcessQueue),this.isS3OverridesServerPropagation&&(t.url=t=>t[0].s3Url)),t}},mounted(){if(this.$isServer&&this.hasBeenMounted)return;this.hasBeenMounted=!0,this.dropzone=new e(this.$refs.dropzoneElement,this.dropzoneSettings);let t=this;this.dropzone.on("thumbnail",(function(e,i){t.$emit("vdropzone-thumbnail",e,i)})),this.dropzone.on("addedfile",(function(e){var i,n;if(t.duplicateCheck&&this.files.length)for(i=0,n=this.files.length;i<n-1;i++)this.files[i].name===e.name&&this.files[i].size===e.size&&this.files[i].lastModifiedDate.toString()===e.lastModifiedDate.toString()&&(this.removeFile(e),t.$emit("vdropzone-duplicate-file",e));t.$emit("vdropzone-file-added",e),t.isS3&&t.wasQueueAutoProcess&&!e.manuallyAdded&&t.getSignedAndUploadToS3(e)})),this.dropzone.on("addedfiles",(function(e){t.$emit("vdropzone-files-added",e)})),this.dropzone.on("removedfile",(function(e){t.$emit("vdropzone-removed-file",e),e.manuallyAdded&&null!==t.dropzone.options.maxFiles&&t.dropzone.options.maxFiles++})),this.dropzone.on("success",(function(e,i){if(t.$emit("vdropzone-success",e,i),t.isS3){if(t.isS3OverridesServerPropagation){var n=(new window.DOMParser).parseFromString(i,"text/xml").firstChild.children[0].innerHTML;t.$emit("vdropzone-s3-upload-success",n)}t.wasQueueAutoProcess&&t.setOption("autoProcessQueue",!1)}})),this.dropzone.on("successmultiple",(function(e,i){t.$emit("vdropzone-success-multiple",e,i)})),this.dropzone.on("error",(function(e,i,n){t.$emit("vdropzone-error",e,i,n),this.isS3&&t.$emit("vdropzone-s3-upload-error")})),this.dropzone.on("errormultiple",(function(e,i,n){t.$emit("vdropzone-error-multiple",e,i,n)})),this.dropzone.on("sending",(function(e,i,n){if(t.isS3)if(t.isS3OverridesServerPropagation){let t=e.s3Signature;Object.keys(t).forEach((function(e){n.append(e,t[e])}))}else n.append("s3ObjectLocation",e.s3ObjectLocation);t.$emit("vdropzone-sending",e,i,n)})),this.dropzone.on("sendingmultiple",(function(e,i,n){t.$emit("vdropzone-sending-multiple",e,i,n)})),this.dropzone.on("complete",(function(e){t.$emit("vdropzone-complete",e)})),this.dropzone.on("completemultiple",(function(e){t.$emit("vdropzone-complete-multiple",e)})),this.dropzone.on("canceled",(function(e){t.$emit("vdropzone-canceled",e)})),this.dropzone.on("canceledmultiple",(function(e){t.$emit("vdropzone-canceled-multiple",e)})),this.dropzone.on("maxfilesreached",(function(e){t.$emit("vdropzone-max-files-reached",e)})),this.dropzone.on("maxfilesexceeded",(function(e){t.$emit("vdropzone-max-files-exceeded",e)})),this.dropzone.on("processing",(function(e){t.$emit("vdropzone-processing",e)})),this.dropzone.on("processingmultiple",(function(e){t.$emit("vdropzone-processing-multiple",e)})),this.dropzone.on("uploadprogress",(function(e,i,n){t.$emit("vdropzone-upload-progress",e,i,n)})),this.dropzone.on("totaluploadprogress",(function(e,i,n){t.$emit("vdropzone-total-upload-progress",e,i,n)})),this.dropzone.on("reset",(function(){t.$emit("vdropzone-reset")})),this.dropzone.on("queuecomplete",(function(){t.$emit("vdropzone-queue-complete")})),this.dropzone.on("drop",(function(e){t.$emit("vdropzone-drop",e)})),this.dropzone.on("dragstart",(function(e){t.$emit("vdropzone-drag-start",e)})),this.dropzone.on("dragend",(function(e){t.$emit("vdropzone-drag-end",e)})),this.dropzone.on("dragenter",(function(e){t.$emit("vdropzone-drag-enter",e)})),this.dropzone.on("dragover",(function(e){t.$emit("vdropzone-drag-over",e)})),this.dropzone.on("dragleave",(function(e){t.$emit("vdropzone-drag-leave",e)})),t.$emit("vdropzone-mounted")},beforeDestroy(){this.destroyDropzone&&this.dropzone.destroy()},methods:{manuallyAddFile:function(t,e){t.manuallyAdded=!0,this.dropzone.emit("addedfile",t);let i=!1;if((e.indexOf(".svg")>-1||e.indexOf(".png")>-1||e.indexOf(".jpg")>-1||e.indexOf(".jpeg")>-1||e.indexOf(".gif")>-1||e.indexOf(".webp")>-1)&&(i=!0),this.dropzone.options.createImageThumbnails&&i&&t.size<=1024*this.dropzone.options.maxThumbnailFilesize*1024){e&&this.dropzone.emit("thumbnail",t,e);for(var n=t.previewElement.querySelectorAll("[data-dz-thumbnail]"),r=0;r<n.length;r++)n[r].style.width=this.dropzoneSettings.thumbnailWidth+"px",n[r].style.height=this.dropzoneSettings.thumbnailHeight+"px",n[r].style["object-fit"]="contain"}this.dropzone.emit("complete",t),this.dropzone.options.maxFiles&&this.dropzone.options.maxFiles--,this.dropzone.files.push(t),this.$emit("vdropzone-file-added-manually",t)},setOption:function(t,e){this.dropzone.options[t]=e},removeAllFiles:function(t){this.dropzone.removeAllFiles(t)},processQueue:function(){let t=this.dropzone;this.isS3&&!this.wasQueueAutoProcess?this.getQueuedFiles().forEach(t=>{this.getSignedAndUploadToS3(t)}):this.dropzone.processQueue(),this.dropzone.on("success",(function(){t.options.autoProcessQueue=!0})),this.dropzone.on("queuecomplete",(function(){t.options.autoProcessQueue=!1}))},init:function(){return this.dropzone.init()},destroy:function(){return this.dropzone.destroy()},updateTotalUploadProgress:function(){return this.dropzone.updateTotalUploadProgress()},getFallbackForm:function(){return this.dropzone.getFallbackForm()},getExistingFallback:function(){return this.dropzone.getExistingFallback()},setupEventListeners:function(){return this.dropzone.setupEventListeners()},removeEventListeners:function(){return this.dropzone.removeEventListeners()},disable:function(){return this.dropzone.disable()},enable:function(){return this.dropzone.enable()},filesize:function(t){return this.dropzone.filesize(t)},accept:function(t,e){return this.dropzone.accept(t,e)},addFile:function(t){return this.dropzone.addFile(t)},removeFile:function(t){this.dropzone.removeFile(t)},getAcceptedFiles:function(){return this.dropzone.getAcceptedFiles()},getRejectedFiles:function(){return this.dropzone.getRejectedFiles()},getFilesWithStatus:function(){return this.dropzone.getFilesWithStatus()},getQueuedFiles:function(){return this.dropzone.getQueuedFiles()},getUploadingFiles:function(){return this.dropzone.getUploadingFiles()},getAddedFiles:function(){return this.dropzone.getAddedFiles()},getActiveFiles:function(){return this.dropzone.getActiveFiles()},getSignedAndUploadToS3(t){var e=i.sendFile(t,this.awss3,this.isS3OverridesServerPropagation);this.isS3OverridesServerPropagation?e.then(()=>{setTimeout(()=>this.dropzone.processFile(t))}):e.then(e=>{e.success?(t.s3ObjectLocation=e.message,setTimeout(()=>this.dropzone.processFile(t)),this.$emit("vdropzone-s3-upload-success",e.message)):void 0!==e.message?this.$emit("vdropzone-s3-upload-error",e.message):this.$emit("vdropzone-s3-upload-error","Network Error : Could not send request to AWS. (Maybe CORS error)")}),e.catch(t=>{alert(t)})},setAWSSigningURL(t){this.isS3&&(this.awss3.signingURL=t)}}},0,0,0,void 0)}()},function(t,e,n){var content=n(212);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,n(59).default)("7a3aee09",content,!0,{sourceMap:!1})},function(t,e,n){(e=n(58)(!1)).push([t.i,'@-webkit-keyframes passing-through{0%{opacity:0;transform:translateY(40px)}30%,70%{opacity:1;transform:translateY(0)}to{opacity:0;transform:translateY(-40px)}}@keyframes passing-through{0%{opacity:0;transform:translateY(40px)}30%,70%{opacity:1;transform:translateY(0)}to{opacity:0;transform:translateY(-40px)}}@-webkit-keyframes slide-in{0%{opacity:0;transform:translateY(40px)}30%{opacity:1;transform:translateY(0)}}@keyframes slide-in{0%{opacity:0;transform:translateY(40px)}30%{opacity:1;transform:translateY(0)}}@-webkit-keyframes pulse{0%{transform:scale(1)}10%{transform:scale(1.1)}20%{transform:scale(1)}}@keyframes pulse{0%{transform:scale(1)}10%{transform:scale(1.1)}20%{transform:scale(1)}}.dropzone,.dropzone *{box-sizing:border-box}.dropzone{min-height:150px;border:2px solid rgba(0,0,0,.3);background:#fff;padding:20px}.dropzone.dz-clickable{cursor:pointer}.dropzone.dz-clickable *{cursor:default}.dropzone.dz-clickable .dz-message,.dropzone.dz-clickable .dz-message *{cursor:pointer}.dropzone.dz-started .dz-message{display:none}.dropzone.dz-drag-hover{border-style:solid}.dropzone.dz-drag-hover .dz-message{opacity:.5}.dropzone .dz-message{text-align:center;margin:2em 0}.dropzone .dz-preview{position:relative;display:inline-block;vertical-align:top;margin:16px;min-height:100px}.dropzone .dz-preview:hover{z-index:1000}.dropzone .dz-preview.dz-file-preview .dz-image{border-radius:20px;background:#999;background:linear-gradient(180deg,#eee,#ddd)}.dropzone .dz-preview.dz-file-preview .dz-details{opacity:1}.dropzone .dz-preview.dz-image-preview{background:#fff}.dropzone .dz-preview.dz-image-preview .dz-details{transition:opacity .2s linear}.dropzone .dz-preview .dz-remove{font-size:14px;text-align:center;display:block;cursor:pointer;border:none}.dropzone .dz-preview .dz-remove:hover{text-decoration:underline}.dropzone .dz-preview:hover .dz-details{opacity:1}.dropzone .dz-preview .dz-details{z-index:20;position:absolute;top:0;left:0;opacity:0;font-size:13px;min-width:100%;max-width:100%;padding:2em 1em;text-align:center;color:rgba(0,0,0,.9);line-height:150%}.dropzone .dz-preview .dz-details .dz-size{margin-bottom:1em;font-size:16px}.dropzone .dz-preview .dz-details .dz-filename{white-space:nowrap}.dropzone .dz-preview .dz-details .dz-filename:hover span{border:1px solid hsla(0,0%,78.4%,.8);background-color:hsla(0,0%,100%,.8)}.dropzone .dz-preview .dz-details .dz-filename:not(:hover){overflow:hidden;text-overflow:ellipsis}.dropzone .dz-preview .dz-details .dz-filename:not(:hover) span{border:1px solid transparent}.dropzone .dz-preview .dz-details .dz-filename span,.dropzone .dz-preview .dz-details .dz-size span{background-color:hsla(0,0%,100%,.4);padding:0 .4em;border-radius:3px}.dropzone .dz-preview:hover .dz-image img{transform:scale(1.05);filter:blur(8px)}.dropzone .dz-preview .dz-image{border-radius:20px;overflow:hidden;width:120px;height:120px;position:relative;display:block;z-index:10}.dropzone .dz-preview .dz-image img{display:block}.dropzone .dz-preview.dz-success .dz-success-mark{-webkit-animation:passing-through 3s cubic-bezier(.77,0,.175,1);animation:passing-through 3s cubic-bezier(.77,0,.175,1)}.dropzone .dz-preview.dz-error .dz-error-mark{opacity:1;-webkit-animation:slide-in 3s cubic-bezier(.77,0,.175,1);animation:slide-in 3s cubic-bezier(.77,0,.175,1)}.dropzone .dz-preview .dz-error-mark,.dropzone .dz-preview .dz-success-mark{pointer-events:none;opacity:0;z-index:500;position:absolute;display:block;top:50%;left:50%;margin-left:-27px;margin-top:-27px}.dropzone .dz-preview .dz-error-mark svg,.dropzone .dz-preview .dz-success-mark svg{display:block;width:54px;height:54px}.dropzone .dz-preview.dz-processing .dz-progress{opacity:1;transition:all .2s linear}.dropzone .dz-preview.dz-complete .dz-progress{opacity:0;transition:opacity .4s ease-in}.dropzone .dz-preview:not(.dz-processing) .dz-progress{-webkit-animation:pulse 6s ease infinite;animation:pulse 6s ease infinite}.dropzone .dz-preview .dz-progress{opacity:1;z-index:1000;pointer-events:none;position:absolute;height:16px;left:50%;top:50%;margin-top:-8px;width:80px;margin-left:-40px;background:hsla(0,0%,100%,.9);-webkit-transform:scale(1);border-radius:8px;overflow:hidden}.dropzone .dz-preview .dz-progress .dz-upload{background:#333;background:linear-gradient(180deg,#666,#444);position:absolute;top:0;left:0;bottom:0;width:0;transition:width .3s ease-in-out}.dropzone .dz-preview.dz-error .dz-error-message{display:block}.dropzone .dz-preview.dz-error:hover .dz-error-message{opacity:1;pointer-events:auto}.dropzone .dz-preview .dz-error-message{pointer-events:none;z-index:1000;position:absolute;display:block;display:none;opacity:0;transition:opacity .3s ease;border-radius:8px;font-size:13px;top:130px;left:-10px;width:140px;background:#be2626;background:linear-gradient(180deg,#be2626,#a92222);padding:.5em 1.2em;color:#fff}.dropzone .dz-preview .dz-error-message:after{content:"";position:absolute;top:-6px;left:64px;width:0;height:0;border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:6px solid #be2626}.vue-dropzone{border:2px solid #e5e5e5;font-family:Arial,sans-serif;letter-spacing:.2px;color:#777;transition:.2s linear}.vue-dropzone:hover{background-color:#f6f6f6}.vue-dropzone>i{color:#ccc}.vue-dropzone>.dz-preview .dz-image{border-radius:0;width:100%;height:100%}.vue-dropzone>.dz-preview .dz-image img:not([src]){width:200px;height:200px}.vue-dropzone>.dz-preview .dz-image:hover img{transform:none;-webkit-filter:none}.vue-dropzone>.dz-preview .dz-details{bottom:0;top:0;color:#fff;background-color:rgba(33,150,243,.8);transition:opacity .2s linear;text-align:left}.vue-dropzone>.dz-preview .dz-details .dz-filename{overflow:hidden}.vue-dropzone>.dz-preview .dz-details .dz-filename span,.vue-dropzone>.dz-preview .dz-details .dz-size span{background-color:transparent}.vue-dropzone>.dz-preview .dz-details .dz-filename:not(:hover) span{border:none}.vue-dropzone>.dz-preview .dz-details .dz-filename:hover span{background-color:transparent;border:none}.vue-dropzone>.dz-preview .dz-progress .dz-upload{background:#ccc}.vue-dropzone>.dz-preview .dz-remove{position:absolute;z-index:30;color:#fff;margin-left:15px;padding:10px;top:inherit;bottom:15px;border:2px solid #fff;text-decoration:none;text-transform:uppercase;font-size:.8rem;font-weight:800;letter-spacing:1.1px;opacity:0}.vue-dropzone>.dz-preview:hover .dz-remove{opacity:1}.vue-dropzone>.dz-preview .dz-error-mark,.vue-dropzone>.dz-preview .dz-success-mark{margin-left:auto;margin-top:auto;width:100%;top:35%;left:0}.vue-dropzone>.dz-preview .dz-error-mark svg,.vue-dropzone>.dz-preview .dz-success-mark svg{margin-left:auto;margin-right:auto}.vue-dropzone>.dz-preview .dz-error-message{margin-left:auto;margin-right:auto;left:0;width:100%;text-align:center}.vue-dropzone>.dz-preview .dz-error-message:after{display:none}',""]),t.exports=e},function(t,e,n){"use strict";var r=n(193);n.n(r).a},function(t,e,n){(e=n(58)(!1)).push([t.i,'body{background:#f3f4f5;height:100%;color:#646c7f;line-height:1.4rem;font-family:Roboto,"Open Sans",sans-serif;font-size:20px;font-weight:300;text-rendering:optimizeLegibility}.dropzone{background:#fff;border-radius:5px;border:2px dashed #b71c1c;-o-border-image:none;border-image:none;max-width:500px;margin:10px auto}#dropzone .dz-preview{width:160px;display:none}#dropzone .dz-message{display:block}',""]),t.exports=e},function(t,e,n){"use strict";var r=n(194);n.n(r).a},function(t,e,n){(e=n(58)(!1)).push([t.i,".github-corner:hover .octo-arm{-webkit-animation:octocat-wave .56s ease-in-out;animation:octocat-wave .56s ease-in-out}@-webkit-keyframes octocat-wave{0%,to{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@keyframes octocat-wave{0%,to{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{-webkit-animation:none;animation:none}.github-corner .octo-arm{-webkit-animation:octocat-wave .56s ease-in-out;animation:octocat-wave .56s ease-in-out}}",""]),t.exports=e},function(t,e,n){"use strict";var r=n(195);n.n(r).a},function(t,e,n){(e=n(58)(!1)).push([t.i,".center,.message{text-align:center}.message{margin:20px}.modal-component{margin:10px;display:flex;justify-content:center;align-items:center;text-align:center}.modal-component>div{text-align:center;margin:5px 10px}",""]),t.exports=e},function(t,e,n){"use strict";(function(t){var e=n(196),r=n(183);const o=Object(r.b)();o.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),o.registerFlag("IS_BROWSER",()=>e.isBrowser()),o.registerFlag("IS_NODE",()=>void 0!==t&&void 0!==t.versions&&void 0!==t.versions.node),o.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),o.registerFlag("PROD",()=>!1),o.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>o.getBool("DEBUG")),o.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),o.registerFlag("IS_TEST",()=>!1)}).call(this,n(104))},function(t,e,n){"use strict";(function(t){var e=n(183);const r=()=>n(221);let o;class l{constructor(){this.util=n(222),this.textEncoder=new this.util.TextEncoder}fetch(path,t){return null!=Object(e.b)().global.fetch?Object(e.b)().global.fetch(path,t):(null==o&&(o=r()),o(path,t))}now(){const time=t.hrtime();return 1e3*time[0]+time[1]/1e6}encode(text,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(text)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.b)().get("IS_NODE")&&Object(e.b)().setPlatform("node",new l)}).call(this,n(104))},function(t,e){},function(t,e){},function(t,e,n){(function(t){var r;!function(t,o,l){function c(t){var e,n=this,r=(e=4022871197,function(data){data=data.toString();for(var i=0;i<data.length;i++){var t=.02519603282416938*(e+=data.charCodeAt(i));t-=e=t>>>0,e=(t*=e)>>>0,e+=4294967296*(t-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function h(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function d(t,e){var n=new c(t),r=e&&e.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,r&&("object"==typeof r&&h(r,n),o.state=function(){return h(n,{})}),o}o&&o.exports?o.exports=d:n(170)&&n(172)?void 0===(r=function(){return d}.call(e,n,e,o))||(o.exports=r):this.alea=d}(0,t,n(170))}).call(this,n(171)(t))},function(t,e,n){(function(t){var r;!function(t,o,l){function c(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function h(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function d(t,e){var n=new c(t),r=e&&e.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&h(r,n),o.state=function(){return h(n,{})}),o}o&&o.exports?o.exports=d:n(170)&&n(172)?void 0===(r=function(){return d}.call(e,n,e,o))||(o.exports=r):this.xor128=d}(0,t,n(170))}).call(this,n(171)(t))},function(t,e,n){(function(t){var r;!function(t,o,l){function c(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function h(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function d(t,e){var n=new c(t),r=e&&e.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&h(r,n),o.state=function(){return h(n,{})}),o}o&&o.exports?o.exports=d:n(170)&&n(172)?void 0===(r=function(){return d}.call(e,n,e,o))||(o.exports=r):this.xorwow=d}(0,t,n(170))}).call(this,n(171)(t))},function(t,e,n){(function(t){var r;!function(t,o,l){function c(t){var e=this;e.next=function(){var t,n,r=e.x,i=e.i;return t=r[i],n=(t^=t>>>7)^t<<24,n^=(t=r[i+1&7])^t>>>10,n^=(t=r[i+3&7])^t>>>3,n^=(t=r[i+4&7])^t<<7,t=r[i+7&7],n^=(t^=t<<13)^t<<9,r[i]=n,e.i=i+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function h(t,e){return e.x=t.x.slice(),e.i=t.i,e}function d(t,e){null==t&&(t=+new Date);var n=new c(t),r=e&&e.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=n.next,o.quick=o,r&&(r.x&&h(r,n),o.state=function(){return h(n,{})}),o}o&&o.exports?o.exports=d:n(170)&&n(172)?void 0===(r=function(){return d}.call(e,n,e,o))||(o.exports=r):this.xorshift7=d}(0,t,n(170))}).call(this,n(171)(t))},function(t,e,n){(function(t){var r;!function(t,o,l){function c(t){var e=this;e.next=function(){var t,n,r=e.w,o=e.X,i=e.i;return e.w=r=r+1640531527|0,n=o[i+34&127],t=o[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=o[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,i,o,l,c=[],h=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,h=Math.max(h,e.length)),i=0,o=-32;o<h;++o)e&&(r^=e.charCodeAt((o+32)%e.length)),0===o&&(l=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(l=l+1640531527|0,i=0==(n=c[127&o]^=r+l)?i+1:0);for(i>=128&&(c[127&(e&&e.length||0)]=-1),i=127,o=512;o>0;--o)r=c[i+34&127],n=c[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,c[i]=r^n;t.w=l,t.X=c,t.i=i}(e,t)}function h(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function d(t,e){null==t&&(t=+new Date);var n=new c(t),r=e&&e.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=n.next,o.quick=o,r&&(r.X&&h(r,n),o.state=function(){return h(n,{})}),o}o&&o.exports?o.exports=d:n(170)&&n(172)?void 0===(r=function(){return d}.call(e,n,e,o))||(o.exports=r):this.xor4096=d}(0,t,n(170))}).call(this,n(171)(t))},function(t,e,n){(function(t){var r;!function(t,o,l){function c(t){var e=this,n="";e.next=function(){var b=e.b,t=e.c,n=e.d,a=e.a;return b=b<<25^b>>>7^t,t=t-n|0,n=n<<24^n>>>8^a,a=a-b|0,e.b=b=b<<20^b>>>12^t,e.c=t=t-n|0,e.d=n<<16^t>>>16^a,e.a=a-b|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function h(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function d(t,e){var n=new c(t),r=e&&e.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&h(r,n),o.state=function(){return h(n,{})}),o}o&&o.exports?o.exports=d:n(170)&&n(172)?void 0===(r=function(){return d}.call(e,n,e,o))||(o.exports=r):this.tychei=d}(0,t,n(170))}).call(this,n(171)(t))},function(t,e,n){var r;!function(o,l){var c,h=this,d=l.pow(256,6),f=l.pow(2,52),m=2*f;function y(t,e,n){var r=[],y=w(function t(e,n){var r,o=[],l=typeof e;if(n&&"object"==l)for(r in e)try{o.push(t(e[r],n-1))}catch(t){}return o.length?o:"string"==l?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,O(o)]:null==t?function(){try{var t;return c&&(t=c.randomBytes)?t=t(256):(t=new Uint8Array(256),(h.crypto||h.msCrypto).getRandomValues(t)),O(t)}catch(t){var e=h.navigator,n=e&&e.plugins;return[+new Date,h,n,h.screen,O(o)]}}():t,3),r),S=new x(r),C=function(){for(var t=S.g(6),e=d,n=0;t<f;)t=256*(t+n),e*=256,n=S.g(1);for(;t>=m;)t/=2,e/=2,n>>>=1;return(t+n)/e};return C.int32=function(){return 0|S.g(4)},C.quick=function(){return S.g(4)/4294967296},C.double=C,w(O(S.S),o),(e.pass||n||function(t,e,n,r){return r&&(r.S&&v(r,S),t.state=function(){return v(S,{})}),n?(l.random=t,e):t})(C,y,"global"in e?e.global:this==l,e.state)}function x(t){var e,n=t.length,r=this,i=0,o=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);i<256;)s[i]=i++;for(i=0;i<256;i++)s[i]=s[o=255&o+t[i%n]+(e=s[i])],s[o]=e;(r.g=function(t){for(var e,n=0,i=r.i,o=r.j,s=r.S;t--;)e=s[i=255&i+1],n=256*n+s[255&(s[i]=s[o=255&o+e])+(s[o]=e)];return r.i=i,r.j=o,n})(256)}function v(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function w(t,e){for(var n,r=t+"",o=0;o<r.length;)e[255&o]=255&(n^=19*e[255&o])+r.charCodeAt(o++);return O(e)}function O(a){return String.fromCharCode.apply(0,a)}if(l.seedrandom=y,w(l.random(),o),t.exports){t.exports=y;try{c=n(230)}catch(t){}}else void 0===(r=function(){return y}.call(e,n,e,t))||(t.exports=r)}([],Math)},function(t,e){},function(t,e,n){"use strict";e.byteLength=function(t){var e=h(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){var e,i,n=h(t),r=n[0],c=n[1],d=new l(function(t,e,n){return 3*(e+n)/4-n}(0,r,c)),f=0,m=c>0?r-4:r;for(i=0;i<m;i+=4)e=o[t.charCodeAt(i)]<<18|o[t.charCodeAt(i+1)]<<12|o[t.charCodeAt(i+2)]<<6|o[t.charCodeAt(i+3)],d[f++]=e>>16&255,d[f++]=e>>8&255,d[f++]=255&e;2===c&&(e=o[t.charCodeAt(i)]<<2|o[t.charCodeAt(i+1)]>>4,d[f++]=255&e);1===c&&(e=o[t.charCodeAt(i)]<<10|o[t.charCodeAt(i+1)]<<4|o[t.charCodeAt(i+2)]>>2,d[f++]=e>>8&255,d[f++]=255&e);return d},e.fromByteArray=function(t){for(var e,n=t.length,o=n%3,l=[],i=0,c=n-o;i<c;i+=16383)l.push(d(t,i,i+16383>c?c:i+16383));1===o?(e=t[n-1],l.push(r[e>>2]+r[e<<4&63]+"==")):2===o&&(e=(t[n-2]<<8)+t[n-1],l.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"="));return l.join("")};for(var r=[],o=[],l="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,c=code.length;i<c;++i)r[i]=code[i],o[code.charCodeAt(i)]=i;function h(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function d(t,e,n){for(var o,l,output=[],i=e;i<n;i+=3)o=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),output.push(r[(l=o)>>18&63]+r[l>>12&63]+r[l>>6&63]+r[63&l]);return output.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,r,o){var l,c,h=8*o-r-1,d=(1<<h)-1,f=d>>1,m=-7,i=n?o-1:0,y=n?-1:1,s=t[e+i];for(i+=y,l=s&(1<<-m)-1,s>>=-m,m+=h;m>0;l=256*l+t[e+i],i+=y,m-=8);for(c=l&(1<<-m)-1,l>>=-m,m+=r;m>0;c=256*c+t[e+i],i+=y,m-=8);if(0===l)l=1-f;else{if(l===d)return c?NaN:1/0*(s?-1:1);c+=Math.pow(2,r),l-=f}return(s?-1:1)*c*Math.pow(2,l-r)},e.write=function(t,e,n,r,o,l){var c,h,d,f=8*l-o-1,m=(1<<f)-1,y=m>>1,rt=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,i=r?0:l-1,x=r?1:-1,s=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(h=isNaN(e)?1:0,c=m):(c=Math.floor(Math.log(e)/Math.LN2),e*(d=Math.pow(2,-c))<1&&(c--,d*=2),(e+=c+y>=1?rt/d:rt*Math.pow(2,1-y))*d>=2&&(c++,d/=2),c+y>=m?(h=0,c=m):c+y>=1?(h=(e*d-1)*Math.pow(2,o),c+=y):(h=e*Math.pow(2,y-1)*Math.pow(2,o),c=0));o>=8;t[n+i]=255&h,i+=x,h/=256,o-=8);for(c=c<<o|h,f+=o;f>0;t[n+i]=255&c,i+=x,c/=256,f-=8);t[n+i-x]|=128*s}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){"use strict";var r,o;n.d(e,"a",(function(){return r})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(o||(o={}))},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return c}));var r=n(177),o=n(189),l=n(252);class c extends o.a{decodeUTF8(){return new h(this)}}class h extends l.a{constructor(t){super(),this.upstream=t,this.impl=new d(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class d extends o.b{constructor(t){if(super(),this.upstream=t,Object(r.vb)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(253);this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let n,text;return!e.done&&(n=e.value,text=Object(r.vb)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(text),!0)}}}).call(this,n(197).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(189);class o extends r.a{split(t){return new l(this,t)}}class l extends o{constructor(t,e){super(),this.upstream=t,this.impl=new c(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class c extends r.b{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const line of e.slice(0,-1))this.outputQueue.push(line);return this.carryover=e[e.length-1],!0}}},function(t,e){},function(t,e){},function(t,e,n){"use strict";var r=n(199);n.n(r).a},function(t,e,n){(e=n(58)(!1)).push([t.i,"@import url(https://fonts.googleapis.com/css?family=Open+Sans|Quicksand|Roboto);"]),e.push([t.i,'.container[data-v-7e7d9f98]{max-width:100%;min-height:100vh;display:flex;justify-content:center;align-items:center;text-align:center}.title[data-v-7e7d9f98]{font-family:"Quicksand","Source Sans Pro",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif;display:block;font-weight:350;font-size:56px;color:#b71c1c;letter-spacing:1px}.subtitle[data-v-7e7d9f98]{font-weight:300;font-size:24px;color:#526488;word-spacing:5px;padding-bottom:15px}.captcha-block[data-v-7e7d9f98]{min-height:10vh}#captcha[data-v-7e7d9f98]{margin-top:20px}.captcha-result[data-v-7e7d9f98]{font-weight:400;font-size:32px;color:#b71c1c}#how-to-use-button[data-v-7e7d9f98]{margin-bottom:20px}',""]),t.exports=e},function(t,e,n){"use strict";n.r(e);var r={};n.r(r),n.d(r,"maxImpl",(function(){return ja})),n.d(r,"transposeImpl",(function(){return Da}));n(173),n(28);var o=n(3),l=n(200),c=n(205),h=n(207),d=n(206),f=n(177);let m;function y(){return null==m&&(m=Object(f.K)().epsilon()),m}class x extends Error{constructor(t){super(t),Object.setPrototypeOf(this,x.prototype)}}class v extends Error{constructor(t){super(t),Object.setPrototypeOf(this,v.prototype)}}class w extends Error{constructor(t){super(t),Object.setPrototypeOf(this,w.prototype)}}class O extends Error{constructor(t){super(t),Object.setPrototypeOf(this,O.prototype)}}class S extends Error{constructor(t){super(t),Object.setPrototypeOf(this,S.prototype)}}Error;function C(t,e){if(Array.isArray(t)){let n=[];for(let i=0;i<e;i++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function k(t,e){if(!t)throw new S(e)}function N(t,e){let n=0;for(const r of t)r===e&&n++;return n}function I(t){return 1===t.length?t[0]:t}function E(t){return Array.isArray(t)?t:[t]}function T(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function A(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let R={};function $(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function F(t,e={},n={},r="object",o=!1){if("string"==typeof t){const o=t;let l;if(o in n)l=n[o];else if(o in R)l=R[o];else if(l=e[o],null==l)throw new w(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return l}{const l=t;if(null==l.className||null==l.config)throw new w(r+": Improper config format: "+JSON.stringify(l)+".\n'className' and 'config' must set.");const c=l.className;let h,d;if(c in n?[h,d]=n[c]:c in R?[h,d]=R.className:c in e&&([h,d]=e[c]),null==h)throw new w(`Unknown ${r}: ${c}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=d){const t={};for(const e of Object.keys(R))t[e]=R[e];for(const e of Object.keys(n))t[e]=n[e];l.config.customObjects=t;const e=Object.assign({},R);for(const t of Object.keys(n))R[t]=n[t];!function t(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>t(e));else{const n=Object.keys(e);for(const r of n){const n=e[r];null!=n&&"object"==typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!=typeof n.value?t(n):e[r]=n.value)}}}(l.config);const r=d(h,l.config,n,o);return R=Object.assign({},e),r}{const t=Object.assign({},R);for(const t of Object.keys(n))R[t]=n[t];const e=new h(l.config);return R=Object.assign({},t),e}}}function j(a,b){return-1*function(a,b){return a<b?-1:a>b?1:0}(a,b)}function D(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function _(t){if(null==t)throw new w("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function z(t,label,e){if(null!=e&&t.indexOf(e)<0)throw new w(`${e} is not a valid ${label}.  Valid values are ${t} or null/undefined.`)}function M(t,e,n=0,r=1/0){return k(n>=0),k(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function L(t,e){Array.isArray(t)?(f.Jd.assert(t.length>0,()=>e+" is unexpectedly an empty array."),t.forEach((t,i)=>L(t,`element ${i+1} of ${e}`))):f.Jd.assert(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got `+function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}(t)+".")}function B(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function P(t,e){return Object(f.Bd)(()=>f.ld(f.sd(f.qc(t,t),e,!0)))}class W extends f.Tc.Serializable{getConfig(){return{}}}class U extends W{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(f.Bd)(()=>{const e=P(t,this.axis),n=f.W(e,0,this.maxValue);return f.qc(t,f.qb(n,f.x(y(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}U.className="MaxNorm",f.Tc.registerClass(U);class V extends W{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(f.Bd)(()=>f.qb(t,f.x(y(),P(t,this.axis))))}getConfig(){return{axis:this.axis}}}V.className="UnitNorm",f.Tc.registerClass(V);class G extends W{apply(t){return f.Jc(t)}}G.className="NonNeg",f.Tc.registerClass(G);class H extends W{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(f.Bd)(()=>{const e=P(t,this.axis),n=f.x(f.qc(this.rate,f.W(e,this.minValue,this.maxValue)),f.qc(1-this.rate,e));return f.qc(t,f.qb(n,f.x(y(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}H.className="MinMaxNorm",f.Tc.registerClass(H);const K={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function J(t){return $(t)}function X(t,e={}){return F(t,f.Tc.SerializationMap.getMap().classNameMap,e,"constraint")}function Y(t){if(null==t)return null;if("string"==typeof t){return X({className:t in K?K[t]:t,config:{}})}return t instanceof W?t:X(t)}const Q=["channelsFirst","channelsLast"],Z=["valid","same","causal"],tt=["max","avg"],et=["sum","mul","concat","ave"],nt=new Map;function st(t){z(Q,"DataFormat",t)}function at(t){z(Z,"PaddingMode",t)}function it(t){z(tt,"PoolMode",t)}const ot=[];function ut(t,e){ot.push(t);try{const t=e();return ot.pop(),t}catch(t){throw ot.pop(),t}}function lt(t){if(!pt(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===ot.length?"":ot.join("/")+"/")+t}function ct(t){if(!pt(t))throw new Error("Not a valid tensor name: '"+t+"'");nt.has(t)||nt.set(t,0);const e=nt.get(t);if(nt.set(t,nt.get(t)+1),e>0){const n=`${t}_${e}`;return nt.set(n,1),n}return t}const ht=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function pt(t){return!!t.match(ht)}function ft(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let i=e;i<n;++i)r*=t[i];return r}function mt(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(f.xd)(t)}function gt(t){return f.mc(mt(t)).dataSync()[0]}function bt(t){return f.fc(mt(t)).dataSync()[0]}function yt(t,e){if(e<t)throw new w(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let i=t;i<e;++i)n.push(i);return n}function xt(t,e){return t.asType(e)}function vt(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function wt(t,e,n){return Object(f.Bd)(()=>{switch(t.rank){case 1:return f.bd(t,e,n);case 2:return f.cd(t,[e,0],[n,t.shape[1]]);case 3:return f.dd(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return f.ed(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return f.ad(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return f.ad(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new w("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function Ot(t,e,n){return Object(f.Bd)(()=>{switch(t.rank){case 1:return f.bd(t,e,n);case 2:return f.cd(t,[0,e],[t.shape[0],n]);case 3:return f.dd(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return f.ed(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new w("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function St(t,e,n,r){return Object(f.Bd)(()=>{switch(t.rank){case 1:return f.bd(t,e,n);case 2:switch(r){case 1:return wt(t,e,n);case 2:return Ot(t,e,n);default:throw new w("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return wt(t,e,n);case 2:return f.dd(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Ot(t,e,n);default:throw new w("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return wt(t,e,n);case 2:return f.ed(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return f.ed(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Ot(t,e,n);default:throw new w("The axis is not within the rank of the tensor "+r)}default:throw new w("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function Ct(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),f.Z(t,e)}function kt(a,b){switch(a.rank){case 1:return f.ab([a,b]);case 2:return f.bb([a,b],0);case 3:return f.cb([a,b],0);case 4:return f.db([a,b],0);default:throw new w("concatAlongFirstAxis() received an unsupported tensor rank: "+a.rank)}}function Nt(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new w(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return f.Cd(t,e)}function It(t,e=0,n=1,r,o){return f.Cc(t,e,n,r,o)}function Et(a,b,t,e){if(a.rank<2||b.rank<2)throw new O(`dot requires both inputs to be rank >= 2 but got x shape = ${a.shape} and y shape = ${b.shape}`);if(b.rank>=3){if(a.shape.slice(-1)[0]!==b.shape.slice(-2)[0])throw new O(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${a.shape} and  y shape = `+b.shape)}if(2===a.rank&&2===b.rank){const n=!1,r=!1;return f.Gb.matMul({a:a,b:b,transposeA:n,transposeB:r,bias:e?Rt(a.rank,e,"channelsLast"):null,activation:t})}{const n=a.shape.slice(),r=n.pop();a=a.reshape([-1,r]);const o=b.shape.slice(),l=o.pop(),c=o.pop(),h=[...o,l],d=Array.from({length:b.rank},(t,i)=>0===i?b.rank-2:i<=b.rank-2?i-1:i);b=b.transpose(d).reshape([c,-1]);const m=[...n,...h],y=!1,x=!1;return f.Gb.matMul({a:a,b:b,transposeA:y,transposeB:x,bias:e?Rt(a.rank,e,"channelsLast"):null,activation:t}).reshape(m)}}function Tt(t,e,n){return Object(f.Bd)(()=>(e=Array.isArray(e)?Object(f.xd)(e,"int32"):e.toInt(),f.Hb(t,e,n)))}function At(t){return f.qc(t,t)}function Rt(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new w("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new w("Unsupported input rank by biasAdd: "+e.rank)}function $t(t,e,n){return Object(f.Bd)(()=>(null==n&&(n="channelsLast"),st(n),t.add(Rt(t.rank,e,n))))}function Ft(t,e,n,r){return Object(f.Bd)(()=>f.sb(t,e,n,r))}function jt(t,e,n=!1){return n?t():e()}const Dt=["fanIn","fanOut","fanAvg"],_t=["normal","uniform","truncatedNormal"];class zt extends f.Tc.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Mt extends zt{apply(t,e){return Object(f.Pd)(t,e)}}Mt.className="Zeros",f.Tc.registerClass(Mt);class Lt extends zt{apply(t,e){return Object(f.wc)(t,e)}}Lt.className="Ones",f.Tc.registerClass(Lt);class Bt extends zt{constructor(t){if(super(),"object"!=typeof t)throw new w("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new w("config must have value set but got "+t);this.value=t.value}apply(t,e){return Object(f.Bd)(()=>Object(f.qc)(Object(f.Pc)(this.value),Object(f.wc)(t,e)))}getConfig(){return{value:this.value}}}Bt.className="Constant",f.Tc.registerClass(Bt);class Pt extends zt{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(f.Dc)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Pt.className="RandomUniform",f.Tc.registerClass(Pt);class Wt extends zt{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new O(`randomNormal does not support dType ${e}.`);return It(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Wt.className="RandomNormal",f.Tc.registerClass(Wt);class Ut extends zt{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new O(`truncatedNormal does not support dType ${e}.`);return Object(f.Gd)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ut.className="TruncatedNormal",f.Tc.registerClass(Ut);class Vt extends zt{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(f.Bd)(()=>{if(2!==t.length||t[0]!==t[1])throw new w("Identity matrix initializer can only be used for 2D square matrices.");return Object(f.qc)(this.gain,Object(f.Bb)(t[0]))})}getConfig(){return{gain:this.gain}}}Vt.className="Identity",f.Tc.registerClass(Vt);class Gt extends zt{constructor(t){if(super(),t.scale<0)throw new w("scale must be a positive float. Got: "+t.scale);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,z(Dt,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){z(_t,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(st(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=ft(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=ft(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=ft(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],o=n[1];let l=this.scale;if("fanIn"===this.mode?l/=Math.max(1,r):"fanOut"===this.mode?l/=Math.max(1,o):l/=Math.max(1,(r+o)/2),"normal"===this.distribution){const n=Math.sqrt(l);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new O(`${this.getClassName()} does not support dType ${e}.`);return Object(f.Gd)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*l);return Object(f.Dc)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Gt.className="VarianceScaling",f.Tc.registerClass(Gt);class Ht extends Gt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Gt.className}}Ht.className="GlorotUniform",f.Tc.registerClass(Ht);class qt extends Gt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Gt.className}}qt.className="GlorotNormal",f.Tc.registerClass(qt);class Kt extends Gt{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Gt.className}}Kt.className="HeNormal",f.Tc.registerClass(Kt);class Jt extends Gt{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Gt.className}}Jt.className="HeUniform",f.Tc.registerClass(Jt);class Xt extends Gt{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Gt.className}}Xt.className="LeCunNormal",f.Tc.registerClass(Xt);class Yt extends Gt{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Gt.className}}Yt.className="LeCunNormal",f.Tc.registerClass(Yt);class Qt extends zt{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new O("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(f.Bd)(()=>{if(2!==t.length)throw new O("The Orthogonal Initializer does not support non-2D shapes yet.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const a=It(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let q=f.Vb.gramSchmidt(a);return t[0]>t[1]&&(q=q.transpose()),Object(f.qc)(this.gain,q)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Qt.className="Orthogonal",f.Tc.registerClass(Qt);const Zt={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function te(t,e={}){return F(t,f.Tc.SerializationMap.getMap().classNameMap,e,"initializer")}function ee(t){return $(t)}function ne(t){if("string"==typeof t){const e=t in Zt?Zt[t]:t;if("GlorotNormal"===e)return new qt;if("GlorotUniform"===e)return new Ht;if("HeNormal"===e)return new Kt;if("HeUniform"===e)return new Jt;if("LeCunNormal"===e)return new Xt;if("LeCunUniform"===e)return new Yt;{const t={};return t.className=e,t.config={},te(t)}}return t instanceof zt?t:te(t)}let re=0;function se(){return re++}const ae={};function ie(t=""){return t in ae||(ae[t]=0),ae[t]+=1,t+ae[t].toString()}function oe(t){return Array.isArray(t)&&Array.isArray(t[0])}function ue(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function le(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new w("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function ce(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new w("Expected exactly 1 Shape; got "+t.length)}return t}function he(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((a,b)=>a*b);return e}class de{constructor(t,e="float32",n="Variable",r=!0,o=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=se(),n=null==n?"Variable":n,this.originalName=lt(n),this.name=ct(this.originalName),this.trainable_=r,this.constraint=o,this.val=f.Kd(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function pe(t){return t.map(t=>t.read())}function fe(t){t.forEach(t=>{t[0].write(t[1])})}class me{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ge{constructor(t,e,n,r,o,l,c){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=o,this.outputTensorIndex=c,this.id=se(),null!=l&&(this.originalName=lt(l),this.name=ct(this.originalName)),this.rank=e.length}}let be=0;class ye{constructor(t,e){this.callArgs=e,this.id=be++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let xe=0;class ve extends f.Tc.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=xe++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=T(t)+"_"+ie(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new v(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new w(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return I(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return I(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new x("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new x("Layer "+this.name+" is not connected, no input to return.");return I(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new x("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new x("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return I(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=E(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=E(this.inputSpec);if(t.length!==e.length)throw new w(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],o=e[n];if(null==o)continue;const l=r.rank;if(null!=o.ndim&&l!==o.ndim)throw new w(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${l}`);if(null!=o.maxNDim&&l>o.maxNDim)throw new w(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${l}`);if(null!=o.minNDim&&l<o.minNDim)throw new w(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${l}.`);if(null!=o.dtype&&r.dtype!==o.dtype)throw new w(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const t=r.shape;for(const e in o.axes){const r=Number(e),l=o.axes[e],c=r>=0?t[r]:t[t.length+r];if(null!=l&&-1===[l,null].indexOf(c))throw new w(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${l} but got shape ${t}.`)}}if(null!=o.shape)for(let i=0;i<o.shape.length;++i){const t=o.shape[i],e=r.shape[i];if(null!=t&&null!=e&&t!==e)throw new w(`Input ${n} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=E(t);let r=!0;for(const input of n)if(!(input instanceof ge)){r=!1;break}let o=!0;for(const input of n)if(input instanceof ge){o=!1;break}if(r===o)throw new w("Arguments to apply() must be all SymbolicTensors or all Tensors");return ut(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of E(t))e.push(n.shape);this.build(I(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&o&&(this._refCount=1)}if(this.assertInputCompatibility(t),o){let output=this.call(t,e);const r=E(output),o=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),o.push(t);if(output=I(o),null!=this.activityRegularizer)throw new O("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return output}{const n=function(t){t=E(t);const e=[];for(const n of t)e.push(n.shape);return I(e)}(t),r=this.computeOutputShape(n);let output;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),output=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new ge(o,n,this,E(t),e,this.name,r)):new ge(o,r,this,E(t),e,this.name),this.addInboundNode(t,output,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new O("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return output}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach((n,i)=>{null!=n&&null!=t[i]&&t[i]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new x(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new x(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new v(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return he(this.weights)}build(t){this.built=!0}getWeights(t=!1){return pe(t?this.trainableWeights:this.weights)}setWeights(t){Object(f.Bd)(()=>{const e=this.weights;if(e.length!==t.length)throw new w(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=pe(e);for(let i=0;i<r.length;++i){const o=r[i],p=e[i],l=t[i];if(!f.Jd.arraysEqual(o.shape,l.shape))throw new w(`Layer weight shape ${o.shape} not compatible with provided weight shape `+l.shape);n.push([p,l])}fe(n)})}addWeight(t,e,n,r,o,l,c){if(-1!==this._addedWeightNames.indexOf(t))throw new w(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=ne("zeros"));const h=r.apply(e,n),d=new de(h,n,t,l,c);return h.dispose(),null!=o&&this.addLoss(()=>o.apply(d.read())),null==l&&(l=!0),l?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=E(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,mask){if(!this.supportsMasking){if(null!=mask){if(!Array.isArray(mask))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);mask.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return mask}addInboundNode(t,e,n,r,o,l,c=null){const h=E(t);e=E(e),n=E(n),r=E(r),o=ue(o),l=ue(l);const d=[],f=[],m=[];for(const t of h)d.push(t.sourceLayer),f.push(t.nodeIndex),m.push(t.tensorIndex);new ye({outboundLayer:this,inboundLayers:d,nodeIndices:f,tensorIndices:m,inputTensors:h,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:o,outputShapes:l},c);for(let i=0;i<e.length;i++)e[i].sourceLayer=this,e[i].nodeIndex=this.inboundNodes.length-1,e[i].tensorIndex=i}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}class we extends ve{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:ie("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new w("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new w("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new w("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new ge(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new ye({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new w("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Oe(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new w("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new we({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function Se(t){if(null==t)return;const e=[],n=[],r=[];for(const o in t){const l=t[o];if("number"!=typeof l){const t=l;e.push(t.data()),n.push(o),r.push(t)}}if(e.length>0){const o=await Promise.all(e);for(let i=0;i<o.length;++i)t[n[i]]=o[i][0];Object(f.pb)(r)}}function Ce(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var ke;we.className="InputLayer",f.Tc.registerClass(we),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(ke||(ke={}));class Ne{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Ie{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Ee extends Ne{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const o=Object(f.Bd)(()=>Object(f.x)(this.totals[t],Object(f.qc)(r,n)));this.totals[t]=o,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Object(f.Bd)(()=>{const n=Object(f.qc)(Object(f.qb)(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Object(f.Qb)(e[t])}))}}class Te extends Ne{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const o=this.history[r];for(let i=0;i<o.length;++i)if("number"!=typeof o[i]){const l=o[i];t.push(l.data()),e.push(r),n.push(i)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t){this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}}class Ae extends Ne{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");f.Jd.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=f.Jd.now();return(...o)=>{const l=f.Jd.now();return l-r<e||(r=l,n=t(...o)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await Se(n),r.push(this.yield(t,e,n))),r.push(Object(f.tc)()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Se(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Se(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(f.tc)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Se(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Se(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(f.tc)()):f.Jd.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Se(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Se(t),await this.trainEnd(t))}}function Re(t,e){if(null==t&&(t={}),t instanceof Ne)return[t];if(Array.isArray(t)&&t[0]instanceof Ne)return t;return E(t).map(t=>new Ae(t,e))}class $e{constructor(){}static registerCallbackConstructor(t,e){f.Jd.assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),$e.checkForDuplicate(e),null==$e.constructors[t]&&($e.constructors[t]=[]),$e.constructors[t].push(e)}static checkForDuplicate(t){for(const e in $e.constructors){$e.constructors[+e].forEach(e=>{if(e===t)throw new w("Duplicate callback constructor.")})}}static clear(){$e.constructors={}}static createCallbacks(t){const e=[];for(const n in $e.constructors){const r=+n;t>=r&&e.push(...$e.constructors[r])}return e.map(t=>new t)}}function Fe(t,e,n,r,o,l,c,h,d){const f=new Te,m=[new Ee,...$e.createCallbacks(e)];null!=t&&m.push(...t),m.push(f);const y=new Ie(m);return y.setParams({epochs:n,initialEpoch:r,samples:o,steps:l,batchSize:c,verbose:e,doValidation:h,metrics:d}),{callbackList:y,history:f}}function je(t,e={},n=!1){return F(t,f.Tc.SerializationMap.getMap().classNameMap,e,"layer",n)}function De(t,e){return Object(f.Bd)(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=f.sd(At(t),e,!0),r=f.Db(n.shape,y()),o=f.ld(f.jc(n,r));return f.qb(t,o)})}function _e(t,e){return Object(f.Bd)(()=>f.kc(At(f.rd(e,t)),-1))}function ze(t,e){return Object(f.Bd)(()=>f.kc(f.u(f.rd(e,t)),-1))}function Me(t,e){return Object(f.Bd)(()=>{const n=f.rd(t,e),r=f.W(f.u(t),y(),Number.MAX_VALUE),o=f.u(f.qb(n,r));return f.qc(100,f.kc(o,-1))})}function Le(t,e){return Object(f.Bd)(()=>{const n=f.W(e,y(),Number.MAX_VALUE),r=f.Yb(f.x(1,n)),o=f.W(t,y(),Number.MAX_VALUE),l=f.Yb(f.x(1,o));return f.kc(At(f.rd(r,l)),-1)})}function Be(t,output,e=!1){return Object(f.Bd)(()=>{if(e)output=f.gd(output);else{const t=f.sd(output,output.shape.length-1,!0);output=f.qb(output,t)}return output=f.W(output,y(),1-y()),f.sc(f.sd(f.qc(t.toFloat(),f.Yb(output)),output.shape.length-1))})}function Pe(t,output,e=!1){return Object(f.Bd)(()=>{const n=f.Eb(function(t){const e=[ft(t.shape)];return t.reshape(e)}(t)).toInt(),r=(output=f.W(output,y(),1-y())).shape;return Be(f.vc(n,r[r.length-1]).reshape(r),output,e)})}function We(t,e){return Object(f.Bd)(()=>{let n;return n=f.W(e,y(),1-y()),n=f.Yb(f.qb(n,f.rd(1,n))),f.kc(function(t,e){if(!f.Jd.arraysEqual(t.shape,e.shape))throw new w(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Object(f.Bd)(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function Ue(t,e){return Object(f.Bd)(()=>{const n=f.W(t,y(),1),r=f.W(e,y(),1);return f.sd(f.qc(t,f.Yb(f.qb(n,r))),-1)})}function Ve(t,e){return Object(f.Bd)(()=>{const n=De(t,-1),r=De(e,-1),o=f.qc(n,r);return f.sc(f.sd(o,-1))})}$e.constructors={};const Ge={meanSquaredError:_e,meanAbsoluteError:ze,meanAbsolutePercentageError:Me,meanSquaredLogarithmicError:Le,squaredHinge:function(t,e){return Object(f.Bd)(()=>{const n=f.jc(0,f.rd(1,f.qc(t,e)));return f.kc(At(n),-1)})},hinge:function(t,e){return Object(f.Bd)(()=>{const n=f.jc(0,f.rd(1,f.qc(t,e)));return f.kc(n,-1)})},categoricalHinge:function(t,e){return Object(f.Bd)(()=>{const n=f.sd(f.qc(t,e),-1),r=f.fc(f.qc(f.rd(1,t),e),-1);return f.jc(0,f.x(1,f.rd(r,n)))})},logcosh:function(t,e){return Object(f.Bd)(()=>{const n=Math.log(2),r=f.rd(e,t),o=f.rd(f.x(r,f.hd(f.qc(-2,r))),n);return f.kc(o,-1)})},categoricalCrossentropy:Be,sparseCategoricalCrossentropy:Pe,binaryCrossentropy:We,kullbackLeiblerDivergence:Ue,poisson:function(t,e){return Object(f.Bd)(()=>{const n=f.Yb(f.x(y(),e));return f.kc(f.rd(e,f.qc(t,n)),-1)})},cosineProximity:Ve};function He(t){if("string"==typeof t){if(t in Ge)return Ge[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new w(e)}return t}function qe(t,e){return Object(f.Bd)(()=>{const n=f.qc(.5,f.xc(e)),r=xt(f.Jb(e,n),t.dtype);return f.kc(f.wb(t,r),-1)})}function Ke(t,e){return Object(f.Bd)(()=>xt(f.wb(f.B(t,-1),f.B(e,-1)),"float32"))}function Je(t,e){return Object(f.Bd)(()=>f.bc(t.equal(1),e.equal(1)).sum().cast("float32"))}function Xe(t,e){return Object(f.Bd)(()=>{const n=Je(t,e),r=function(t,e){return Object(f.Bd)(()=>f.bc(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),o=n.add(r);return f.Nd(f.Jb(o,0),n.div(o),0).cast("float32")})}function Ye(t,e){return We(t,e)}function Qe(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),f.wb(t,e).asType("float32")}const Ze=Be,tn=Pe,en={binaryAccuracy:qe,categoricalAccuracy:Ke,precision:Xe,categoricalCrossentropy:Ze,sparseCategoricalCrossentropy:tn,mse:_e,MSE:_e,mae:ze,MAE:ze,mape:Me,MAPE:Me,cosine:Ve};function nn(t){if("string"==typeof t&&t in en)return en[t];if("string"!=typeof t&&null!=t)return t;throw new w("Unknown metric "+t)}function rn(t){if(k(null!==t,"Unknown LossOrMetricFn "+t),"string"==typeof t)return t;{let e;for(const n of Object.keys(Ge))if(Ge[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(en))if(en[n]===t){e=n;break}return void 0!==e?e:t.name}}function sn(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!function t(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const n=Object.keys(e);for(const r of n){if("string"!=typeof r)return!1;if(!t(e[r]))return!1}return!0}if(Array.isArray(e)){for(const n of e)if(!t(n))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function an(t,e,n,r=console.log){const o=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const o of n.inboundNodes)if(-1!==r.indexOf(o)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),l=["Layer (type)","Output shape","Param #"];let c;if(o?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(p=>Math.floor(e*p))),!o){l.push("Receives inputs"),c=[];for(const e in t.nodesByDepth)c.push(...t.nodesByDepth[e])}r("_".repeat(e)),on(l,n,r),r("=".repeat(e));const h=t.layers;for(let i=0;i<h.length;++i)o?un(h[i],n,r):ln(h[i],n,c,r),r((i===h.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const d=function(t){let e;e=null!=t.collectedTrainableWeights?he(t.collectedTrainableWeights):he(t.trainableWeights);return e}(t),f=he(t.nonTrainableWeights);r("Total params: "+(d+f)),r("Trainable params: "+d),r("Non-trainable params: "+f),r("_".repeat(e))}function on(t,e,n=console.log){let line="";for(let i=0;i<t.length;++i)i>0&&(line=line.slice(0,line.length-1)+" "),line+=t[i],line=line.slice(0,e[i]),line+=" ".repeat(e[i]-line.length);n(line)}function un(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}on([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function ln(t,e,n,r){let o;try{o=JSON.stringify(t.outputShape)}catch(t){o="multiple"}const l=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let i=0;i<e.inboundLayers.length;++i){const t=e.inboundLayers[i].name,n=e.nodeIndices[i],r=e.tensorIndices[i];l.push(`${t}[${n}][${r}]`)}const c=t.name,h=t.getClassName(),d=0===l.length?"":l[0];on([`${c} (${h})`,o,t.countParams().toString(),d],e,r);for(let i=1;i<l.length;++i)on(["","","",l[i]],e,r)}function cn(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function hn(t,e){if(null===t)return null;if("string"==typeof t)return A(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let i=0;i<r;++i){const r=t[i];cn(e,i,r)?n.push(r):n.push(hn(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=A(n);e[t]=hn(r,t)}}return e}}class dn{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof dn)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,mask){if(null!=this.id2Value[t.id])throw new w(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(f.U)(e,t.dtype)}catch(n){throw new w(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=mask&&(this.id2Mask[t.id]=mask),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ge){if(null==this.id2Value[t.id])throw new w("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new w("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof ge){if(null==this.id2Value[t.id])throw new w("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new w("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(f.pb)(this.id2Mask)}}const pn={},fn={};function mn(t,e,n,r){const o=null!=n&&n.training,l=Array.isArray(t),c=l?t:[t],h=c.map(t=>t.name),d=[],m=e.names();for(const t of h)-1!==m.indexOf(t)?d.push(e.getValue(t)):d.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const y=h.join(",")+"|"+e.names().join(",");let x,v;if(null==pn[y]){const t=function(t,e){f.Jd.assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const o=bn(t[0],e);n=o.sorted,r=o.recipientMap}else{const o=new Set;for(const l of t){const{sorted:t,recipientMap:c}=bn(l,e);for(const e of t)o.has(e.name)||(n.push(e),o.add(e.name));for(const t in c)null==r[t]&&(r[t]=new Set),c[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:gn(r)}}(c,e);x=t.sorted,v=t.recipientCounts,pn[y]=x,fn[y]=v}x=pn[y],v={},o||Object.assign(v,fn[y]);const w=new dn(e);for(let i=0;i<x.length;++i){if(null!=r){const t=Object(f.lc)().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=x[i],l=t.sourceLayer;if(l instanceof we)continue;const c=[],m=[],y=[];let O=!1;for(const input of t.inputs){const t=w.getValue(input),mask=w.getMask(input);c.push(t),m.push(mask),null!=mask&&(O=!0),o||(v[input.name]--,0!==v[input.name]||e.hasKey(input)||-1!==h.indexOf(input.name)||t.isDisposed||!0===input.sourceLayer.stateful||y.push(t))}O&&((n=n||{}).mask=m[0]);const S=E(l.apply(c,n));let C=null;l.supportsMasking&&(C=l.computeMask(c,m));const k=yn(t),N=Array.isArray(k)?k:[k];for(let i=0;i<N.length;++i){w.hasKey(N[i])||w.add(N[i],S[i],Array.isArray(C)?C[0]:C);const t=h.indexOf(N[i].name);-1!==t&&(d[t]=S[i])}o||Object(f.pb)(y)}return w.disposeMasks(),l?d:d[0]}function gn(t){const e={};for(const n in t)e[n]=t[n].size;return e}function bn(t,e){const n=new Set,r=[],o={};for(const t of e.names())n.add(t);const l=[],c=[];for(l.push(t);l.length>0;){const t=l[l.length-1];if(n.has(t.name)){l.pop();continue}const e=c[c.length-1]===l.length-1;if(0===t.inputs.length||e)l.pop(),r.push(t),n.add(t.name),e&&c.pop();else{c.push(l.length-1);for(const input of t.inputs)null==o[input.name]&&(o[input.name]=new Set),o[input.name].add(t.name),n.has(input.name)||l.push(input)}}return{sorted:r,recipientMap:o}}function yn(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let i=0;i<t.sourceLayer.inboundNodes.length;++i)for(const e of t.sourceLayer.inboundNodes[i].outputTensors)if(e.id===t.id){n=i;break}e=t.sourceLayer.getOutputAt(n)}return e}class xn extends ve{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=ie(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],D(this.inputs).length!==this.inputs.length)throw new w("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(t=>t.name));D(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(t=>t.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;k(0===n,"input layer has >1 nodes"),k(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i];if(!(e instanceof we))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${i} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},o={},l={},c=[],h=(t,e,n,r,o,d)=>{null!=r&&null!=o&&null!=d||(r=t.sourceLayer,o=t.nodeIndex,d=t.tensorIndex);const f=r.inboundNodes[o];if(-1!==n.indexOf(f))throw new v(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(f))return;this.containerNodes.add(xn.nodeKey(r,o)),r.id in l||(l[r.id]=Object.keys(l).length),-1===n.indexOf(f)&&n.push(f);const m=f.inboundLayers.length;for(let i=0;i<m;i++){const t=f.inputTensors[i],r=f.inboundLayers[i],o=f.nodeIndices[i],l=f.tensorIndices[i];h(t,e,n,r,o,l)}for(e.push(f);n.indexOf(f)>=0;)n.splice(n.indexOf(f),1);c.push(f)},d=[],f=[];for(const t of this.outputs)h(t,d,f);const m=c.slice().reverse();for(const t of m){n[t.id]=t,t.id in e||(e[t.id]=0);let l=e[t.id];const c=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];l=Math.max(l,c),r[t.outboundLayer.id]=l,o[t.outboundLayer.id]=t.outboundLayer,e[t.id]=l;for(let i=0;i<t.inboundLayers.length;i++){const r=t.inboundLayers[i],o=t.nodeIndices[i],c=r.inboundNodes[o],h=null==e[c.id]?0:e[c.id];e[c.id]=Math.max(l+1,h),n[c.id]=c}}const y={};for(const t in e){const r=e[t];r in y||(y[r]=[]),y[r].push(n[t])}const x={};for(const t in r){const e=r[t];e in x||(x[e]=[]),x[e].push(o[t])}let O=Object.keys(x).map(t=>parseInt(t,10)).sort(j);this.layers=[];for(const t of O){const e=x[t];e.sort((a,b)=>{const t=l[a.id],e=l[b.id];return t<e?-1:t>e?1:0});for(const t of e)t instanceof xn&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=x,O=Object.keys(y).map(t=>parseInt(t,10)).sort(j);const S=this.inputs.slice(),C=[];for(const t of O)for(const e of y[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===S.indexOf(n))throw new v("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+C);for(const t of e.outputTensors)S.push(t);C.push(t.name)}}this.nodesByDepth=y;const N=this.layers.map(t=>t.name);for(const t of N){const e=N.filter(e=>e===t).length;if(1!==e)throw new v(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(N))}this.outboundNodes=[],this.inboundNodes=[],new ye({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new w("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new w("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const o=[];for(const r in t){let l=r;if(null==n[r]){const t=r.split("/");l=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[l])o.push([n[l],t[r]]);else if(e)throw new w("Provided weight data has no target variable: "+r);delete n[l]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new w(`${t.length} of ${r} weights are not set: `+t)}fe(o)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.3.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=function t(e,n){if(null==e)return null;if("string"==typeof e)return T(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const r=[],o=e.length;for(let i=0;i<o;++i){const o=e[i];cn(n,i,o)?r.push(o):r.push(t(o,n))}return r}{const n={};for(const r of Object.keys(e)){const o=e[r],l=T(r);n[l]="name"!==r&&"className"!==r||"string"!=typeof o?t(o,r):o}return n}}(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(f.Bd)(()=>{t=E(t);const n=new dn;for(let i=0;i<this.inputs.length;++i)n.add(this.inputs[i],t[i]);return mn(this.outputs,n,e)})}computeMask(t,mask){return Object(f.Bd)(()=>{let e;return t=E(t),e=null==mask?C(null,t.length):E(mask),this.runInternalGraph(t,e)[1]})}computeOutputShape(t){const e=ue(t);if(e.length!==this.inputLayers.length)throw new w(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<e.length;i++){const t=this.inputLayers[i],r=e[i];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(j);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const o=t.inboundLayers[e],l=t.nodeIndices[e],c=t.tensorIndices[e],h=n[`${o.name}_${l}_${c}`];r.push(h)}const o=ue(e.computeOutputShape(I(r))),l=e.inboundNodes.indexOf(t);for(let t=0;t<o.length;t++){n[`${e.name}_${l}_${t}`]=o[t]}}}const o=[],l=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],e=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${t.name}_${e}_${n}`;l.push(r)}for(let i=0;i<l.length;i++){const t=l[i];k(t in n),o.push(n[t])}return I(o)}runInternalGraph(t,e){null==e&&(e=C(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],o=t[i],mask=e[i];n[r.id]=[o,mask]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(j);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,o=t.outputTensors,l=new Array;for(const t of r)t.id in n&&l.push(n[t.id]);if(l.length===r.length){let r,c,h,d,f={};if(null!=t.callArgs&&(f=t.callArgs),1===l.length){const[t,n]=l[0];null==f.mask&&(f.mask=n),h=E(e.call(t,f)),d=E(e.computeMask(t,n)),r=[t],c=[n]}else r=l.map(t=>t[0]),c=l.map(t=>t[1]),null==f.mask&&(f.mask=c),h=E(e.call(r,f)),d=E(e.computeMask(r,c));if(e.activityRegularizer)throw new O("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let i=0;i<o.length;++i){const t=o[i],e=h[i],mask=d[i];n[t.id]=[e,mask]}}}}const o=[],l=[],c=[];for(const t of this.outputs){k(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,mask]=n[t.id];c.push(e.shape),o.push(e),l.push(mask)}return[o,l,c]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof xn?1:0;for(let r=0;r<t.inboundNodes.length;r++){const o=xn.nodeKey(t,r);this.containerNodes.has(o)&&(e[o]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new w(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new w("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new w("No such layer: "+t)}calculateLosses(){return Object(f.Bd)(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=xn.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),o=t.getConfig(),l=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],o=xn.nodeKey(t,n);let c={};if(this.containerNodes.has(o)){if(r.callArgs)try{JSON.stringify(r.callArgs),c=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: `+r.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),c={}}if(r.inboundLayers.length>0){const t=[];for(let i=0;i<r.inboundLayers.length;i++){const n=r.inboundLayers[i],o=r.nodeIndices[i],l=r.tensorIndices[i];let h=e[xn.nodeKey(n,o)];null==h&&(h=0),t.push([n.name,h,l,c])}l.push(t)}}}const c={};c.name=t.name,c.className=r,c.config=o,c.inboundNodes=l,n.push(c)}t.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i],n=this.inputLayersNodeIndices[i],o=xn.nodeKey(t,n);if(!this.containerNodes.has(o))continue;let l=e[o];null==l&&(l=0);const c=this.inputLayersTensorIndices[i];r.push([t.name,l,c])}t.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=xn.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let l=e[r];null==l&&(l=0);const c=this.outputLayersTensorIndices[i];o.push([t.name,l,c])}return t.outputLayers=o,t}static fromConfig(t,e,n={},r=!1){const o={},l={};function c(t,e){t.name in l?l[t.name].push(e):l[t.name]=[e]}function h(t,e){const n=[];let r;for(const l of e){const h=l[0],d=l[1],f=l[2];if(r=null==l[3]?{}:l[3],!(h in o))return void c(t,e);const m=o[h];if(m.inboundNodes.length<=d)return void c(t,e);const y=m.inboundNodes[d];n.push(y.outputTensors[f])}n.length>0&&t.apply(I(n),r)}function d(t){const n=t.name,l=je(t,null!=e.customObjects?e.customObjects:{});l.setFastWeightInitDuringBuild(r),o[n]=l;t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new w("Corrupted configuration, expected array for nodeData: "+t);c(l,t)})}const f=e.name,m=e.layers;for(const t of m)d(t);for(;!_(l);)for(const t of m){const e=o[t.name];if(e.name in l){const t=l[e.name];delete l[e.name];for(const n of t)h(e,n)}}const y=[],x=[],v=e.inputLayers;for(const t of v){const e=t[0],n=t[1],r=t[2];k(e in o);const l=o[e].inboundNodes[n].outputTensors;y.push(l[r])}const O=e.outputLayers;for(const t of O){const e=t[0],n=t[1],r=t[2];k(e in o);const l=o[e].inboundNodes[n].outputTensors;x.push(l[r])}return new t({inputs:y,outputs:x,name:f})}get stateful(){if(this._stateful)throw new w("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(f.Bd)(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function vn(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const output=[];return e.forEach(e=>{e in t?output.push(t[e]):output.push(null)}),output}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function wn(t,e){return vn(t,e,"classWeight")}async function On(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(f.Bd)(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());Object(f.pb)(e);const o=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);o.push(n[t])}),Object(f.xd)(o,"float32")}return null}function Sn(t,e){return Object(f.qc)(t,e)}function Cn(t,e){let n,r;const o=e;n=o.xs,r=o.ys,f.Jd.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const l=kn("input",t.inputNames,n),c=kn("output",t.outputNames,r),h=l[0].shape[0];f.Jd.assert(l.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${l.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")"),f.Jd.assert(c.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${c.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")");for(let e=0;e<l.length;e++)f.Jd.assert(l[e].shape[0]===h,()=>`Batch size mismatch: input ${t.inputNames[e]} has ${l[e].shape[0]}; expected  ${h} based on input ${t.inputNames[0]}.`);for(let e=0;e<c.length;e++)f.Jd.assert(c[e].shape[0]===h,()=>`Batch size mismatch: output ${t.outputNames[e]} has ${c[e].shape[0]}; expected  ${h} based on input ${t.inputNames[0]}.`);return{xs:l,ys:c}}function kn(t,e,n){if(n instanceof f.r)return[n];if(Array.isArray(n))return f.Jd.assert(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const o of e){if(null==n[o])throw new w(`The feature data generated by the dataset lacks the required ${t} key '${o}'.`);r.push(n[o])}return r}}async function Nn(t,e,n){const r=null!=n.batchesPerEpoch;if(f.Jd.assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),f.Jd.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),f.Jd.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),f.Jd.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),f.Jd.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const o=null!=n.validationData;let l,c;if(o)if(In(n.validationData))f.Jd.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const t=function(data){if(3===data.length)throw new O("Validation with sample weights is not implemented yet.");return{xs:data[0],ys:data[1]}}(n.validationData);l=t.xs,c=t.ys}const h=t.makeTrainFunction(),d=t.getDedupedMetricsNames();let m;m=o?d.slice().concat(d.map(t=>"val_"+t)):d.slice();const y=Re(n.callbacks,n.yieldEvery),x=null==n.verbose?1:n.verbose,{callbackList:v,history:w}=Fe(y,x,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,o,m);v.setModel(t),t.history=w,await v.onTrainBegin(),t.stopTraining_=!1;let S=null==n.initialEpoch?0:n.initialEpoch,C=await e.iterator();for(;S<n.epochs;){const m={};await v.onEpochBegin(S);let y=0,x=0;for(r||(C=await e.iterator());!r||y<n.batchesPerEpoch;){const e=await C.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+y+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:o}=Cn(t,e.value),l={};l.batch=x,l.size=r[0].shape[0],await v.onBatchBegin(x,l);const c=[];if(null!=n.classWeight){const e=wn(n.classWeight,t.outputNames);for(let i=0;i<e.length;++i)c.push(await On(o[i],null,e[i]))}const ins=r.concat(o).concat(c),m=h(ins);f.pb(ins);for(let i=0;i<d.length;++i){const label=d[i],t=m[i];l[label]=t,f.Qb(t)}await v.onBatchEnd(x,l),Ce(l),x++,y++}if(r?y>=n.batchesPerEpoch:e.done){if(o){let e;e=In(n.validationData)?E(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):E(t.evaluate(l,c,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let i=0;i<t.metricsNames.length;++i)m["val_"+t.metricsNames[i]]=e[i]}break}if(t.stopTraining_)break}if(await v.onEpochEnd(S,m),S++,t.stopTraining_)break}return await v.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function In(t){return"function"==typeof t.iterator}function En(t){f.Jd.assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got "+t)}function Tn(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>wt(t,e,n-e)):wt(t,e,n-e)}function An(t,e){return f.Bd(()=>null==t?null:Array.isArray(t)?t.map(t=>An(t,e)):Tt(t,"int32"===e.dtype?e:e.toInt()))}function Rn(t,e){const output=[];let n=0,r=null;for(;n<t;)r=n+e,r>=t&&(r=t),output.push([n,r]),n=r;return output}async function $n(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let o,l,c,h,d,m,y;t.isTraining=!0;try{const x=null==r.batchSize?32:r.batchSize;En(x);const v=!1,S=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,v,x);o=S[0],l=S[1],y=S[2];let C,k=!1;if(null!=r.validationData&&r.validationData.length>0){if(k=!0,2!==r.validationData.length)throw 3===r.validationData.length?new O("validationData including sample weights is not supported yet."):new w("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");c=r.validationData[0],h=r.validationData[1];const e=!0,n=await t.standardizeUserData(c,h,null,null,e,x);d=n[0],m=n[1],C=d.concat(m)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){k=!0;const t=Math.floor(o[0].shape[0]*(1-r.validationSplit)),e=o[0].shape[0];d=Tn(o,t,e),o=Tn(o,0,t),m=Tn(l,t,e),l=Tn(l,0,t),C=d.concat(m)}else null!=r.validationSteps&&(k=!0);const ins=o.concat(l).concat(y);t.checkTrainableWeightsConsistency();const N=t.makeTrainFunction(),I=t.getDedupedMetricsNames();let E,T;k?(t.makeTestFunction(),E=t.testFunction,T=I.slice().concat(I.map(t=>"val_"+t))):(E=null,C=[],T=I.slice());const A=Re(r.callbacks,r.yieldEvery);return await async function(t,e,ins,n,r,o,l,c,h,d,m,y,x,v,S){null==r&&(r=32),null==o&&(o=1),null==m&&(m=!0),null==x&&(x=0);let C=!1;if(null!=h&&null!=d&&(C=!0),null!=S&&(C=!0,null==v))throw new w("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const k=t.checkNumSamples(ins,r,v,"steps_per_epoch");let N;null!=k&&(N=yt(0,k)),null==l&&(l=1);const{callbackList:I,history:E}=Fe(c,l,o,x,k,v,r,C,y);I.setModel(t),t.history=E,await I.onTrainBegin(),t.stopTraining_=!1;for(let l=x;l<o;++l){await I.onEpochBegin(l);const o={};if(null!=v)throw new O("stepsPerEpoch mode is not implemented yet.");{if("batch"===m)throw new O("batch shuffling is not implemneted yet");m&&f.Jd.shuffle(N);const l=Object(f.xd)(N),c=Rn(k,r);for(let m=0;m<c.length;++m){const y={};if(await I.onBatchBegin(m,y),f.Bd(()=>{const x=c[m][0],v=c[m][1],w=wt(l,x,v-x);y.batch=m,y.size=v-x;const O=An(ins,w),S=e(O);for(let i=0;i<n.length;++i){const label=n[i],t=S[i];y[label]=t,f.Qb(t)}if(m===c.length-1&&C){const e=t.testLoop(h,d,r);for(let i=0;i<n.length;++i){const label=n[i],t=e[i];f.Qb(t),o["val_"+label]=t}}}),await I.onBatchEnd(m,y),Ce(y),t.stopTraining_)break}l.dispose()}if(await I.onEpochEnd(l,o),t.stopTraining_)break}return await I.onTrainEnd(),await t.history.syncData(),t.history}(t,N,ins,I,x,r.epochs,r.verbose,A,E,C,r.shuffle,T,r.initialEpoch,null,null)}finally{t.isTraining=!1,jn(o,e),jn(l,n),jn(d,c),jn(m,h),null!=y&&f.pb(y)}}function Fn(t){const e=[];t instanceof f.r&&(t=[t]);for(let i=0;i<t.length;++i){const n=t[i];if(1===n.rank)e.push(vt(n,1));else{if(0===n.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function jn(t,e){if(null==t)return;const n=[];if(e instanceof f.r)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof f.r)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const e in t){const o=t[e];-1===n.indexOf(o.id)&&r.push(o)}r.forEach(t=>{t.isDisposed||t.dispose()})}function Dn(t){return Array.isArray(t)}function _n(t){return!function(t){return t instanceof f.r}(t)&&!Dn(t)}function zn(data,t,e,n=!0,r=""){if(null==t||0===t.length){if(null!=data){let t=!1;if(Dn(data)&&data.length>0)t=!0;else if(_n(data)){for(const e in data)if(data.hasOwnProperty(e)){t=!0;break}}else t=!0;if(t)throw new w(`Error when checking model ${r} expected no data, but got `+data)}return[]}if(null==data)return t.map(t=>null);let o;if(_n(data)){data=data,o=[];for(const e of t){if(null==data[e])throw new w(`No data provided for "${e}". Need data for each key in: `+t);o.push(data[e])}}else if(Dn(data)){if((data=data).length!==t.length)throw new w(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): `+data);o=data}else{if(data=data,t.length>1)throw new w(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+data.shape);o=[data]}if(o=Fn(o),null!=e)for(let i=0;i<t.length;++i){if(null==e[i])continue;const l=o[i];if(l.shape.length!==e[i].length)throw new w(`Error when checking ${r}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape `+l.shape);for(let o=0;o<e[i].length;++o){if(0===o&&!n)continue;const c=l.shape[o],h=e[i][o];if(null!=h&&h>=0&&c!==h)throw new w(`Error when checking ${r}: expected ${t[i]} to have shape [${e[i]}], but got array with shape [${l.shape}].`)}}return o}function Mn(data,t,e,n=!0,r=""){let o;if(Array.isArray(data)){if(data.length!==t.length)throw new w(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${data.length} Tensors(s).`);o=data}else{if(t.length>1)throw new w(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(data.shape)+".");o=[data]}if(null!=e)for(let i=0;i<t.length;++i){if(null==e[i])continue;const l=o[i];if(l.shape.length!==e[i].length)throw new w(`Error when checking ${r}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape `+JSON.stringify(l.shape));for(let o=0;o<e[i].length;++o){if(0===o&&!n)continue;const c=l.shape[o],h=e[i][o];if(null!=h&&h!==c)throw new w(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(l.shape)}.`)}}}class Ln extends xn{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new w("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");an(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>f.Ed.adagrad(.01),Adadelta:()=>f.Ed.adadelta(1,.95,y()),Adam:()=>f.Ed.adam(.001,.9,.999,y()),Adamax:()=>f.Ed.adamax(.002,.9,.999,y(),0),RMSProp:()=>f.Ed.rmsprop(.001,.9,0,y()),SGD:()=>f.Ed.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new w("Unknown Optimizer "+t)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof f.n))throw new w("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new w(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>He(t))}else{const n=He(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new w(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(He(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const t=this.internalOutputShapes[i],e=this.outputNames[i];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ut("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==n.indexOf(i))continue;const t=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([t,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),o=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};ut("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==n.indexOf(i))continue;(t=>{let e,n,r;for(const l of t){if("string"==typeof l&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(l)){const t=this.internalOutputShapes[i];let o;1===t[t.length-1]||this.lossFunctions[i]===We?-1!==["accuracy","acc"].indexOf(l)?n=qe:-1!==["crossentropy","ce"].indexOf(l)&&(n=Ye):this.lossFunctions[i]===Pe?-1!==["accuracy","acc"].indexOf(l)?n=Qe:-1!==["crossentropy","ce"].indexOf(l)&&(n=tn):-1!==["accuracy","acc"].indexOf(l)?n=Ke:-1!==["crossentropy","ce"].indexOf(l)&&(n=Ze),-1!==["accuracy","acc"].indexOf(l)?o="acc":-1!==["crossentropy","ce"].indexOf(l)&&(o="ce"),r=n,e=""+o}else{const t=nn(l);r=t,e=""+rn(l)}let t;ut(e,()=>{t=r}),o(i,e,t)}})(r[i])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;En(r);const o=this.standardizeUserDataXY(t,e,!0,r);try{const ins=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction;return I(this.testLoop(l,ins,r,n.verbose,n.steps))}finally{jn(o[0],t),jn(o[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,o=t.testFunction;let l=[];if(n.verbose>0)throw new O("Verbose mode is not implemented yet.");f.Jd.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const c="function"==typeof e.next?e:await e.iterator();let h=0,d=0;for(;!r||d<n.batches;){const e=await c.next();if(l=f.Bd(()=>{if(e.value){const{xs:n,ys:r}=Cn(t,e.value),c=n.concat(r),m=f.Bd(()=>o(c));if(f.pb(c),0===d)for(let i=0;i<m.length;++i)l.push(Object(f.Pc)(0));const y=c[0].shape[0];for(let i=0;i<m.length;++i){const t=m[i],e=l[i];l[i]=f.Bd(()=>f.x(l[i],f.qc(y,t))),d>0&&f.pb(e)}f.pb(m),h+=y,++d}return l}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let i=0;i<l.length;++i){const t=l[i];l[i]=f.qb(l[i],h),f.pb(t)}return I(l)}(this,t,e)}checkNumSamples(ins,t,e,n="steps"){let r;if(null!=e){if(r=null,null!=t)throw new w(`If ${n} is set, batchSize must be null or undefined.Got batchSize = `+t)}else{if(null==ins)throw new w("Either the input data should have a defined shape, or "+n+" shoud be specified.");r=Array.isArray(ins)?ins[0].shape[0]:ins.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new w("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],o=this.retrieveSymbolicTensors(r),l=new dn;if(t instanceof f.r&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new w(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)l.add(this.inputs[i],t[i])}else for(const input of this.inputs){const e=t[input.name];if(null==e)throw new w("No value is provided for the model's input "+input.name);l.add(input,e)}const c=mn(o,l);return n?c:c[0]}retrieveSymbolicTensors(t){const e=C(null,t.length);let n=t.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],l=o.map(output=>output.name);for(let i=0;i<t.length;++i){const r=l.indexOf(t[i]);if(-1!==r&&(e[i]=o[r],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,i)=>{null==e&&n.push(t[i])}),new w("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(ins,t=32,e=!1){return f.Bd(()=>{const n=this.checkNumSamples(ins);if(e)throw new O("Verbose predictLoop() is not implemented yet.");const r=Rn(n,t),o=this.outputs.map(output=>[]);for(let t=0;t<r.length;++t){f.Bd(()=>{const e=r[t][0],n=r[t][1],o=Tn(ins,e,n),l=[];if(Array.isArray(o))for(let i=0;i<o.length;++i)l.push({key:this.inputs[i],value:o[i]});else l.push({key:this.inputs[0],value:o});const c=new dn(l);return mn(this.outputs,c)}).forEach((t,i)=>o[i].push(t))}return I(o.map(t=>f.Z(t,0)))})}predict(t,e={}){const n=Fn(t);Mn(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return En(r),this.predictLoop(n,r)}finally{jn(n,t)}}predictOnBatch(t){Mn(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new v("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const t=this.feedOutputShapes[i];this.feedLossFns[i]===Pe?o.push(t.slice(0,t.length-1).concat([1])):o.push(t)}if(function(t,e,n){const r=D(t.map(input=>input.shape[0]));r.sort();const o=D(e.map(t=>t.shape[0]));if(o.sort(),r.length>1)throw new w("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(input=>input.shape)));if(o.length>1)throw new w("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(t=>t.shape)));if(r.length>0&&o.length>0&&!f.Jd.arraysEqual(r,o))throw new w(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${o[0]} target sample(s).`)}(t=zn(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=zn(e,this.feedOutputNames,o,!1,"target")),function(t,e,n){const r=[_e,We,Be];for(let i=0;i<t.length;++i){const o=t[i],l=e[i],c=n[i];if(null!=l){if(l===Be&&1===o.shape[o.shape.length-1])throw new w(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(l)){const t=o.shape.slice(1),e=c.slice(1);for(let n=0;n<t.length;++n){const r=t[n],l=e[n];if(null!=l&&r!==l)throw new w(`A target Tensor with shape ${o.shape} was passed for an output of shape ${c}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new w(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,o=!0,l){const[c,h]=this.standardizeUserDataXY(t,e,o,l);if(null!=n)throw new Error("sample weight is not supported yet.");let d=null;if(null!=r){const t=wn(r,this.outputNames);d=[];for(let i=0;i<t.length;++i)d.push(await On(h[i],null,t[i]))}return[c,h,d]}testLoop(t,ins,e,n=0,r){return f.Bd(()=>{const o=this.checkNumSamples(ins,e,r,"steps"),l=[];if(n>0)throw new O("Verbose mode is not implemented yet.");if(null!=r)throw new O("steps mode in testLoop() is not implemented yet");{const n=Rn(o,e),r=Object(f.xd)(yt(0,o));for(let e=0;e<n.length;++e){const o=n[e][0],c=n[e][1],h=wt(r,o,c-o),d=An(ins,h),m=t(d);if(0===e)for(let i=0;i<m.length;++i)l.push(Object(f.Pc)(0));for(let i=0;i<m.length;++i){const t=m[i];l[i]=f.x(l[i],f.qc(c-o,t))}}for(let i=0;i<l.length;++i)l[i]=f.qb(l[i],o)}return l})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let i=0;i<t.length;++i){const label=t[i];let n=label;if(N(t,label)>1){n+="_"+N(t.slice(0,i),label)}e.push(n)}return e}makeTrainFunction(){return data=>{const t=[],e=data.slice(0,this.inputs.length),n=data.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=data.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],l=this.collectedTrainableWeights.map(param=>param.read());return[this.optimizer_.minimize(()=>{const l=[];for(let i=0;i<this.inputs.length;++i)l.push({key:this.inputs[i],value:e[i]});const c=new dn(l),h=mn(this.outputs,c,{training:!0});let d;for(let i=0;i<this.lossFunctions.length;++i){let e=(0,this.lossFunctions[i])(n[i],h[i]);null!=r[i]&&(e=Sn(e,r[i]));const o=f.kc(e);t.push(o),d=0===i?e:f.x(d,e)}for(let i=0;i<this.metricsTensors.length;++i){let e;if(this.outputs.length>1&&i<this.outputs.length)e=t[i];else{const t=this.metricsTensors[i][0],r=this.metricsTensors[i][1];e=f.kc(t(n[r],h[r]))}f.Qb(e),o.push(e)}return d=f.kc(d),this.calculateLosses().forEach(t=>{d=f.x(d,t)}),d},!0,l)].concat(o)}}makeTestFunction(){this.testFunction=data=>f.Bd(()=>{const t=[];let e;const n=data.slice(0,this.inputs.length),r=data.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let i=0;i<this.inputs.length;++i)o.push({key:this.inputs[i],value:n[i]});const l=new dn(o),c=mn(this.outputs,l);for(let i=0;i<this.lossFunctions.length;++i){const n=this.lossFunctions[i],o=f.kc(n(r[i],c[i]));e=0===i?o:f.x(e,o),t.push(e)}for(let i=0;i<this.metricsTensors.length;++i){const e=this.metricsTensors[i][0],n=this.metricsTensors[i][1],o=f.kc(e(r[n],c[n]));t.push(o)}return t})}async fit(t,e,n={}){return $n(this,t,e,n)}async fitDataset(t,e){return Nn(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],o=n[1],l=this.makeTrainFunction()(r.concat(o)),c=[];for(const t of l){const e=await t.data();c.push(e[0])}return f.pb(l),I(c)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,o=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||e.push({name:r[i].originalName,tensor:o[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=f.lc().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-f.lc().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=T(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>T(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=T(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[T(rn(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>T(rn(t)));{const t={};for(const e in this.metrics)t[e]=T(rn(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=je(hn(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=A(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>A(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=A(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>A(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=A(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=f.Ob.getSaveHandlers(t);if(0===e.length)throw new w(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new w(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new w("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await f.Ob.encodeWeights(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.3.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:o}=await f.Ob.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...o),n.data=f.Ob.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;sn(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){sn(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ln.className="Model",f.Tc.registerClass(Ln);class Bn extends Ln{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:ie("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new w("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof Bn||t instanceof Ln;let n;if(e){if(n=t,1!==n.outputs.length)throw new w("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new w("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new w("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=Oe({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new w(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new w("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&r>0)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];{const e=n.inboundNodes[r];if(0===e.inboundLayers.length)return e.inputTensors;{const n=[];for(let i=0;i<e.inboundLayers.length;i++){const r=t(e.inputTensors[i],e.inboundLayers[i],e.nodeIndices[i]);for(const t of r)-1===n.indexOf(t)&&n.push(t)}return n}}}(this.outputs[0])}this.inboundNodes=[],new ye({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:C(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(ce(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ln({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new v("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new v("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new v("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new v("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let o,l={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new w("Legacy serialization format not supported yet.");o=e}else f.Jd.assert(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=e.layers,delete e.layers,l=e;const c=new t(l);if(!(c instanceof Bn))throw new O("Sequential.fromConfig called on non-Sequential input: "+c);for(const t of o){const e=je(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),c.add(e)}return c}set stopTraining(t){if(null==this.model)throw new w("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new w("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Bn.className="Sequential",f.Tc.registerClass(Bn);class Pn extends f.Tc.Serializable{getConfig(){return{}}}class Wn extends Pn{apply(t,e=1){return function(t,e=1){if(1!==e)throw new O(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return f.tb(t)}(t,e)}}Wn.className="elu",f.Tc.registerClass(Wn);class Un extends Pn{apply(t){return f.Rc(t)}}Un.className="selu",f.Tc.registerClass(Un);class Vn extends Pn{apply(t){return f.Jc(t)}}Vn.className="relu",f.Tc.registerClass(Vn);class Gn extends Pn{apply(t){return Object(f.Bd)(()=>f.nc(6,f.Jc(t)))}}Gn.className="relu6",f.Tc.registerClass(Gn);class Hn extends Pn{apply(t){return t}}Hn.className="linear",f.Tc.registerClass(Hn);class qn extends Pn{apply(t){return f.Wc(t)}}qn.className="sigmoid",f.Tc.registerClass(qn);class Kn extends Pn{apply(t){return function(t){return Object(f.Bd)(()=>{const e=f.x(.5,f.qc(.2,t));return f.W(e,0,1)})}(t)}}Kn.className="hardSigmoid",f.Tc.registerClass(Kn);class Jn extends Pn{apply(t){return f.hd(t)}}Jn.className="softplus",f.Tc.registerClass(Jn);class Xn extends Pn{apply(t){return function(t){return Object(f.Bd)(()=>f.qb(t,f.u(t).add(1)))}(t)}}Xn.className="softsign",f.Tc.registerClass(Xn);class Yn extends Pn{apply(t){return f.vd(t)}}Yn.className="tanh",f.Tc.registerClass(Yn);class Qn extends Pn{apply(t,e=-1){return f.gd(t,e)}}Qn.className="softmax",f.Tc.registerClass(Qn);class Zn extends Pn{apply(t,e=-1){return f.ac(t,e)}}function er(t){return t.getClassName()}function nr(t,e={}){return F(t,f.Tc.SerializationMap.getMap().classNameMap,e,"activation")}function rr(t){if(null==t){const t={className:"linear",config:{}};return nr(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},nr(e)}return t instanceof Pn?t:nr(t)}function sr(t){if(null!=t&&"object"!=typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}Zn.className="logSoftmax",f.Tc.registerClass(Zn);class ar extends f.Tc.Serializable{}class ir extends ar{constructor(t){super(),sr(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(f.Bd)(()=>{let e=Object(f.Pd)([1]);return this.hasL1&&(e=Object(f.x)(e,Object(f.sd)(f.qc(this.l1,Object(f.u)(t))))),this.hasL2&&(e=Object(f.x)(e,Object(f.sd)(f.qc(this.l2,At(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}ir.className="L1L2",f.Tc.registerClass(ir);const or={l1l2:"L1L2"};function ur(t){return $(t)}function lr(t,e={}){return F(t,f.Tc.SerializationMap.getMap().classNameMap,e,"regularizer")}function cr(t){if(null==t)return null;if("string"==typeof t){return lr({className:t in or?or[t]:t,config:{}})}return t instanceof ar?t:lr(t)}class dr extends ve{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=le(t);let output=Object(f.Jc)(t);return null!=this.maxValue&&(output=Object(f.W)(output,0,this.maxValue)),output}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}dr.className="ReLU",f.Tc.registerClass(dr);class pr extends ve{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=le(t);return Object(f.Sb)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}pr.className="LeakyReLU",f.Tc.registerClass(pr);class fr extends ve{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=ne(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=cr(t.alphaRegularizer),this.alphaConstraint=Y(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new w("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=ce(t)).slice(1);if(null!=this.sharedAxes)for(const i of this.sharedAxes)e[i-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let i=1;i<t.length;++i)n[i]=t[i];this.inputSpec=[new me({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=le(t),Object(f.Ac)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ee(this.alphaInitializer),alphaRegularizer:ur(this.alphaRegularizer),alphaConstraint:J(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}fr.className="PReLU",f.Tc.registerClass(fr);class mr extends ve{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new O(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=le(t);return Object(f.tb)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}mr.className="ELU",f.Tc.registerClass(mr);class gr extends ve{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=le(t);return n.mul(xt(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}gr.className="ThresholdedReLU",f.Tc.registerClass(gr);class yr extends ve{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Qn).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=le(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function xr(t,e,n){if("number"==typeof t)return C(t,e);if(t.length!==e)throw new w(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let i=0;i<e;++i){const o=t[i];if((r=o)!==parseInt(r.toString(),10))throw new w(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+o)}return t;var r}function vr(t,e,n,r,o=1){if(null==t)return t;let l;return l="same"===n?t:t-(e+(e-1)*(o-1))+1,Math.floor((l+r-1)/r)}function wr(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+bt([n-e,0]);else{if("same"!==r)throw new w(`Unsupport padding mode: ${r}.`);t*=e}return t}function Or(t,e){return Object(f.Bd)(()=>(st(e),"channelsFirst"===e?f.Fd(t,[0,2,3,1]):t))}function Sr(t,e){return Object(f.Bd)(()=>(st(e),"channelsFirst"===e?f.Fd(t,[0,2,3,4,1]):t))}function Cr(t,e,n,r=1,o="valid",l,c=1){return Object(f.Bd)(()=>{if(null==l&&(l="channelsLast"),st(l),3!==t.shape.length)throw new w("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new w("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new w("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===l&&(t=f.Fd(t,[0,2,1])),"causal"===o)throw new O("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let h=f.eb(t,e,r,"same"===o?"same":"valid","NWC",c);return null!=n&&(h=$t(h,n)),h})}function kr(t,e,n,r=[1,1],o="valid",l,c,h=null){return Object(f.Bd)(()=>{if(null==l&&(l="channelsLast"),st(l),3!==t.rank&&4!==t.rank)throw new w(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new w(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let d=Or(t,l);if("causal"===o)throw new O("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return d=f.Gb.conv2d({x:d,filter:e,strides:r,pad:"same"===o?"same":"valid",dilations:c,dataFormat:"NHWC",bias:n,activation:h}),"channelsFirst"===l&&(d=f.Fd(d,[0,3,1,2])),d})}function Nr(t,e,n,r=[1,1,1],o="valid",l,c){return Object(f.Bd)(()=>{if(null==l&&(l="channelsLast"),st(l),4!==t.rank&&5!==t.rank)throw new w("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new w("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let h=Sr(t,l);if("causal"===o)throw new O("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return h=f.hb(h,e,r,"same"===o?"same":"valid","NDHWC",c),null!=n&&(h=$t(h,n)),"channelsFirst"===l&&(h=f.Fd(h,[0,4,1,2,3])),h})}yr.className="Softmax",f.Tc.registerClass(yr);class Ir extends ve{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ir.verifyArgs(e),this.rank=t,L(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new O(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=xr(e.kernelSize,t,"kernelSize"),this.strides=xr(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,at(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,st(this.dataFormat),this.activation=rr(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=ne(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Y(e.biasConstraint),this.biasRegularizer=cr(e.biasRegularizer),this.activityRegularizer=cr(e.activityRegularizer),this.dilationRate=xr(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new w("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new w("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new w("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(k("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!M(t.kernelSize,"number",1,3))throw new w(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:er(this.activation),useBias:this.useBias,biasInitializer:ee(this.biasInitializer),biasRegularizer:ur(this.biasRegularizer),activityRegularizer:ur(this.activityRegularizer),biasConstraint:J(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Er extends Ir{constructor(t,e){super(t,e),this.kernel=null,Er.verifyArgs(e),this.filters=e.filters,L(this.filters,"filters"),this.kernelInitializer=ne(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Y(e.kernelConstraint),this.kernelRegularizer=cr(e.kernelRegularizer)}build(t){t=ce(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new w("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(f.Bd)(()=>{let e;t=le(t);const n=null==this.bias?null:this.bias.read(),r=B(this.activation.getClassName());if(null!=r&&2===this.rank)e=kr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=Cr(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=kr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new O("convolutions greater than 3D are not implemented yet.");e=Nr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=ce(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let i=0;i<n.length;++i){const t=vr(n[i],this.kernelSize[i],this.padding,this.strides[i],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[i]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:ee(this.kernelInitializer),kernelRegularizer:ur(this.kernelRegularizer),kernelConstraint:J(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new w("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class Tr extends Er{constructor(t){super(2,t),Tr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!M(t.kernelSize,"number",1,2))throw new w(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Tr.className="Conv2D",f.Tc.registerClass(Tr);class Ar extends Er{constructor(t){super(3,t),Ar.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new w(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Ar.className="Conv3D",f.Tc.registerClass(Ar);class Rr extends Tr{constructor(t){if(super(t),this.inputSpec=[new me({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new w("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=ce(t)).length)throw new w("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new w("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new me({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return f.Bd(()=>{let input=le(t);if(4!==input.shape.length)throw new w("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+input.shape.length);const e=input.shape,n=e[0];let r,o;"channelsFirst"===this.dataFormat?(r=2,o=3):(r=1,o=2);const l=e[r],c=e[o],h=this.kernelSize[0],d=this.kernelSize[1],m=this.strides[0],y=this.strides[1],x=[n,wr(l,m,h,this.padding),wr(c,y,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(input=f.Fd(input,[0,2,3,1]));let v=f.gb(input,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=f.Fd(v,[0,3,1,2])),null!=this.bias&&(v=$t(v,this.bias.read(),this.dataFormat)),null!=this.activation&&(v=this.activation.apply(v)),v})}computeOutputShape(t){const e=(t=ce(t)).slice();let n,r,o;"channelsFirst"===this.dataFormat?(n=1,r=2,o=3):(n=3,r=1,o=2);const l=this.kernelSize[0],c=this.kernelSize[1],h=this.strides[0],d=this.strides[1];return e[n]=this.filters,e[r]=wr(e[r],h,l,this.padding),e[o]=wr(e[o],d,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Rr.className="Conv2DTranspose",f.Tc.registerClass(Rr);class $r extends Er{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new w("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new w("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new w(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ne(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=cr(e.depthwiseRegularizer),this.depthwiseConstraint=Y(e.depthwiseConstraint),this.pointwiseInitializer=ne(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=cr(e.pointwiseRegularizer),this.pointwiseConstraint=Y(e.pointwiseConstraint)}build(t){if((t=ce(t)).length<this.rank+2)throw new w(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new w("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new me({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(f.Bd)(()=>{let output;if(t=le(t),1===this.rank)throw new O("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=f.Fd(t,[0,2,3,1])),output=f.Sc(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(output=$t(output,this.bias.read(),this.dataFormat)),null!=this.activation&&(output=this.activation.apply(output)),"channelsFirst"===this.dataFormat&&(output=f.Fd(output,[0,3,1,2])),output})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ee(this.depthwiseInitializer),t.pointwiseInitializer=ee(this.pointwiseInitializer),t.depthwiseRegularizer=ur(this.depthwiseRegularizer),t.pointwiseRegularizer=ur(this.pointwiseRegularizer),t.depthwiseConstraint=J(this.depthwiseConstraint),t.pointwiseConstraint=J(this.pointwiseConstraint),t}}$r.className="SeparableConv";class Fr extends $r{constructor(t){super(2,t)}}Fr.className="SeparableConv2D",f.Tc.registerClass(Fr);class jr extends Er{constructor(t){super(1,t),jr.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!M(t.kernelSize,"number",1,1))throw new w(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}jr.className="Conv1D",f.Tc.registerClass(jr);class Dr extends ve{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(f.Bd)(()=>{if(t=le(t),"channelsLast"===this.dataFormat){const e=St(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return St(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=St(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return St(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Dr.className="Cropping2D",f.Tc.registerClass(Dr);class _r extends ve{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return f.Bd(()=>{let input=le(t);const e=input.shape;if("channelsFirst"===this.dataFormat){input=f.Fd(input,[0,2,3,1]);const t=this.size[0]*e[2],n=this.size[1]*e[3],r=input.resizeNearestNeighbor([t,n]);return f.Fd(r,[0,3,1,2])}{const t=this.size[0]*e[1],n=this.size[1]*e[2];return input.resizeNearestNeighbor([t,n])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}_r.className="UpSampling2D",f.Tc.registerClass(_r);class zr extends Ir{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ne(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Y(t.depthwiseConstraint),this.depthwiseRegularizer=cr(t.depthwiseRegularizer)}build(t){if((t=ce(t)).length<4)throw new w(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new w(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(f.Bd)(()=>{let e=function(t,e,n=[1,1],r="valid",o,l){return Object(f.Bd)(()=>{null==o&&(o="channelsLast"),st(o);let c=Or(t,o);if(4!==t.rank)throw new w("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new w("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return c=f.mb(c,e,n,"same"===r?"same":"valid","NHWC",l),"channelsFirst"===o&&(c=f.Fd(c,[0,3,1,2])),c})}(t=le(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=$t(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=ce(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,o=vr(e,this.kernelSize[0],this.padding,this.strides[0]),l=vr(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,o,l]:[t[0],o,l,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ee(this.depthwiseInitializer),t.depthwiseRegularizer=ur(this.depthwiseRegularizer),t.depthwiseConstraint=J(this.depthwiseRegularizer),t}}zr.className="DepthwiseConv2D",f.Tc.registerClass(zr);class Mr extends ve{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(input){if(null==this.noiseShape)return this.noiseShape;const t=input.shape,e=[];for(let i=0;i<this.noiseShape.length;++i)e.push(null==this.noiseShape[i]?t[i]:this.noiseShape[i]);return e}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e);const input=le(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,n=this.getNoiseShape(input);return jt(()=>Ft(input,this.rate,n,this.seed),()=>input,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Mr.className="Dropout",f.Tc.registerClass(Mr);class Lr extends Mr{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(input){const t=input.shape;return[t[0],1,t[2]]}}Lr.className="SpatialDropout1D",f.Tc.registerClass(Lr);class Br extends ve{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,L(this.units,"units"),this.activation=rr(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=ne(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ne(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Y(t.kernelConstraint),this.biasConstraint=Y(t.biasConstraint),this.kernelRegularizer=cr(t.kernelRegularizer),this.biasRegularizer=cr(t.biasRegularizer),this.activityRegularizer=cr(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=ce(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=ce(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e);const input=le(t),n=B(this.activation.getClassName());let output;return null!=n?output=Et(input,this.kernel.read(),n,this.bias?this.bias.read():null):(output=Et(input,this.kernel.read()),null!=this.bias&&(output=$t(output,this.bias.read())),null!=this.activation&&(output=this.activation.apply(output))),output})}getConfig(){const t={units:this.units,activation:er(this.activation),useBias:this.useBias,kernelInitializer:ee(this.kernelInitializer),biasInitializer:ee(this.biasInitializer),kernelRegularizer:ur(this.kernelRegularizer),biasRegularizer:ur(this.biasRegularizer),activityRegularizer:ur(this.activityRegularizer),kernelConstraint:J(this.kernelConstraint),biasConstraint:J(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Br.className="Dense",f.Tc.registerClass(Br);class Pr extends ve{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=ce(t);for(const e of t.slice(1))if(null==e)throw new w(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],ft(t,1)]}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e);let input=le(t);if("channelsFirst"===this.dataFormat&&input.rank>1){const t=[0];for(let i=2;i<input.rank;++i)t.push(i);t.push(1),input=input.transpose(t)}return function(t){if(t.rank<=1)throw new w(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],ft(t.shape,1)];return t.reshape(e)}(input)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Pr.className="Flatten",f.Tc.registerClass(Pr);class Wr extends ve{constructor(t){super(t),this.supportsMasking=!0,this.activation=rr(t.activation)}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e);const input=le(t);return this.activation.apply(input)})}getConfig(){const t={activation:er(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Wr.className="Activation",f.Tc.registerClass(Wr);class Ur extends ve{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(f.Bd)(()=>{return t=le(t),e=t,n=this.n,Object(f.Bd)(()=>{if(2!==e.shape.length)throw new w(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Nt(vt(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Ur.className="RepeatVector",f.Tc.registerClass(Ur);class Vr extends ve{constructor(t){super(t),this.targetShape=t.targetShape;for(let i=0;i<this.targetShape.length;++i)this.isUnknown(this.targetShape[i])&&(this.targetShape[i]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let o=1,l=null;for(let i=0;i<r.length;++i){const t=r[i];if(this.isUnknown(t)){if(null!==l)throw new w("Can only specifiy one unknown dimension.");l=i}else o*=t}const c=ft(t);if(null!==l){if(0===o||c%o!=0)throw new w(n);r[l]=c/o}else if(c!==o)throw new w(n);return r}computeOutputShape(t){let e=!1;for(let i=0;i<t.length;++i)if(this.isUnknown(t[i])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e);const input=le(t),n=input.shape,r=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return input.reshape(r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Vr.className="Reshape",f.Tc.registerClass(Vr);class Gr extends ve{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=yt(1,t.dims.length+1);if(!f.Jd.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new me({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=ce(t)).slice();return this.dims.forEach((n,i)=>{e[i+1]=t[n]}),e}call(t,e){return Object(f.Fd)(le(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Gr.className="Permute",f.Tc.registerClass(Gr);class Hr extends ve{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,mask){const input=le(t);return Object(f.A)(Object(f.uc)(input,this.maskValue),-1)}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e);const input=le(t),n=Object(f.A)(Object(f.uc)(input,this.maskValue),-1,!0);return input.mul(n.asType(input.dtype))})}}Hr.className="Masking",f.Tc.registerClass(Hr);class qr extends ve{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(E(t.inputLength))}this.inputDim=t.inputDim,L(this.inputDim,"inputDim"),this.outputDim=t.outputDim,L(this.outputDim,"outputDim"),this.embeddingsInitializer=ne(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=cr(t.embeddingsRegularizer),this.activityRegularizer=cr(t.activityRegularizer),this.embeddingsConstraint=Y(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,mask){return Object(f.Bd)(()=>this.maskZero?(t=le(t),Object(f.uc)(t,Object(f.Qd)(t))):null)}computeOutputShape(t){if(t=ce(t),null==this.inputLength)return[...t,this.outputDim];const e=E(this.inputLength);if(e.length!==t.length-1)throw new w(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let i=0;for(let n=0;n<e.length;++n){const r=e[n],o=t[n+1];if(null!=r&&null!=o&&r!==o)throw new w(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==r&&(e[i]=o),i++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e);let input=le(t);"int32"!==input.dtype&&(input=xt(input,"int32"));return Tt(this.embeddings.read(),input.as1D()).reshape(ce(this.computeOutputShape(input.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ee(this.embeddingsInitializer),embeddingsRegularizer:ur(this.embeddingsRegularizer),activityRegularizer:ur(this.activityRegularizer),embeddingsConstraint:J(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}qr.className="Embedding",f.Tc.registerClass(qr);class Kr extends ve{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new O}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const i=t[t.length-e.length+r],o=e[r];if(null==i||null==o||i<0||o<0)n.push(null);else if(1===i)n.push(o);else if(1===o)n.push(i);else{if(i!==o)throw new w("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(i)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[ce(t)]),(t=t).length<2)throw new w(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=D(e),e.length>1)throw new w(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let i=1;i<t.length;++i){const e=null==t[i]?null:t[i].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===D(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(f.Bd)(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(input=>input.rank);if(-1===n.indexOf(null)){const r=bt(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=vt(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,o=t[0],l=t.slice(1).concat([o]);let c=r.reshape([o].concat(ft(t.slice(1))));c=f.Fd(c,[1,0]),c=c.reshape(l),e.push(c),n=!0}else if(t>1){const o=yt(1,t).concat([0]);e.push(f.Fd(r,o)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const o=r.rank;if(n)if(null==o){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=f.Fd(r.reshape([-1,e]),[1,0]).reshape(n)}else if(o>1){const t=[o-1].concat(yt(0,o-1));r=f.Fd(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let i=1;i<t.length;++i){const n=null==t[i]?null:t[i].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=D(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,mask){return f.Bd(()=>{if(null==mask)return null;if(!Array.isArray(mask))throw new w("`mask` should be an Array");if(!Array.isArray(t))throw new w("`inputs` should be an Array");if(mask.length!==t.length)throw new w(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${mask.length})`);if(mask.every(t=>null==t))return null;let output=(mask=mask.map(t=>null==t?t:f.zb(t,0)))[0];for(let i=1;i<mask.length-1;++i)output=f.bc(output,mask[i]);return output})}}class Jr extends Kr{constructor(t){super(t)}mergeFunction(t){return Object(f.Bd)(()=>{let output=t[0].clone();for(let i=1;i<t.length;++i)output=f.x(output,t[i]);return output})}}Jr.className="Add",f.Tc.registerClass(Jr);class Xr extends Kr{constructor(t){super(t)}mergeFunction(t){return Object(f.Bd)(()=>{let output=t[0].clone();for(let i=1;i<t.length;++i)output=f.qc(output,t[i]);return output})}}Xr.className="Multiply",f.Tc.registerClass(Xr);class Yr extends Kr{constructor(t){super(t)}mergeFunction(t){return Object(f.Bd)(()=>{let output=t[0].clone();for(let i=1;i<t.length;++i)output=f.x(output,t[i]);return f.qc(1/t.length,output)})}}Yr.className="Average",f.Tc.registerClass(Yr);class Qr extends Kr{constructor(t){super(t)}mergeFunction(t){return Object(f.Bd)(()=>{let output=t[0];for(let i=1;i<t.length;++i)output=f.jc(output,t[i]);return output})}}Qr.className="Maximum",f.Tc.registerClass(Qr);class Zr extends Kr{constructor(t){super(t)}mergeFunction(t){return Object(f.Bd)(()=>{let output=t[0];for(let i=1;i<t.length;++i)output=f.nc(output,t[i]);return output})}}Zr.className="Minimum",f.Tc.registerClass(Zr);class ts extends Kr{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new w("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let i=0;i<t.length;++i){const e=t[i].slice();e.splice(this.axis,1);let r=!1;for(const t of n)if(f.Jd.arraysEqual(t,e)){r=!0;break}r||n.push(e)}if(n.length>1)throw new w("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(f.Bd)(()=>Ct(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new w("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,mask){if(null==mask)return null;if(!Array.isArray(mask))throw new w("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new w("`inputs` should be an array for Concatenate");if(mask.length!==t.length)throw new w(`Mismatch in the length of mask (${mask.length}) and the legnth of inputs (${t.length})`);return f.Bd(()=>{let e=!0;if(mask.forEach(t=>{null==t||(e=!1)}),e)return null;const n=[];for(let i=0;i<t.length;++i)null==mask[i]?n.push(f.xc(t[i]).asType("bool")):mask[i].rank<t[i].rank?n.push(f.zb(mask[i],-1)):n.push(mask[i]);const r=f.Z(n,this.axis);return f.z(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function es(t,e){for(;t<0;)t+=e;return t}ts.className="Concatenate",f.Tc.registerClass(ts);class ns extends Kr{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){f.Jd.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new O("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new w(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new w(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,i)=>es(e,t[i].shape.length)):[es(this.axes,n.shape.length),es(this.axes,r.shape.length)],this.normalize&&(n=De(n,e[0]),r=De(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new O("batchDot is not implemented for tensors of 4D or higher rank yet");if(f.Jd.assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),f.Jd.assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new O("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,o=e.shape.length;null==n&&(n=[r-1,o-2]);const l=n;return f.Bd(()=>{let n,c;if(r>o){n=r-o;const t=[];for(let i=0;i<n;++i)t.push(1);e=e.reshape(e.shape.concat(t))}else if(o>r){n=o-r;const e=[];for(let i=0;i<n;++i)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)c=l[0]===l[1]?t.mul(e).sum(l[0]):t.transpose([1,0]).mul(e).sum(l[1]);else{const n=l[0]!==t.shape.length-1,r=l[1]===e.shape.length-1;c=t.matMul(e,n,r)}if(n>0){let t;t=r>o?r+o-3:r-1;const e=[];for(let i=t;i<t+n;++i)e.push(i);c=c.squeeze(e)}return 1===c.shape.length&&(c=c.expandDims(1)),c})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[es(this.axes,t.length),es(this.axes,e.length)],n}computeOutputShape(t){f.Jd.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new O("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const o=e.concat(n);return 1===o.length&&o.push(1),o}computeMask(t,mask){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}ns.className="Dot",f.Tc.registerClass(ns);class rs extends ve{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e);const input=le(t);return jt(()=>It(input.shape,0,this.stddev).add(input),()=>input,e.training||!1)})}}rs.className="GaussianNoise",f.Tc.registerClass(rs);class ss extends ve{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e);const input=le(t);if(this.rate>0&&this.rate<1){return jt(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return input.mul(It(input.shape,1,t))},()=>input,e.training||!1)}return input})}}ss.className="GaussianDropout",f.Tc.registerClass(ss);class as extends ve{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||le(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(f.Bd)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return jt(()=>{const input=le(t),e=-1.7580993408473766;let r=Object(f.Kb)(Object(f.Dc)(n),this.rate);r=xt(r,"float32");const a=((1-this.rate)*(1+this.rate*e**2))**-.5,b=-a*e*this.rate;return input.mul(r).add(r.add(-1).mul(e)).mul(a).add(b)},()=>le(t),e.training||!1)}return t})}}function is(t,e,n,r,o,l=.001){let c;if(2===t.rank)c=f.N(t,e,n,r,o,l);else if(3===t.rank)c=f.O(t,e,n,r,o,l);else{if(4!==t.rank)throw new O(`batchNormalization is not implemented for array of rank ${t.rank} yet`);c=f.P(t,e,n,r,o,l)}return c}function os(t,e,n,r,o=.001){return f.Jd.arraysEqual(r.slice().sort(),yt(0,t.rank-1))?function(t,e,n,r,o=.001){return Object(f.Bd)(()=>{const l=f.pc(t,r),c=l.mean,h=l.variance;return[is(t,c,h,n,e,o),c,h]})}(t,e,n,r,o):function(t,e,n,r,o=.001){return Object(f.Bd)(()=>{const l=f.pc(t,r),c=l.mean,h=l.variance,d=[];for(const e of yt(0,t.rank))-1!==r.indexOf(e)?d.push(1):d.push(t.shape[e]);const m=c.reshape(d),y=h.reshape(d),x=null==e?null:e.reshape(d),v=null==n?null:n.reshape(d);return[is(t,m,y,v,x,o),c,h]})}(t,e,n,r,o)}as.className="AlphaDropout",f.Tc.registerClass(as);class us extends ve{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ne(t.betaInitializer||"zeros"),this.gammaInitializer=ne(t.gammaInitializer||"ones"),this.movingMeanInitializer=ne(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ne(t.movingVarianceInitializer||"ones"),this.betaConstraint=Y(t.betaConstraint),this.gammaConstraint=Y(t.gammaConstraint),this.betaRegularizer=cr(t.betaRegularizer),this.gammaRegularizer=cr(t.gammaRegularizer)}build(t){t=ce(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new w(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new me({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(f.Bd)(()=>{const n=null!=e.training&&e.training,input=le(t),r=input.shape,o=r.length,l=yt(0,o),c=this.axis>=0?this.axis:this.axis+o;l.splice(c,1);const h=C(1,o);h[c]=r[c];const d=l.slice();d.sort();const m=!f.Jd.arraysEqual(d,yt(0,o).slice(0,o-1));if(!n)return(()=>{if(m){const t=this.movingMean.read().reshape(h),e=this.movingVariance.read().reshape(h),n=this.center?this.beta.read().reshape(h):null,r=this.scale?this.gamma.read().reshape(h):null;return is(input,t,e,n,r,this.epsilon)}return is(input,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[y,x,v]=os(input,this.gamma.read(),this.beta.read(),l,this.epsilon),w=(t,e,n)=>{f.Bd(()=>{const r=1-n,o=t.read(),l=o.sub(e).mul(r);t.write(o.sub(l))})};return(()=>{w(this.movingMean,x,this.momentum),w(this.movingVariance,v,this.momentum)})(),y})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ee(this.betaInitializer),gammaInitializer:ee(this.gammaInitializer),movingMeanInitializer:ee(this.movingMeanInitializer),movingVarianceInitializer:ee(this.movingVarianceInitializer),betaRegularizer:ur(this.betaRegularizer),gammaRegularizer:ur(this.gammaRegularizer),betaConstraint:J(this.betaConstraint),gammaConstraint:J(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}us.className="BatchNormalization",f.Tc.registerClass(us);class ls extends ve{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ne(t.betaInitializer||"zeros"),this.gammaInitializer=ne(t.gammaInitializer||"ones"),this.betaRegularizer=cr(t.betaRegularizer),this.gammaRegularizer=cr(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=ce(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error("Invalid axis: "+t);if(this.axis.length!==D(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const input=le(t),n=input.shape,r=n.length;return Object(f.Bd)(()=>{let{mean:t,variance:e}=Object(f.pc)(input,this.axis,!0);const o=C(1,r);for(const t of this.axis)o[t]=n[t];const l=t=>null!=t&&t.shape.length!==r&&this.axis!==[r-1]?t.reshape(o):t;let c=l(this.gamma.read()),h=l(this.beta.read());const d=[],m=[];for(let i=0;i<r;++i)-1!==this.axis.indexOf(i)?(d.push(n[i]),m.push(1)):(d.push(1),m.push(n[i]));return t=t.tile(d),e=e.tile(d),c=c.tile(m),h=h.tile(m),is(input,t,e,h,c,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ee(this.betaInitializer),gammaInitializer:ee(this.gammaInitializer),betaRegularizer:ur(this.betaRegularizer),gammaRegularizer:ur(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}ls.className="LayerNormalization",f.Tc.registerClass(ls);class cs extends ve{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new w(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new w(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new w(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new me({ndim:4})]}computeOutputShape(t){let e,n;return t=ce(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(f.Bd)(()=>{return e=le(t),n=this.padding,r=this.dataFormat,Object(f.Bd)(()=>{if(4!==e.rank)throw new w("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new w("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new w(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let pattern;return pattern="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],f.yc(e,pattern)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function hs(t,e,n,r,o,l){return Object(f.Bd)(()=>{let c;st(o),it(l),at(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==o&&(o="channelsLast"),null==l&&(l="max"),t=Or(t,o);const h="same"===r?"same":"valid";return c="max"===l?f.gc(t,e,n,h):f.I(t,e,n,h),"channelsFirst"===o&&(c=f.Fd(c,[0,3,1,2])),c})}function ds(t,e,n,r,o,l){return Object(f.Bd)(()=>{let c;st(o),it(l),at(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==o&&(o="channelsLast"),null==l&&(l="max"),t=Sr(t,o);const h="same"===r?"same":"valid";return c="max"===l?f.hc(t,e,n,h):f.J(t,e,n,h),"channelsFirst"===o&&(c=f.Fd(c,[0,4,1,2,3])),c})}cs.className="ZeroPadding2D",f.Tc.registerClass(cs);class ps extends ve{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new w("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(L(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new w("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}L(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,at(this.padding),this.inputSpec=[new me({ndim:3})]}computeOutputShape(t){const e=vr((t=ce(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(f.Bd)(()=>{this.invokeCallHook(t,e),t=vt(le(t),2);const output=this.poolingFunction(le(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return f.od(output,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class fs extends ps{constructor(t){super(t)}poolingFunction(t,e,n,r,o){return st(o),at(r),hs(t,e,n,r,o,"max")}}fs.className="MaxPooling1D",f.Tc.registerClass(fs);class ms extends ps{constructor(t){super(t)}poolingFunction(t,e,n,r,o){return st(o),at(r),hs(t,e,n,r,o,"avg")}}ms.className="AveragePooling1D",f.Tc.registerClass(ms);class gs extends ve{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new w("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];L(this.poolSize,"poolSize"),L(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,st(this.dataFormat),at(this.padding),this.inputSpec=[new me({ndim:4})]}computeOutputShape(t){t=ce(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=vr(e,this.poolSize[0],this.padding,this.strides[0]),n=vr(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(f.Bd)(()=>(this.invokeCallHook(t,e),this.poolingFunction(le(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class bs extends gs{constructor(t){super(t)}poolingFunction(t,e,n,r,o){return st(o),at(r),hs(t,e,n,r,o,"max")}}bs.className="MaxPooling2D",f.Tc.registerClass(bs);class ys extends gs{constructor(t){super(t)}poolingFunction(t,e,n,r,o){return st(o),at(r),hs(t,e,n,r,o,"avg")}}ys.className="AveragePooling2D",f.Tc.registerClass(ys);class xs extends ve{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new w("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];L(this.poolSize,"poolSize"),L(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,st(this.dataFormat),at(this.padding),this.inputSpec=[new me({ndim:5})]}computeOutputShape(t){t=ce(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=vr(e,this.poolSize[0],this.padding,this.strides[0]),n=vr(n,this.poolSize[1],this.padding,this.strides[1]),r=vr(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(f.Bd)(()=>(this.invokeCallHook(t,e),this.poolingFunction(le(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class vs extends xs{constructor(t){super(t)}poolingFunction(t,e,n,r,o){return st(o),at(r),ds(t,e,n,r,o,"max")}}vs.className="MaxPooling3D",f.Tc.registerClass(vs);class ws extends xs{constructor(t){super(t)}poolingFunction(t,e,n,r,o){return st(o),at(r),ds(t,e,n,r,o,"avg")}}ws.className="AveragePooling3D",f.Tc.registerClass(ws);class Os extends ve{constructor(t){super(t),this.inputSpec=[new me({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new O}}class Ss extends Os{constructor(t){super(t||{})}call(t,e){return Object(f.Bd)(()=>{const input=le(t);return f.kc(input,1)})}}Ss.className="GlobalAveragePooling1D",f.Tc.registerClass(Ss);class Cs extends Os{constructor(t){super(t||{})}call(t,e){return Object(f.Bd)(()=>{const input=le(t);return f.fc(input,1)})}}Cs.className="GlobalMaxPooling1D",f.Tc.registerClass(Cs);class ks extends ve{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,st(this.dataFormat),this.inputSpec=[new me({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new O}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Ns extends ks{call(t,e){return Object(f.Bd)(()=>{const input=le(t);return"channelsLast"===this.dataFormat?f.kc(input,[1,2]):f.kc(input,[2,3])})}}Ns.className="GlobalAveragePooling2D",f.Tc.registerClass(Ns);class Is extends ks{call(t,e){return Object(f.Bd)(()=>{const input=le(t);return"channelsLast"===this.dataFormat?f.fc(input,[1,2]):f.fc(input,[2,3])})}}function Es(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new w("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function o(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=o(e),constants:n=o(n)}}function Ts(t,e,n,r=!1,mask,o,l=!1,c=!1){return f.Bd(()=>{const h=e.shape.length;if(h<3)throw new w(`Input should be at least 3D, but is ${h}D.`);const d=[1,0].concat(yt(2,h));if(e=f.Fd(e,d),null!=o)throw new O("The rnn() functoin of the deeplearn.js backend does not support constants yet.");l&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=mask&&((mask=mask.asType("bool").asType("float32")).rank===h-1&&(mask=f.zb(mask,-1)),mask=f.Fd(mask,d)),r&&(e=f.Lc(e,0),null!=mask&&(mask=f.Lc(mask,0)));const m=[];let y,x=n;const v=e.shape[0],S=f.Hd(e);let C,k;null!=mask&&(C=f.Hd(mask));for(let e=0;e<v;++e){const n=S[e],r=f.Bd(()=>t(n,x));if(null==mask)y=r[0],x=r[1];else{const t=f.Bd(()=>{const t=C[e],n=f.xc(t).sub(t);return{output:r[0].mul(t).add(x[0].mul(n)),newStates:x.map((e,i)=>r[1][i].mul(t).add(e.mul(n)))}});y=t.output,x=t.newStates}c&&m.push(y)}if(c){const t=1;k=f.pd(m,t)}return[y,k,x]})}Is.className="GlobalMaxPooling2D",f.Tc.registerClass(Is);class As extends ve{constructor(t){let e;if(super(t),null==t.cell)throw new w("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Ms({cells:t.cell}):t.cell,null==e.stateSize)throw new w("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new me({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return yt(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){oe(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,mask){return f.Bd(()=>{Array.isArray(mask)&&(mask=mask[0]);const t=this.returnSequences?mask:null;if(this.returnState){const e=this.states.map(s=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,output=[];for(let i=0;i<t;++i)output.push(null);return output}return this.states_}set states(s){this.states_=s}build(t){if(null!=this.numConstants)throw new O("Constants support is not implemented in RNN yet.");oe(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t[t.length-1];this.inputSpec[0]=new me({shape:[e,null,n]});const r=[t[0]].concat(t.slice(2));let o;if(this.cell.build(r),o=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!f.Jd.arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),o))throw new w(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=o.map(t=>new me({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Object(f.Bd)(()=>{if(!this.stateful)throw new x("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new w("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>f.Pd([n,t])):this.states_=[f.Pd([n,this.cell.stateSize])];else if(null==t)f.pb(this.states_),null!=this.keptStates&&(f.pb(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>f.Pd([n,t])):this.states_[0]=f.Pd([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new w(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):f.pb(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,l=[n,o];if(!f.Jd.arraysEqual(r.shape,l))throw new w(`State ${e} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>f.Qb(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const o=Es(t,n,r,this.numConstants);t=o.inputs,n=o.initialState,r=o.constants;let l=[],c=[];if(null!=n){e.initialState=n,l=l.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new me({shape:t.shape}));c=c.concat(this.stateSpec)}null!=r&&(e.constants=r,l=l.concat(r),this.numConstants=r.length);if(l[0]instanceof ge){const n=[t].concat(l),r=this.inputSpec.concat(c),o=this.inputSpec;this.inputSpec=r;const output=super.apply(n,e);return this.inputSpec=o,output}return super.apply(t,e)}call(t,e){return Object(f.Bd)(()=>{const mask=null==e?null:e.mask,n=null==e?null:e.training;let r=null==e?null:e.initialState;t=le(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new w(`RNN Layer has ${o} state(s) but was passed `+r.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:n},c=Ts((t,e)=>{const n=this.cell.call([t].concat(e),l);return[n[0],n.slice(1)]},t,r,this.goBackwards,mask,null,this.unroll,this.returnSequences),h=c[0],d=c[1],f=c[2];this.stateful&&this.resetStates(f,n);const output=this.returnSequences?d:h;return this.returnState?[output].concat(f):output})}getInitialState(t){return Object(f.Bd)(()=>{let e=f.Pd(t.shape);return e=f.sd(e,[1,2]),e=vt(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?Nt(e,[1,t]):e):this.cell.stateSize>1?[Nt(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const e=this.cell.getConfig();t.cell={className:this.cell.getClassName(),config:e};const n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,e,n={}){const r=je(e.cell,n);return new t(Object.assign(e,{cell:r}))}}As.className="RNN",f.Tc.registerClass(As);class Rs extends ve{}class $s extends Rs{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,L(this.units,"units"),this.activation=rr(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ne(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ne(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ne(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cr(t.kernelRegularizer),this.recurrentRegularizer=cr(t.recurrentRegularizer),this.biasRegularizer=cr(t.biasRegularizer),this.kernelConstraint=Y(t.kernelConstraint),this.recurrentConstraint=Y(t.recurrentConstraint),this.biasConstraint=Y(t.biasConstraint),this.dropout=gt([1,bt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=gt([1,bt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ce(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(f.Bd)(()=>{if(2!==(t=t).length)throw new w(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let o;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ls(()=>f.xc(t),this.dropout,r)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ls(()=>f.xc(n),this.recurrentDropout,r));const l=this.dropoutMask,c=this.recurrentDropoutMask;o=Et(null!=l?f.qc(t,l):t,this.kernel.read()),null!=this.bias&&(o=$t(o,this.bias.read())),null!=c&&(n=f.qc(n,c));let output=f.x(o,Et(n,this.recurrentKernel.read()));return null!=this.activation&&(output=this.activation.apply(output)),[output,output]})}getConfig(){const t={units:this.units,activation:er(this.activation),useBias:this.useBias,kernelInitializer:ee(this.kernelInitializer),recurrentInitializer:ee(this.recurrentInitializer),biasInitializer:ee(this.biasInitializer),kernelRegularizer:ur(this.kernelRegularizer),recurrentRegularizer:ur(this.recurrentRegularizer),biasRegularizer:ur(this.biasRegularizer),activityRegularizer:ur(this.activityRegularizer),kernelConstraint:J(this.kernelConstraint),recurrentConstraint:J(this.recurrentConstraint),biasConstraint:J(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return Object.assign(t,e),t}}$s.className="SimpleRNNCell",f.Tc.registerClass($s);class Fs extends As{constructor(t){t.cell=new $s(t),super(t)}call(t,e){return Object(f.Bd)(()=>{null!=this.cell.dropoutMask&&(f.pb(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(f.pb(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==e?null:e.mask,n=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:mask,training:n,initialState:r})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}getConfig(){const t={units:this.units,activation:er(this.activation),useBias:this.useBias,kernelInitializer:ee(this.kernelInitializer),recurrentInitializer:ee(this.recurrentInitializer),biasInitializer:ee(this.biasInitializer),kernelRegularizer:ur(this.kernelRegularizer),recurrentRegularizer:ur(this.recurrentRegularizer),biasRegularizer:ur(this.biasRegularizer),activityRegularizer:ur(this.activityRegularizer),kernelConstraint:J(this.kernelConstraint),recurrentConstraint:J(this.recurrentConstraint),biasConstraint:J(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return new t(e)}}Fs.className="SimpleRNN",f.Tc.registerClass(Fs);class js extends Rs{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new w("GRUCell does not support reset_after parameter set to true.");this.units=t.units,L(this.units,"units"),this.activation=rr(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=rr(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ne(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ne(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ne(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cr(t.kernelRegularizer),this.recurrentRegularizer=cr(t.recurrentRegularizer),this.biasRegularizer=cr(t.biasRegularizer),this.kernelConstraint=Y(t.kernelConstraint),this.recurrentConstraint=Y(t.recurrentConstraint),this.biasConstraint=Y(t.biasConstraint),this.dropout=gt([1,bt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=gt([1,bt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=ce(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(f.Bd)(()=>{if(2!==(t=t).length)throw new w("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ls(()=>f.xc(t),this.dropout,n,3)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ls(()=>f.xc(r),this.recurrentDropout,n,3));const o=this.dropoutMask,l=this.recurrentDropoutMask;let c,h,d;0<this.dropout&&this.dropout<1&&(t=f.qc(t,o[0]));let m=Et(t,this.kernel.read());this.useBias&&(m=$t(m,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=f.qc(r,l[0]));const y=this.recurrentKernel.read(),[x,v]=f.kd(y,[2*this.units,this.units],y.rank-1),O=Et(r,x),[S,C,k]=f.kd(m,3,m.rank-1),[N,I]=f.kd(O,2,O.rank-1);c=this.recurrentActivation.apply(f.x(S,N)),h=this.recurrentActivation.apply(f.x(C,I));const E=Et(f.qc(h,r),v);d=this.activation.apply(f.x(k,E));const T=f.x(f.qc(c,r),f.qc(f.x(1,f.sc(c)),d));return[T,T]})}getConfig(){const t={units:this.units,activation:er(this.activation),recurrentActivation:er(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ee(this.kernelInitializer),recurrentInitializer:ee(this.recurrentInitializer),biasInitializer:ee(this.biasInitializer),kernelRegularizer:ur(this.kernelRegularizer),recurrentRegularizer:ur(this.recurrentRegularizer),biasRegularizer:ur(this.biasRegularizer),activityRegularizer:ur(this.activityRegularizer),kernelConstraint:J(this.kernelConstraint),recurrentConstraint:J(this.recurrentConstraint),biasConstraint:J(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return Object.assign(t,e),t}}js.className="GRUCell",f.Tc.registerClass(js);class Ds extends As{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new js(t),super(t)}call(t,e){return Object(f.Bd)(()=>{null!=this.cell.dropoutMask&&(f.pb(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(f.pb(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==e?null:e.mask,n=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:mask,training:n,initialState:r})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:er(this.activation),recurrentActivation:er(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ee(this.kernelInitializer),recurrentInitializer:ee(this.recurrentInitializer),biasInitializer:ee(this.biasInitializer),kernelRegularizer:ur(this.kernelRegularizer),recurrentRegularizer:ur(this.recurrentRegularizer),biasRegularizer:ur(this.biasRegularizer),activityRegularizer:ur(this.activityRegularizer),kernelConstraint:J(this.kernelConstraint),recurrentConstraint:J(this.recurrentConstraint),biasConstraint:J(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Ds.className="GRU",f.Tc.registerClass(Ds);class _s extends Rs{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,L(this.units,"units"),this.activation=rr(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=rr(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ne(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ne(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ne(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=cr(t.kernelRegularizer),this.recurrentRegularizer=cr(t.recurrentRegularizer),this.biasRegularizer=cr(t.biasRegularizer),this.kernelConstraint=Y(t.kernelConstraint),this.recurrentConstraint=Y(t.recurrentConstraint),this.biasConstraint=Y(t.biasConstraint),this.dropout=gt([1,bt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=gt([1,bt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=ce(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends zt{apply(e,r){const o=t.apply([n]),l=(new Lt).apply([n]),c=t.apply([2*n]);return kt(kt(o,l),c)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(f.Bd)(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new w("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const o=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ls(()=>f.xc(t),this.dropout,n,4)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ls(()=>f.xc(r),this.recurrentDropout,n,4));const l=this.dropoutMask,c=this.recurrentDropoutMask;let i,h,d,m;0<this.dropout&&this.dropout<1&&(t=f.qc(t,l[0]));let y=Et(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=f.qc(r,c[0])),y=f.x(y,Et(r,this.recurrentKernel.read())),this.useBias&&(y=$t(y,this.bias.read()));const[x,v,O,S]=f.kd(y,4,y.rank-1);i=this.recurrentActivation.apply(x),h=this.recurrentActivation.apply(v),d=f.x(f.qc(h,o),f.qc(i,this.activation.apply(O))),m=this.recurrentActivation.apply(S);const C=f.qc(m,this.activation.apply(d));return[C,C,d]})}getConfig(){const t={units:this.units,activation:er(this.activation),recurrentActivation:er(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ee(this.kernelInitializer),recurrentInitializer:ee(this.recurrentInitializer),biasInitializer:ee(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ur(this.kernelRegularizer),recurrentRegularizer:ur(this.recurrentRegularizer),biasRegularizer:ur(this.biasRegularizer),activityRegularizer:ur(this.activityRegularizer),kernelConstraint:J(this.kernelConstraint),recurrentConstraint:J(this.recurrentConstraint),biasConstraint:J(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return Object.assign(t,e),t}}_s.className="LSTMCell",f.Tc.registerClass(_s);class zs extends As{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new _s(t),super(t)}call(t,e){return Object(f.Bd)(()=>{null!=this.cell.dropoutMask&&(f.pb(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(f.pb(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==e?null:e.mask,n=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:mask,training:n,initialState:r})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get unitForgetBias(){return this.cell.unitForgetBias}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:er(this.activation),recurrentActivation:er(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ee(this.kernelInitializer),recurrentInitializer:ee(this.recurrentInitializer),biasInitializer:ee(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ur(this.kernelRegularizer),recurrentRegularizer:ur(this.recurrentRegularizer),biasRegularizer:ur(this.biasRegularizer),activityRegularizer:ur(this.activityRegularizer),kernelConstraint:J(this.kernelConstraint),recurrentConstraint:J(this.recurrentConstraint),biasConstraint:J(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}zs.className="LSTM",f.Tc.registerClass(zs);class Ms extends Rs{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(f.Bd)(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const o=[];let l;for(let i=0;i<this.cells.length;++i){const c=this.cells[i];n=r[i],l=0===i?[t[0]].concat(n):[l[0]].concat(n),l=c.call(l,e),o.push(l.slice(1))}n=[];for(const t of o.slice().reverse())n.push(...t);return[l[0]].concat(n)})}build(t){let e;oe(t)&&(t=t[0]),t=t,this.cells.forEach((n,i)=>{ut("RNNCell_"+i,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=[];for(const e of this.cells)t.push({className:e.getClassName(),config:e.getConfig()});const e={cells:t},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(je(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return pe(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,o=t.splice(r);for(let i=0;i<n.weights.length;++i)e.push([n.weights[i],o[i]])}fe(e)}}function Ls(t,e,n=null,r=1){function o(){return Ft(t(),e)}if(r>1){const mask=[];for(let i=0;i<r;i++)mask.push(jt(o,t,n));return mask.map(t=>f.Qb(t.clone()))}return f.Qb(jt(o,t,n).clone())}Ms.className="StackedRNNCells",f.Tc.registerClass(Ms);class Bs extends ve{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=je(e.layer,n);delete e.layer;const o={layer:r};return Object.assign(o,e),new t(o)}}class Ps extends Bs{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=ce(t)).length<3)throw new w("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=ce(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(f.Bd)(()=>Ts((t,n)=>[le(this.layer.call(t,e)),[]],t=le(t),[],!1,null,null,!1,!0)[1])}}Ps.className="TimeDistributed",f.Tc.registerClass(Ps);class Ws extends Bs{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=je(n),e.goBackwards=!0!==e.goBackwards;const r={};var o;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=je(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,o=this.mergeMode,z(et,"BidirectionalMergeMode",o),t.weights)throw new O("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,o=this.forwardLayer.computeOutputShape(t);return Array.isArray(o)&&Array.isArray(o[0])||(o=[o]),o=o,this.returnState?(r=o.slice(1),e=o[0]):e=o[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):I(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const o=Es(t,n,r,this.numConstants);if(t=o.inputs,n=o.initialState,r=o.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const l=[],c=[];if(null!=n){const t=n.length;if(t%2>0)throw new w("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,l.push(...n);const r=n.map(t=>new me({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),c.push(...r)}if(null!=r)throw new O("Support for constants in Bidirectional layers is not implemented yet.");const h=l[0]instanceof ge;for(const t of l)if(t instanceof ge!==h)throw new w("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(h){const n=[t].concat(l),r=this.inputSpec.concat(c),o=this.inputSpec;this.inputSpec=r;const output=super.apply(n,e);return this.inputSpec=o,output}return super.apply(t,e)}call(t,e){return Object(f.Bd)(()=>{const n=e.initialState;let r,o,l,output;if(null==n)r=this.forwardLayer.call(t,e),o=this.backwardLayer.call(t,e);else{const l=n.slice(0,n.length/2),c=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),o=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}return this.returnState&&(Array.isArray(r)&&(l=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=f.Lc(o,1)),"concat"===this.mergeMode?output=Ct([r,o]):"sum"===this.mergeMode?output=f.x(r,o):"ave"===this.mergeMode?output=f.qc(.5,f.x(r,o)):"mul"===this.mergeMode?output=f.qc(r,o):null==this.mergeMode&&(output=[r,o]),this.returnState?null==this.mergeMode?output.concat(l):[output].concat(l):output})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ut(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ut(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,mask){let e;if(Array.isArray(mask)&&(mask=mask[0]),e=this.returnSequences?null==this.mergeMode?[mask,mask]:mask:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(e)?e.concat(t).concat(t):[e].concat(t).concat(t)}return e}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=je(e.layer);if(delete e.layer,null!=e.numConstants)throw new O("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}Ws.className="Bidirectional",f.Tc.registerClass(Ws);var Us=n(204),Vs=n(182);class Gs{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return Object(Vs.e)(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Object(Vs.e)(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(Us.f)(this.node.rawAttrs,t,e);if(null!=n.s)return Object(Us.i)(this.node.rawAttrs,t,e);if(null!=n.b)return Object(Us.c)(this.node.rawAttrs,t,e);if(null!=n.shape)return Object(Us.k)(this.node.rawAttrs,t,e);if(null!=n.type)return Object(Us.e)(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(Us.g)(this.node.rawAttrs,t,e);if(null!=n.list.s)return Object(Us.h)(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Object(Us.j)(this.node.rawAttrs,t,e);if(null!=n.list.b)return Object(Us.b)(this.node.rawAttrs,t,e);if(null!=n.list.type)return Object(Us.d)(this.node.rawAttrs,t,e)}return e}}var Hs=n(191);function qs(t,e,n=""){f.Jd.assert(function(t,e){if(t.length!==e.length)return!1;for(let i=0;i<t.length;i++)if(-1!==t[i]&&-1!==e[i]&&t[i]!==e[i])return!1;return!0}(t,e),()=>n+` Shapes ${t} and ${e} must match`)}class Ks{constructor(t,e,n,r,o,l,c){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=l,this.clearAfterRead=c,this.tensors=[],this.closed_=!1,this.idTensor=Object(f.Pc)(0),Object(f.Qb)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(){this.tensors.forEach(t=>t.tensor.dispose()),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),qs(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Object(f.Qb)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((i,t)=>this.write(i,e[t]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let i=0;i<this.size();i++)t.push(i)}if(0===t.length)return Object(f.wd)([],[0].concat(this.elementShape));const n=this.readMany(t);return qs(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(f.pd)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Object(f.wd)([],[0].concat(this.elementShape));const e=[];for(let i=0;i<this.size();i++)e.push(i);const n=this.readMany(e);return qs(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(f.Z)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Object(f.Hd)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const o=0===n?0:e.size/n,l=[];Object(f.Bd)(()=>{e=e.reshape([1,n,o]);for(let i=0;i<t.length;++i){const n=[0,0===i?0:r[i-1],0],c=[1,t[i],o];l[i]=Object(f.ad)(e,n,c).reshape(this.elementShape)}return l});const c=[];for(let i=0;i<t.length;i++)c[i]=i;this.writeMany(c,l)}}class Js{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);qs(e,t.shape,"TensorList shape mismatch: "),Object(f.Qb)(t)}),this.idTensor=Object(f.Pc)(0),this.maxNumElements=r,Object(f.Qb)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Js([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(){this.tensors.forEach(t=>t.dispose()),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return qs(t,this.elementShape,"TensorList shape mismatch: "),Object(f.Bd)(()=>{const e=this.tensors.map(e=>e.reshape(t));return Object(f.pd)(e,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return qs(n.shape,t,"TensorList shape mismatch: "),n.reshape(t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(qs(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(f.Qb)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+t);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return qs(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);qs(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(f.Qb)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return qs(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?Object(f.wd)([],[0].concat(this.elementShape)):Object(f.Bd)(()=>{const e=t.map(i=>this.tensors[i].reshape(n));return Object(f.pd)(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return qs(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?Object(f.wd)([],[0].concat(this.elementShape)):Object(f.Bd)(()=>{const t=this.tensors.map(t=>t.reshape(e));return Object(f.Z)(t,0)})}}const Xs=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Object(Vs.d)("thenBranch",t,e,n),o=Object(Vs.d)("elseBranch",t,e,n),l=Object(Vs.d)("cond",t,e,n),c=Object(Vs.d)("args",t,e,n);return(await l.data())[0]?n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap):n.functionMap[o].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(Vs.d)("body",t,e,n),o=Object(Vs.d)("cond",t,e,n),l=Object(Vs.d)("args",t,e,n),c=await n.functionMap[o].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap),h=l.map(t=>t.id);let d=await c[0].data();c.forEach(t=>{t.kept||-1!==h.indexOf(t.id)||t.dispose()});let f=l;for(;d[0];){const t=f;f=await n.functionMap[r].executeFunctionAsync(f,n.tensorArrayMap,n.tensorListMap);const e=f.map(t=>t.id);t.forEach(t=>{t.kept||-1!==h.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const l=await n.functionMap[o].executeFunctionAsync(f,n.tensorArrayMap,n.tensorListMap);d=await l[0].data(),l.forEach(t=>{t.kept||-1!==h.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return f}case"LoopCond":{const r=Object(Vs.d)("pred",t,e,n);return[Object(Vs.a)(r)]}case"Switch":{const r=Object(Vs.d)("pred",t,e,n);let data=Object(Vs.d)("data",t,e,n);return data.kept||(data=Object(Vs.a)(data)),(await r.data())[0]?[void 0,data]:[data,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==Object(Vs.e)(t,e,n));if(r){const data=Object(Vs.e)(r,e,n);return[Object(Vs.a)(data)]}return}case"Enter":{const r=Object(Vs.d)("frameName",t,e,n),data=Object(Vs.d)("tensor",t,e,n);return n.enterFrame(r),[Object(Vs.a)(data)]}case"Exit":{const data=Object(Vs.d)("tensor",t,e,n);return n.exitFrame(),[Object(Vs.a)(data)]}case"NextIteration":{const data=Object(Vs.d)("tensor",t,e,n);return n.nextIteration(),[Object(Vs.a)(data)]}case"TensorArrayV3":{const r=Object(Vs.d)("size",t,e,n),o=Object(Vs.d)("dtype",t,e,n),l=Object(Vs.d)("elementShape",t,e,n),c=Object(Vs.d)("dynamicSize",t,e,n),h=Object(Vs.d)("clearAfterRead",t,e,n),d=Object(Vs.d)("identicalElementShapes",t,e,n),m=Object(Vs.d)("name",t,e,n),y=new Ks(m,o,r,l,d,c,h);return n.addTensorArray(y),[y.idTensor,Object(f.Pc)(1)]}case"TensorArrayWriteV3":{const r=Object(Vs.d)("tensorArrayId",t,e,n),o=Object(Vs.d)("index",t,e,n),l=Object(Vs.d)("tensor",t,e,n),c=n.getTensorArray(r.id);return c.write(o,l),[c.idTensor]}case"TensorArrayReadV3":{const r=Object(Vs.d)("tensorArrayId",t,e,n),o=Object(Vs.d)("index",t,e,n);return[n.getTensorArray(r.id).read(o)]}case"TensorArrayGatherV3":{const r=Object(Vs.d)("tensorArrayId",t,e,n),o=Object(Vs.d)("indices",t,e,n),l=Object(Vs.d)("dtype",t,e,n);return[n.getTensorArray(r.id).gather(o,l)]}case"TensorArrayScatterV3":{const r=Object(Vs.d)("tensorArrayId",t,e,n),o=Object(Vs.d)("indices",t,e,n),l=Object(Vs.d)("tensor",t,e,n),c=n.getTensorArray(r.id);return c.scatter(o,l),[c.idTensor]}case"TensorArrayConcatV3":{const r=Object(Vs.d)("tensorArrayId",t,e,n),o=n.getTensorArray(r.id),l=Object(Vs.d)("dtype",t,e,n);return[o.concat(l)]}case"TensorArraySplitV3":{const r=Object(Vs.d)("tensorArrayId",t,e,n),o=Object(Vs.d)("tensor",t,e,n),l=Object(Vs.d)("lengths",t,e,n),c=n.getTensorArray(r.id);return c.split(l,o),[c.idTensor]}case"TensorArraySizeV3":{const r=Object(Vs.d)("tensorArrayId",t,e,n),o=n.getTensorArray(r.id);return[Object(f.Pc)(o.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(Vs.d)("tensorArrayId",t,e,n),o=n.getTensorArray(r.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{const r=Object(Vs.d)("tensorListId",t,e,n),o=Object(Vs.d)("index",t,e,n),l=Object(Vs.d)("tensor",t,e,n),c=n.getTensorList(r.id);return c.setItem(o,l),[c.idTensor]}case"TensorListGetItem":{const r=Object(Vs.d)("tensorListId",t,e,n),o=Object(Vs.d)("index",t,e,n),l=Object(Vs.d)("elementShape",t,e,n),c=Object(Vs.d)("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(o,l,c)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(Vs.d)("indices",t,e,n),o=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const o=Math.max(...e);if(null!=r&&-1!==r&&o>=r)throw new Error(`Max index must be < array size (${o}  vs. ${r})`);const l=new Js([],n,t.dtype,r),c=Object(f.Hd)(t,0);return e.forEach((t,e)=>{l.setItem(t,c[e])}),l}(Object(Vs.d)("tensor",t,e,n),r,Object(Vs.d)("elementShape",t,e,n),Object(Vs.d)("numElements",t,e,n));return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":{const r=function(t,e,n){return new Js([],t,e,n)}(Object(Vs.d)("elementShape",t,e,n),Object(Vs.d)("elementDType",t,e,n),Object(Vs.d)("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListGather":{const r=Object(Vs.d)("tensorListId",t,e,n),o=Object(Vs.d)("indices",t,e,n),l=Object(Vs.d)("elementShape",t,e,n),c=Object(Vs.d)("elementDType",t,e,n);return[n.getTensorList(r.id).gather(o,c,l)]}case"TensorListStack":{const r=Object(Vs.d)("tensorListId",t,e,n),o=Object(Vs.d)("elementShape",t,e,n),l=Object(Vs.d)("elementDType",t,e,n),c=Object(Vs.d)("numElements",t,e,n);return[n.getTensorList(r.id).stack(o,l,c)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+t.shape);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);qs(t.shape.slice(1),e,"TensorList shape mismatch: ");const o=t.unstack();return new Js(o,e,r)}(Object(Vs.d)("tensor",t,e,n),Object(Vs.d)("elementShape",t,e,n),Object(Vs.d)("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Object(Vs.d)("tensorListId",t,e,n),o=n.getTensorList(r.id),l=Object(Vs.d)("dtype",t,e,n),c=Object(Vs.d)("elementShape",t,e,n);return[o.concat(l,c)]}case"TensorListPushBack":{const r=Object(Vs.d)("tensorListId",t,e,n),o=Object(Vs.d)("tensor",t,e,n),l=n.getTensorList(r.id);return l.pushBack(o),[l.idTensor]}case"TensorListPopBack":{const r=Object(Vs.d)("tensorListId",t,e,n),o=Object(Vs.d)("elementShape",t,e,n),l=Object(Vs.d)("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(o,l)]}case"TensorListSplit":{const r=Object(Vs.d)("tensor",t,e,n),o=Object(Vs.d)("elementShape",t,e,n),l=function(t,e,n){let r=0;const o=e.map(t=>(r+=t,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const l=0===r?0:t.size/r,c=Object(f.Bd)(()=>{const c=[];t=t.reshape([1,r,l]);for(let i=0;i<e.length;++i){const r=[0,0===i?0:o[i-1],0],h=[1,e[i],l];c[i]=Object(f.ad)(t,r,h).reshape(n)}return t.dispose(),c}),h=new Js([],n,t.dtype,e.length);for(let i=0;i<c.length;i++)h.setItem(i,c[i]);return h}(r,Object(Vs.d)("lengths",t,e,n),o);return n.addTensorList(l),[l.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};function Ys(t,e,n){const[r,o]=Object(Vs.d)("fusedOps",t,e,n),l="biasadd"===r,c="prelu"===o,h="fusedbatchnorm"===r,d=Object(Vs.d)("numArgs",t,e,n);if(l){if(c&&2!==d)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&1!==d)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(h)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const f=Object(Vs.d)("strides",t,e,n),m=Object(Vs.c)(t,e,n),y=Object(Vs.d)("dataFormat",t,e,n).toUpperCase(),x=Object(Vs.d)("dilations",t,e,n),[v,w]=Object(Vs.d)("args",t,e,n);return{stride:f,pad:m,dataFormat:y,dilations:x,biasArg:v,preluArg:w,activationFunc:o}}function Qs(t,e,n){return{boxes:Object(Vs.d)("boxes",t,e,n),scores:Object(Vs.d)("scores",t,e,n),maxOutputSize:Object(Vs.d)("maxOutputSize",t,e,n),iouThreshold:Object(Vs.d)("iouThreshold",t,e,n),scoreThreshold:Object(Vs.d)("scoreThreshold",t,e,n),softNmsSigma:Object(Vs.d)("softNmsSigma",t,e,n)}}function Zs(t,e,n){const r=((t,e,n)=>{switch(t.category){case"arithmetic":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[f.x(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"AddN":return[f.y(Object(Vs.d)("tensors",t,e,n))];case"FloorMod":case"Mod":return[f.oc(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"Mul":return[f.qc(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"RealDiv":case"Div":return[f.qb(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"DivNoNan":return[f.rb(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"FloorDiv":return[f.Fb(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"Sub":return[f.rd(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"Minimum":return[f.nc(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"Maximum":return[f.jc(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"Pow":return[f.zc(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"SquaredDifference":return[f.nd(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"basic_math":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[f.u(Object(Vs.d)("x",t,e,n))];case"Acos":return[f.v(Object(Vs.d)("x",t,e,n))];case"Acosh":return[f.w(Object(Vs.d)("x",t,e,n))];case"Asin":return[f.D(Object(Vs.d)("x",t,e,n))];case"Asinh":return[f.E(Object(Vs.d)("x",t,e,n))];case"Atan":return[f.F(Object(Vs.d)("x",t,e,n))];case"Atan2":return[f.G(Object(Vs.d)("x",t,e,n),Object(Vs.d)("y",t,e,n))];case"Atanh":return[f.H(Object(Vs.d)("x",t,e,n))];case"Ceil":return[f.V(Object(Vs.d)("x",t,e,n))];case"Complex":return[f.Y(Object(Vs.d)("real",t,e,n),Object(Vs.d)("imag",t,e,n))];case"Cos":return[f.ib(Object(Vs.d)("x",t,e,n))];case"Cosh":return[f.jb(Object(Vs.d)("x",t,e,n))];case"Elu":return[f.tb(Object(Vs.d)("x",t,e,n))];case"Erf":return[f.xb(Object(Vs.d)("x",t,e,n))];case"Exp":return[f.yb(Object(Vs.d)("x",t,e,n))];case"Expm1":return[f.Ab(Object(Vs.d)("x",t,e,n))];case"Floor":return[f.Eb(Object(Vs.d)("x",t,e,n))];case"Log":return[f.Yb(Object(Vs.d)("x",t,e,n))];case"Log1p":return[f.Zb(Object(Vs.d)("x",t,e,n))];case"Imag":return[f.Mb(Object(Vs.d)("x",t,e,n))];case"Neg":return[f.sc(Object(Vs.d)("x",t,e,n))];case"Reciprocal":return[f.Gc(Object(Vs.d)("x",t,e,n))];case"Real":return[f.Fc(Object(Vs.d)("x",t,e,n))];case"Relu":return[f.Jc(Object(Vs.d)("x",t,e,n))];case"Round":return[f.Nc(Object(Vs.d)("x",t,e,n))];case"Selu":return[f.Rc(Object(Vs.d)("x",t,e,n))];case"Sigmoid":return[f.Wc(Object(Vs.d)("x",t,e,n))];case"Sin":return[f.Yc(Object(Vs.d)("x",t,e,n))];case"Sign":return[f.Xc(Object(Vs.d)("x",t,e,n))];case"Sinh":return[f.Zc(Object(Vs.d)("x",t,e,n))];case"Softplus":return[f.hd(Object(Vs.d)("x",t,e,n))];case"Sqrt":return[f.ld(Object(Vs.d)("x",t,e,n))];case"Square":return[f.md(Object(Vs.d)("x",t,e,n))];case"Tanh":return[f.vd(Object(Vs.d)("x",t,e,n))];case"Tan":return[f.ud(Object(Vs.d)("x",t,e,n))];case"Relu6":case"ClipByValue":return[f.W(Object(Vs.d)("x",t,e,n),Object(Vs.d)("clipValueMin",t,e,n),Object(Vs.d)("clipValueMax",t,e,n))];case"Rsqrt":return[f.Oc(Object(Vs.e)(t.inputNames[0],e,n))];case"Prod":return[f.Bc(Object(Vs.d)("x",t,e,n),Object(Vs.d)("axes",t,e,n))];case"LeakyRelu":return[f.Sb(Object(Vs.d)("x",t,e,n),Object(Vs.d)("alpha",t,e,n))];case"Prelu":return[f.Ac(Object(Vs.d)("x",t,e,n),Object(Vs.d)("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"control":return Xs(t,e,n);case"convolution":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=Object(Vs.d)("stride",t,e,n),o=Object(Vs.d)("pad",t,e,n),l=Object(Vs.d)("dataFormat",t,e,n).toUpperCase(),c=Object(Vs.d)("dilation",t,e,n);return[f.eb(Object(Vs.d)("x",t,e,n),Object(Vs.d)("filter",t,e,n),r,o,l,c)]}case"Conv2D":{const r=Object(Vs.d)("strides",t,e,n),o=Object(Vs.c)(t,e,n),l=Object(Vs.d)("dataFormat",t,e,n).toUpperCase(),c=Object(Vs.d)("dilations",t,e,n);return[f.fb(Object(Vs.d)("x",t,e,n),Object(Vs.d)("filter",t,e,n),[r[1],r[2]],o,l,[c[1],c[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:l,dilations:c,biasArg:h,preluArg:d,activationFunc:m}=Ys(t,e,n);return[f.Gb.conv2d({x:Object(Vs.d)("x",t,e,n),filter:Object(Vs.d)("filter",t,e,n),strides:[r[1],r[2]],pad:o,dataFormat:l,dilations:[c[1],c[2]],bias:h,activation:m,preluActivationWeights:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:l,dilations:c,biasArg:h,preluArg:d,activationFunc:m}=Ys(t,e,n);return[f.Gb.depthwiseConv2d({x:Object(Vs.d)("x",t,e,n),filter:Object(Vs.d)("filter",t,e,n),strides:[r[1],r[2]],pad:o,dataFormat:l,dilations:[c[1],c[2]],bias:h,activation:m,preluActivationWeights:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(Vs.d)("outputShape",t,e,n),o=Object(Vs.d)("strides",t,e,n),l=Object(Vs.c)(t,e,n);return[f.gb(Object(Vs.d)("x",t,e,n),Object(Vs.d)("filter",t,e,n),r,[o[1],o[2]],l)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(Vs.d)("strides",t,e,n),o=Object(Vs.c)(t,e,n),l=Object(Vs.d)("dilations",t,e,n),c=Object(Vs.d)("dataFormat",t,e,n).toUpperCase();return[f.mb(Object(Vs.d)("input",t,e,n),Object(Vs.d)("filter",t,e,n),[r[1],r[2]],o,c,[l[1],l[2]])]}case"Conv3D":{const r=Object(Vs.d)("strides",t,e,n),o=Object(Vs.d)("pad",t,e,n),l=Object(Vs.d)("dataFormat",t,e,n).toUpperCase(),c=Object(Vs.d)("dilations",t,e,n);return[f.hb(Object(Vs.d)("x",t,e,n),Object(Vs.d)("filter",t,e,n),[r[1],r[2],r[3]],o,l,[c[1],c[2],c[3]])]}case"AvgPool":{const r=Object(Vs.d)("strides",t,e,n),o=Object(Vs.d)("pad",t,e,n),l=Object(Vs.d)("kernelSize",t,e,n);return[f.I(Object(Vs.d)("x",t,e,n),[l[1],l[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=Object(Vs.d)("strides",t,e,n),o=Object(Vs.d)("pad",t,e,n),l=Object(Vs.d)("kernelSize",t,e,n);return[f.gc(Object(Vs.d)("x",t,e,n),[l[1],l[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=Object(Vs.d)("strides",t,e,n),o=Object(Vs.d)("pad",t,e,n),l=Object(Vs.d)("kernelSize",t,e,n),c=Object(Vs.d)("includeBatchInIndex",t,e,n),{result:h,indexes:d}=f.ic(Object(Vs.d)("x",t,e,n),[l[1],l[2]],[r[1],r[2]],o,c);return[h,d]}case"AvgPool3D":{const r=Object(Vs.d)("strides",t,e,n),o=Object(Vs.d)("pad",t,e,n),l=Object(Vs.d)("kernelSize",t,e,n);return[f.J(Object(Vs.d)("x",t,e,n),[l[1],l[2],l[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=Object(Vs.d)("strides",t,e,n),o=Object(Vs.d)("pad",t,e,n),l=Object(Vs.d)("kernelSize",t,e,n);return[f.hc(Object(Vs.d)("x",t,e,n),[l[1],l[2],l[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=Object(Vs.d)("strides",t,e,n),o=Object(Vs.d)("pad",t,e,n),l=Object(Vs.d)("dilations",t,e,n),c=r[1],h=r[2],d=l[1],m=l[2];return[f.ob(Object(Vs.d)("x",t,e,n),Object(Vs.d)("filter",t,e,n),[c,h],o,[d,m],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"creation":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=Object(Vs.d)("shape",t,e,n),o=Object(Vs.d)("dtype",t,e,n),l=Object(Vs.d)("value",t,e,n);return[f.Db(r,l,o)]}case"LinSpace":{const r=Object(Vs.d)("start",t,e,n),o=Object(Vs.d)("stop",t,e,n),l=Object(Vs.d)("num",t,e,n);return[f.Wb(r,o,l)]}case"Multinomial":{const r=Object(Vs.d)("logits",t,e,n),o=Object(Vs.d)("numSamples",t,e,n),l=Object(Vs.d)("seed",t,e,n);return[f.rc(r,o,l)]}case"OneHot":{const r=Object(Vs.d)("indices",t,e,n),o=Object(Vs.d)("depth",t,e,n),l=Object(Vs.d)("onValue",t,e,n),c=Object(Vs.d)("offValue",t,e,n);return[f.vc(r,o,l,c)]}case"Ones":return[f.wc(Object(Vs.d)("shape",t,e,n),Object(Vs.d)("dtype",t,e,n))];case"OnesLike":return[f.xc(Object(Vs.d)("x",t,e,n))];case"RandomUniform":return[f.Dc(Object(Vs.d)("shape",t,e,n),Object(Vs.d)("minval",t,e,n),Object(Vs.d)("maxval",t,e,n),Object(Vs.d)("dtype",t,e,n))];case"Range":{const r=Object(Vs.d)("start",t,e,n),o=Object(Vs.d)("stop",t,e,n),l=Object(Vs.d)("step",t,e,n);return[f.Ec(r,o,l,Object(Vs.d)("dtype",t,e,n))]}case"TruncatedNormal":{const r=Object(Vs.d)("shape",t,e,n),o=Object(Vs.d)("mean",t,e,n),l=Object(Vs.d)("stdDev",t,e,n),c=Object(Vs.d)("seed",t,e,n);return[f.Gd(r,o,l,Object(Vs.d)("dtype",t,e,n),c)]}case"Zeros":return[f.Pd(Object(Vs.d)("shape",t,e,n),Object(Vs.d)("dtype",t,e,n))];case"ZerosLike":return[f.Qd(Object(Vs.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:o,maxOutputSize:l,iouThreshold:c,scoreThreshold:h,softNmsSigma:d}=Qs(t,e,n),m=await f.Nb.nonMaxSuppressionWithScoreAsync(r,o,l,c,h,d);return[m.selectedIndices,m.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:o,maxOutputSize:l,iouThreshold:c,scoreThreshold:h}=Qs(t,e,n),d=Object(Vs.d)("padToMaxOutputSize",t,e,n),m=await f.Nb.nonMaxSuppressionPaddedAsync(r,o,l,c,h,d);return[m.selectedIndices,m.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:o,maxOutputSize:l,iouThreshold:c,scoreThreshold:h}=Qs(t,e,n);return[await f.Nb.nonMaxSuppressionAsync(r,o,l,c,h)]}case"Where":{const r=Object(Vs.d)("condition",t,e,n).asType("bool"),o=[await f.Od(r)];return r.dispose(),o}case"ListDiff":return f.Vc(Object(Vs.d)("x",t,e,n),Object(Vs.d)("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=Object(Vs.d)("x",t,e,n),o=Object(Vs.d)("k",t,e,n),l=Object(Vs.d)("sorted",t,e,n),c=f.Dd(r,o,l);return[c.values,c.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"image":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=Object(Vs.d)("images",t,e,n),o=Object(Vs.d)("size",t,e,n),l=Object(Vs.d)("alignCorners",t,e,n);return[f.Nb.resizeBilinear(r,[o[0],o[1]],l)]}case"ResizeNearestNeighbor":{const r=Object(Vs.d)("images",t,e,n),o=Object(Vs.d)("size",t,e,n),l=Object(Vs.d)("alignCorners",t,e,n);return[f.Nb.resizeNearestNeighbor(r,[o[0],o[1]],l)]}case"CropAndResize":{const image=Object(Vs.d)("image",t,e,n),r=Object(Vs.d)("boxes",t,e,n),o=Object(Vs.d)("boxInd",t,e,n),l=Object(Vs.d)("cropSize",t,e,n),c=Object(Vs.d)("method",t,e,n),h=Object(Vs.d)("extrapolationValue",t,e,n);return[f.Nb.cropAndResize(image,r,o,l,c,h)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"graph":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=Object(Vs.d)("default",t,e,n);return[Object(Vs.e)(t.name,e,n)||r];case"Placeholder":return[Object(Vs.e)(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const data=Object(Vs.d)("x",t,e,n);return[Object(Vs.a)(data)]}case"IdentityN":return Object(Vs.d)("x",t,e,n).map(t=>Object(Vs.a)(t));case"Snapshot":const o=Object(Vs.d)("x",t,e,n);return[Object(Vs.a)(o)];case"Shape":return[f.xd(Object(Vs.d)("x",t,e,n).shape,"int32")];case"ShapeN":return Object(Vs.d)("x",t,e,n).map(t=>f.xd(t.shape));case"Size":return[f.Pc(Object(Vs.d)("x",t,e,n).size,"int32")];case"Rank":return[f.Pc(Object(Vs.d)("x",t,e,n).rank,"int32")];case"NoOp":return[f.Pc(1)];case"Print":const input=Object(Vs.d)("x",t,e,n),data=Object(Vs.d)("data",t,e,n),l=Object(Vs.d)("message",t,e,n),c=Object(Vs.d)("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let i=0;i<data.length;i++)console.log(Array.prototype.slice.call(data[i].dataSync()).slice(0,c));return[input];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"logical":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"Equal":return[f.wb(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"NotEqual":return[f.uc(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"Greater":return[f.Jb(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"GreaterEqual":return[f.Kb(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"Less":return[f.Tb(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"LessEqual":return[f.Ub(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"LogicalAnd":return[f.bc(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"LogicalNot":return[f.cc(Object(Vs.d)("a",t,e,n))];case"LogicalOr":return[f.dc(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];case"Select":case"SelectV2":return[f.Nd(Object(Vs.d)("condition",t,e,n),Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"matrices":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[f.ec(Object(Vs.d)("a",t,e,n),Object(Vs.d)("b",t,e,n),Object(Vs.d)("transposeA",t,e,n),Object(Vs.d)("transposeB",t,e,n))];case"Transpose":return[f.Fd(Object(Vs.d)("x",t,e,n),Object(Vs.d)("perm",t,e,n))];case"_FusedMatMul":const[r,o]=Object(Vs.d)("fusedOps",t,e,n),l="biasadd"===r,c="prelu"===o,h=Object(Vs.d)("numArgs",t,e,n);if(l){if(c&&2!==h)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&1!==h)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[d,m]=Object(Vs.d)("args",t,e,n);return[f.Gb.matMul({a:Object(Vs.d)("a",t,e,n),b:Object(Vs.d)("b",t,e,n),transposeA:Object(Vs.d)("transposeA",t,e,n),transposeB:Object(Vs.d)("transposeB",t,e,n),bias:d,activation:o,preluActivationWeights:m})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"normalization":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[f.M(Object(Vs.d)("x",t,e,n),Object(Vs.d)("mean",t,e,n),Object(Vs.d)("variance",t,e,n),Object(Vs.d)("offset",t,e,n),Object(Vs.d)("scale",t,e,n),Object(Vs.d)("epsilon",t,e,n))];case"LRN":return[f.Xb(Object(Vs.d)("x",t,e,n),Object(Vs.d)("radius",t,e,n),Object(Vs.d)("bias",t,e,n),Object(Vs.d)("alpha",t,e,n),Object(Vs.d)("beta",t,e,n))];case"Softmax":return[f.gd(Object(Vs.d)("x",t,e,n))];case"LogSoftmax":return[f.ac(Object(Vs.d)("x",t,e,n))];case"SparseToDense":return[f.jd(Object(Vs.d)("sparseIndices",t,e,n),Object(Vs.d)("outputShape",t,e,n),Object(Vs.d)("sparseValues",t,e,n),Object(Vs.d)("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"reduction":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"Max":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("keepDims",t,e,n);return[f.fc(Object(Vs.d)("x",t,e,n),r,o)]}case"Mean":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("keepDims",t,e,n);return[f.kc(Object(Vs.d)("x",t,e,n),r,o)]}case"Min":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("keepDims",t,e,n);return[f.mc(Object(Vs.d)("x",t,e,n),r,o)]}case"Sum":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("keepDims",t,e,n);return[f.sd(Object(Vs.d)("x",t,e,n),r,o)]}case"All":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("keepDims",t,e,n);return[f.z(Object(Vs.d)("x",t,e,n),r,o)]}case"Any":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("keepDims",t,e,n);return[f.A(Object(Vs.d)("x",t,e,n),r,o)]}case"ArgMax":{const r=Object(Vs.d)("axis",t,e,n);return[f.B(Object(Vs.d)("x",t,e,n),r)]}case"ArgMin":{const r=Object(Vs.d)("axis",t,e,n);return[f.C(Object(Vs.d)("x",t,e,n),r)]}case"Prod":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("keepDims",t,e,n);return[f.Bc(Object(Vs.d)("x",t,e,n),r,o)]}case"Cumsum":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("exclusive",t,e,n),l=Object(Vs.d)("reverse",t,e,n);return[f.kb(Object(Vs.d)("x",t,e,n),r,o,l)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"slice_join":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=Object(Vs.d)("n",t,e,n),o=Object(Vs.d)("axis",t,e,n);let l=Object(Vs.d)("tensors",t,e,n);return l=l.slice(0,r),[f.Z(l,o)]}case"GatherV2":case"Gather":{const r=Object(Vs.d)("axis",t,e,n),input=Object(Vs.d)("x",t,e,n),o=Object(Vs.d)("indices",t,e,n);return[f.Hb(input,o.asType("int32"),r)]}case"ReverseV2":case"Reverse":{const r=Object(Vs.d)("axis",t,e,n),input=Object(Vs.d)("x",t,e,n);return[f.Lc(input,r)]}case"Slice":{const r=Object(Vs.d)("begin",t,e,n),o=Object(Vs.d)("size",t,e,n);return[f.ad(Object(Vs.d)("x",t,e,n),r,o)]}case"StridedSlice":{const r=Object(Vs.d)("begin",t,e,n),o=Object(Vs.d)("end",t,e,n),l=Object(Vs.d)("strides",t,e,n),c=Object(Vs.d)("beginMask",t,e,n),h=Object(Vs.d)("endMask",t,e,n),d=Object(Vs.d)("ellipsisMask",t,e,n),m=Object(Vs.d)("newAxisMask",t,e,n),y=Object(Vs.d)("shrinkAxisMask",t,e,n),x=Object(Vs.d)("x",t,e,n);return[f.qd(x,r,o,l,c,h,d,m,y)]}case"Pack":return f.Bd(()=>{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("tensors",t,e,n),l=o[0].shape,c=o[0].squeeze().shape,h=o.map(t=>{const e=f.Jd.arraysEqual(t.shape,l);if(!e&&!f.Jd.arraysEqual(t.squeeze().shape,c))throw new Error("the input tensors shape does not match");return e?t:t.reshape(l)});return[f.pd(h,r)]});case"Unpack":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("tensor",t,e,n);return f.Hd(o,r)}case"Tile":{const r=Object(Vs.d)("reps",t,e,n);return[f.Cd(Object(Vs.d)("x",t,e,n),r)]}case"Split":case"SplitV":{const r=Object(Vs.d)("axis",t,e,n),o=Object(Vs.d)("numOrSizeSplits",t,e,n),l=Object(Vs.d)("x",t,e,n);return f.kd(l,o,r)}case"ScatterNd":{const r=Object(Vs.d)("indices",t,e,n),o=Object(Vs.d)("values",t,e,n),l=Object(Vs.d)("shape",t,e,n);return[f.Qc(r,o,l)]}case"GatherNd":{const r=Object(Vs.d)("x",t,e,n),o=Object(Vs.d)("indices",t,e,n);return[f.Ib(r,o)]}case"SparseToDense":{const r=Object(Vs.d)("sparseIndices",t,e,n),o=Object(Vs.d)("outputShape",t,e,n),l=Object(Vs.d)("sparseValues",t,e,n),c=Object(Vs.d)("defaultValue",t,e,n);return[f.jd(r,l,o,l.dtype===c.dtype?c:c.asType(l.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"spectral":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"FFT":return[f.Cb(Object(Vs.d)("x",t,e,n))];case"IFFT":return[f.Lb(Object(Vs.d)("x",t,e,n))];case"RFFT":return[f.Mc(Object(Vs.d)("x",t,e,n))];case"IRFFT":return[f.Pb(Object(Vs.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"transformation":return f.Bd(()=>((t,e,n)=>{switch(t.op){case"Cast":return[f.U(Object(Vs.d)("x",t,e,n),Object(Vs.d)("dtype",t,e,n))];case"ExpandDims":{const r=Object(Vs.d)("axis",t,e,n);return[f.zb(Object(Vs.d)("x",t,e,n),r)]}case"Squeeze":{const r=Object(Vs.d)("axis",t,e,n);return[f.od(Object(Vs.d)("x",t,e,n),r)]}case"Reshape":return[f.Kc(Object(Vs.d)("x",t,e,n),Object(Vs.d)("shape",t,e,n))];case"PadV2":case"Pad":return[f.yc(Object(Vs.d)("x",t,e,n),Object(Vs.d)("padding",t,e,n),Object(Vs.d)("constantValue",t,e,n))];case"SpaceToBatchND":{const r=Object(Vs.d)("blockShape",t,e,n),o=Object(Vs.d)("paddings",t,e,n);return[f.id(Object(Vs.d)("x",t,e,n),r,o)]}case"BatchToSpaceND":{const r=Object(Vs.d)("blockShape",t,e,n),o=Object(Vs.d)("crops",t,e,n);return[f.Q(Object(Vs.d)("x",t,e,n),r,o)]}case"DepthToSpace":{const r=Object(Vs.d)("blockSize",t,e,n),o=Object(Vs.d)("dataFormat",t,e,n).toUpperCase();return[f.lb(Object(Vs.d)("x",t,e,n),r,o)]}case"BroadcastTo":return[f.R(Object(Vs.d)("x",t,e,n),Object(Vs.d)("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"custom":const r=Object(Hs.a)(t.op);if(r&&r.customExecutor)return r.customExecutor(new Gs(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return r instanceof Promise?r.then(data=>[].concat(data)):[].concat(r)}class ta{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let i=0;i<this.contexts.length-1;i++){const e=this.contexts.slice(0,this.contexts.length-i);t.push(this.contextIdforContexts(e))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose();for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose()}}function ea(t,e,n){const r=new Set,o=[];let l=null,c=null;const h=new Set,d=Object.keys(t).map(t=>Object(Vs.g)(t)[0]),f=[...e];for(;f.length>0;){const t=f.pop();(sa(t)||aa(t))&&null==l&&(l=t,c=l.children.map(t=>t.name).filter(t=>r.has(t))),r.add(t.name),null==n[t.name]&&(-1===d.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(input=>{h.has(input.name)||(h.add(input.name),f.push(input))}):o.push(t.name)))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:l,syncInputs:c}}const na=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],ra=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function sa(t){return na.indexOf(t.op)>=0}function aa(t){return ra.indexOf(t.op)>=0}class ia{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new ia(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((map,t)=>(map[t]=this._functions[t].signature,map),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=ea(t,e,this.weightMap),{missingInputs:r,dynamicNode:o,syncInputs:l}=n;if(null!=o)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${l}]`);if(r.length>0){const n=e.map(t=>t.name),o=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${o}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:o}=n,l=[];Object.keys(o).map(t=>Object(Vs.g)(t)[0]).map(e=>t.nodes[e]).forEach(input=>{r.has(input.name)&&l.push(input)}),t.weights.forEach(t=>{r.has(t.name)&&l.push(t)});const c=new Set,h=[];for(;l.length>0;){const t=l.pop();c.add(t.name),e[t.name]||h.push(t),t.children.forEach(t=>{!c.has(t.name)&&r.has(t.name)&&t.inputs.every(input=>c.has(input.name))&&l.push(t)})}return h}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map(t=>this.graph.nodes[Object(Vs.g)(t)[0]]),o=e.map(t=>this.graph.nodes[Object(Vs.g)(t)[0]]),l=this.getCompilationKey(r,o);let c=this.compiledMap.get(l);null==c&&(c=this.compile(t,o),this.compiledMap.set(l,c));const h={},d={};return Object(f.Bd)(()=>{const n=new ta(this.weightMap,h,d,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,o]=Object(Vs.g)(e),l=[];l[o]=t[e],r[n]=l});const o=this.getFrozenTensorIds(r),l={};for(let i=0;i<c.length;i++){const t=c[i];if(!r[t.name]){const c=Zs(t,r,n);if(c instanceof Promise)throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=c,this.checkTensorForDisposal(t.name,t,r,n,o,e,l)}}return null==this.parent&&n.dispose(),e.map(t=>Object(Vs.e)(t,r,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,o,l,c){"control"!==e.category&&-1===l.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(c[t.id]=(c[t.id]||0)+e.children.length)}),e.inputs.forEach(input=>{if("control"!==input.category){const t=Object(Vs.f)(input.name,n,r);null!=t&&t.forEach(t=>{if(t&&!o.has(t.id)){const e=c[t.id];1===e?(t.dispose(),delete c[t.id]):null!=e&&c[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},o={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const l=new ta(this.weightMap,r,o,this.functionExecutorMap),c=await this.executeWithControlFlow(t,l,e,n),h=e.map(t=>Object(Vs.e)(t,c,l)),d=new Set(h.map(t=>t.id)),f=new Set(Object.keys(t).map(e=>t[e].id));return Object.keys(c).forEach(t=>{c[t].forEach(t=>{!t||t.isDisposed||d.has(t.id)||f.has(t.id)||-1!==this.weightIds.indexOf(t.id)||t.dispose()})}),null==this.parent&&l.dispose(),h}async executeFunctionAsync(t,e,n){const r=t.reduce((map,t,e)=>(map[this.inputs[e].name]=t,map),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const o=Object.keys(t),l=o.map(t=>this.graph.nodes[Object(Vs.g)(t)[0]]),c=n.map(t=>this.graph.nodes[Object(Vs.g)(t)[0]]),{usedNodes:h,missingInputs:d,dynamicNode:f,syncInputs:m}=ea(t,c,this.weightMap),y=[...l,...this.graph.weights].map(t=>({node:t,contexts:e.currentContext})),x=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(Vs.g)(e),o=[];o[r]=t[e],x[n]=o});const v={},w=this.getFrozenTensorIds(x),O={};for(;y.length>0;){const t=this.processStack(l,y,e,x,O,w,n,v,h);await Promise.all(t)}null!=f||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const S=c.filter(t=>!sa(t)&&!Object(Vs.e)(t.name,x,e)).map(t=>t.name);if(S.length>0){let t="";throw null!=f&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${S}] from the provided inputs [${o}]. Consider providing the following inputs: [${d}]. ${t}`)}return x}processStack(t,e,n,r,o,l,c,h,d){const f=[];for(;e.length>0;){const m=e.pop();n.currentContext=m.contexts;let y="";if("Enter"===m.node.op&&Object(Vs.d)("isConstant",m.node,r,n)&&([y]=Object(Vs.b)(m.node.name,n)),-1===t.indexOf(m.node)){const t=Zs(m.node,r,n);y||([y]=Object(Vs.b)(m.node.name,n));const x=n.currentContext;t instanceof Promise?f.push(t.then(t=>(r[y]=t,n.currentContext=x,this.checkTensorForDisposal(y,m.node,r,n,l,c,h),this.processChildNodes(m.node,e,n,r,o,d),t))):(r[y]=t,this.checkTensorForDisposal(y,m.node,r,n,l,c,h),this.processChildNodes(m.node,e,n,r,o,d))}else this.processChildNodes(m.node,e,n,r,o,d)}return f}processChildNodes(t,e,n,r,o,l){t.children.forEach(t=>{const[c]=Object(Vs.b)(t.name,n);!o[c]&&l.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!Object(Vs.e)(t,r,n))&&(o[c]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!Object(Vs.e)(t,r,n))&&(o[c]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const input=t[e],[n]=Object(Vs.g)(e),r=this.graph.nodes[n];if(r.attrParams.shape&&r.attrParams.shape.value){const t=r.attrParams.shape.value,e=t.length===input.shape.length&&input.shape.every((e,n)=>-1===t[n]||t[n]===e);f.Jd.assert(e,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${t}], but was [${input.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&f.Jd.assert(input.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${input.dtype}`)})}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=Object(Vs.g)(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t},{})}checkOutputs(t){t.forEach(t=>{const[e]=Object(Vs.g)(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)})}}class oa{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={})}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const path=this.modelUrl;if(null!=path.load)this.handler=path;else if(null!=this.loadOptions.requestInit)this.handler=f.Ob.browserHTTPRequest(path,this.loadOptions);else{const t=f.Ob.getLoadHandlers(path,this.loadOptions);if(0===t.length)t.push(f.Ob.browserHTTPRequest(path,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[path]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=f.Ob.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);return this.executor=new ia(Us.a.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),!0}async save(t,e){if("string"==typeof t){const e=f.Ob.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof f.r||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((map,e,i)=>(map[e]=t[i],map),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(map){return Object.keys(map).reduce((t,e)=>(t[e]=[map[e]],t),{})}dispose(){this.executor.dispose()}}async function ua(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t+="model.json?tfjs-format=file");const n=new oa(t,e);return await n.load(),n}var la=n(192),ca=n(189),ha=n(198);class da{constructor(){this.size=null}batch(t,e=!0){const base=this;let n;return f.Jd.assert(t>0,()=>"batchSize needs to be positive, but it is\n      "+t),n=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),pa(async()=>(await base.iterator()).columnMajorBatch(t,e,fa),n)}concatenate(t){const base=this;let e;return e=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,pa(async()=>(await base.iterator()).concatenate(await t.iterator()),e)}filter(t){const base=this;let e;return e=this.size===1/0?1/0:null,pa(async()=>(await base.iterator()).filter(e=>f.Bd(()=>t(e))),e)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const base=this;return pa(async()=>(await base.iterator()).map(e=>f.Bd(()=>t(e))),this.size)}mapAsync(t){const base=this;return pa(async()=>(await base.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const base=this;return pa(async()=>(await base.iterator()).prefetch(t),this.size)}repeat(t){const base=this;let e;return e=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,pa(async()=>{const e=Object(ca.e)(async()=>({value:await base.iterator(),done:!1}));return Object(ca.d)(e.take(t))},e)}skip(t){const base=this;let e;return e=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,pa(async()=>(await base.iterator()).skip(t),e)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const base=this,r=la.alea(e||f.Jd.now().toString());return pa(async()=>{let e=r.int32();return n&&(e+=r.int32()),(await base.iterator()).shuffle(t,e.toString())},this.size)}take(t){const base=this;let e;return e=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,pa(async()=>(await base.iterator()).take(t),e)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function pa(t,e=null){return new class extends da{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function fa(t){if(null===t)return null;const e=t[0];if(Object(ha.a)(e)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof f.r?f.pd(t):f.wd(t)}(t),recurse:!1}}return{value:null,recurse:!0}}da.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");ca.a;ca.a;var ma=n(251);ma.a;function ga(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&f.Jd.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}function ba(t,e,n,r,o,l){const c=o.strideHeight,h=o.strideWidth,d=o.dilationHeight,m=o.dilationWidth,y=o.effectiveFilterHeight,x=o.effectiveFilterWidth,v=o.padInfo.top,w=o.padInfo.left,O="max"===l?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,output=Object(f.T)(o.outShape,n),S=output.values,C=o.outShape[1]*o.outShape[2]*o.outShape[3],k=o.outShape[2]*o.outShape[3],N=o.outShape[3];for(let b=0;b<o.batchSize;++b){const e=b*C,n=b*r[0];for(let f=0;f<o.inChannels;++f)for(let C=0;C<o.outHeight;++C){const I=C*c-v,E=Math.max(0,I),T=Math.min(o.inHeight,y+I),A=e+C*k;for(let e=0;e<o.outWidth;++e){const c=e*h-w,y=Math.max(0,c),v=Math.min(o.inWidth,x+c);let C=O,k=0,I=0;for(let e=E;e<T;e+=d){const o=n+e*r[1];for(let e=y;e<v;e+=m){const n=t[o+e*r[2]+f];"max"===l&&n>C?C=n:"avg"===l&&(k+=n,I++)}if(isNaN(C))break}S[A+e*N+f]="avg"===l?k/I:C}}}return output}function ya(t,e,n,r,o=!1,l=!1){const c=Object(f.T)(r.outShape,"int32"),h=r.strideHeight,d=r.strideWidth,m=r.dilationHeight,y=r.dilationWidth,x=r.effectiveFilterHeight,v=r.effectiveFilterWidth,w=r.padInfo.top,O=r.padInfo.left,S=Object(f.T)(e,n,t);for(let b=0;b<r.batchSize;++b)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*h-w;let f=n;for(;f<0;)f+=m;const C=Math.min(r.inHeight,x+n);for(let h=0;h<r.outWidth;++h){const x=h*d-O;let w=x;for(;w<0;)w+=y;const k=Math.min(r.inWidth,v+x);let N=Number.NEGATIVE_INFINITY,I=-1;for(let e=f;e<C;e+=m){const c=e-n;for(let n=w;n<k;n+=y){const h=n-x,d=S.get(b,e,n,t);d>N&&(N=d,I=o?l?((b*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:c*v+h)}}c.set(I,b,e,h,t)}}return c}const xa=f.Rb.nonMaxSuppressionV3Impl,va=f.Rb.split,wa=f.Rb.tile,Oa=f.Rb.topkImpl,Sa=f.Rb.whereImpl;function Ca(t,e,n,r){if("linear"===n)return t.linear(e);if("relu"===n)return t.relu(e);if("elu"===n)return t.elu(e);if("relu6"===n)return t.relu6(e);if("prelu"===n)return t.prelu(e,r);throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}class ka extends f.h{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new f.a(this,Object(f.ub)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(f.vb)().get("IS_NODE")&&f.L.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n}),r}move(t,e,n,r){this.data.set(t,{values:e,dtype:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensors:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return f.L.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const data=this.readSync(t.dataId);let e=data;if("string"===t.dtype)try{e=data.map(t=>f.Jd.decodeString(t))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return f.T(t.shape,t.dtype,e)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(f.ub)().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensors:e}=this.data.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}}async time(t){const e=f.Jd.now();t();return{kernelMs:f.Jd.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}complex(t,e){const n=this.makeOutput(null,t.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:Object(f.ub)().keep(t.clone()),imag:Object(f.ub)().keep(e.clone())},n}real(input){return this.data.get(input.dataId).complexTensors.real.clone()}imag(input){return this.data.get(input.dataId).complexTensors.imag.clone()}slice(t,e,n){ga(t,"slice");if(f.fd.isSliceContinous(t.shape,e,n)){const r=f.fd.computeFlatOffset(e,t.strides),o=f.Jd.sizeFromShape(n),l=this.readSync(t.dataId);return f.wd(l.subarray(r,r+o),n,t.dtype)}const r=f.T(n,t.dtype),o=this.bufferSync(t);for(let i=0;i<r.size;++i){const t=r.indexToLoc(i).map((t,n)=>t+e[n]);r.values[i]=o.get(...t)}return r.toTensor()}stridedSlice(t,e,n,r){ga(t,"stridedSlice");const o=f.fd.computeOutShape(e,n,r);if(o.some(t=>0===t))return f.wd([],o);const l=f.T(o,t.dtype),c=this.bufferSync(t);for(let i=0;i<l.size;i++){const t=l.indexToLoc(i),n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*r[o]+e[o];l.set(c.get(...n),...t)}return l.toTensor()}diag(t){const e=this.readSync(t.dataId),n=f.T([t.size,t.size],t.dtype),r=n.values;for(let i=0;i<e.length;i++)r[i*t.size+i]=e[i];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let o=0;for(let i=0;i<t.rank;i++)i!==e&&(r[o++]=t.shape[i]);const l=new Array(t.rank).fill(0),c=t.shape.slice();c[e]=1;const h=new Array(n);for(let i=0;i<h.length;i++)l[e]=i,h[i]=this.slice(t,l,c).reshape(r);return h}reverse(t,e){ga(t,"reverse");const n=f.T(t.shape,t.dtype),r=this.bufferSync(t);for(let i=0;i<n.size;i++){const o=n.indexToLoc(i),l=o.slice();e.forEach(e=>l[e]=t.shape[e]-1-l[e]),n.set(r.get(...l),...o)}return n.toTensor()}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>f.Fc(t)),r=t.map(t=>f.Mb(t));return f.Y(this.concat(n,e),this.concat(r,e))}const n=t.map(t=>{const n=f.Jd.sizeFromShape(t.shape.slice(e));return t.as2D(-1,n)}),r=f.L.computeOutShape(n.map(t=>t.shape),1),o=f.T(r,t[0].dtype).values;if(1===n[0].shape[0]){let t=0;n.forEach(e=>{o.set(this.readSync(e.dataId),t),t+=e.size})}else{let t=0;n.forEach(e=>{const n=this.readSync(e.dataId);let l=0;for(let c=0;c<e.shape[0];++c){const h=c*r[1]+t;for(let col=0;col<e.shape[1];++col)o[h+col]=n[l++]}t+=e.shape[1]})}const l=f.L.computeOutShape(t.map(t=>t.shape),e);return f.wd(o,l,t[0].dtype)}neg(t){return ga(t,"neg"),this.multiply(f.Pc(-1),t)}add(a,b){return"complex64"===a.dtype||"complex64"===b.dtype?this.broadcastedBinaryComplexOp(a.cast("complex64"),b.cast("complex64"),(t,e,n,r)=>({real:t+n,imag:e+r})):this.broadcastedBinaryOp(a,b,Object(f.Id)(a.dtype,b.dtype),(t,e)=>t+e)}addN(t){ga(t,"addN");const e=t.map(t=>this.readSync(t.dataId)),n=f.T(t[0].shape,t[0].dtype),r=n.values;for(let i=0;i<t.length;i++){const t=e[i];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=f.Jd.parseAxisParam([e],t.shape),r=Object(f.fc)(t,n),o=f.L.expandShapeToKeepDim(r.shape,n),a=this.subtract(t,r.reshape(o)),b=this.exp(a),l=this.sum(b,n).reshape(o);return f.qb(b,l)}subtract(a,b){return"complex64"===a.dtype||"complex64"===b.dtype?this.broadcastedBinaryComplexOp(a.cast("complex64"),b.cast("complex64"),(t,e,n,r)=>({real:t-n,imag:e-r})):this.broadcastedBinaryOp(a,b,Object(f.Id)(a.dtype,b.dtype),(t,e)=>t-e)}pow(a,b){return ga([a,b],"pow"),this.broadcastedBinaryOp(a,b,a.dtype,(t,e)=>Math.pow(t,e))}batchMatMul(a,b,t,e){ga([a,b],"matMul");const n=t?a.shape[1]:a.shape[2],r=t?a.shape[2]:a.shape[1],o=e?b.shape[1]:b.shape[2],l=a.shape[0],c=this.readSync(a.dataId),h=this.readSync(b.dataId),[d,m,y]=t?[a.strides[0],1,a.strides[1]]:[a.strides[0],a.strides[1],1],[x,v,w]=e?[1,b.strides[1],b.strides[0]]:[b.strides[1],1,b.strides[0]],O=r*o,S=f.T([l,r,o],a.dtype),C=S.values,k=this.blockSize;for(let b=0;b<l;b++)for(let t=0;t<r;t+=k)for(let e=0;e<o;e+=k)for(let l=0;l<n;l+=k){const f=Math.min(t+k,r),S=Math.min(e+k,o),N=Math.min(l+k,n);for(let i=t;i<f;i++)for(let t=e;t<S;t++){let e=0;for(let n=l;n<N;n++)e+=c[b*d+i*m+n*y]*h[n*x+t*v+b*w];C[b*O+(i*o+t)]+=e}}return S.toTensor()}fusedBatchMatMul({a:a,b:b,transposeA:t,transposeB:e,bias:n,activation:r,preluActivationWeights:o}){let l=this.batchMatMul(a,b,t,e);return n&&(l=this.add(l,n)),r&&(l=Ca(this,l,r,o)),l}multiply(a,b){return"complex64"===a.dtype||"complex64"===b.dtype?this.broadcastedBinaryComplexOp(a.cast("complex64"),b.cast("complex64"),(t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})):this.broadcastedBinaryOp(a,b,Object(f.Id)(a.dtype,b.dtype),(t,e)=>t*e)}floorDiv(a,b){ga([a,b],"floorDiv");return this.broadcastedBinaryOp(a,b,"int32",(a,b)=>Math.floor(a/b))}sum(t,e){ga(t,"sum"),f.L.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=Object(f.Id)(t.dtype,"int32"),l=f.Pd(n,o),c=f.Jd.sizeFromShape(r),h=this.readSync(l.dataId),d=this.readSync(t.dataId);for(let i=0;i<h.length;++i){const t=i*c;let e=0;for(let n=0;n<c;++n)e+=d[t+n];h[i]=e}return l}prod(t,e){ga(t,"sum");const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=Object(f.Id)(t.dtype,"int32"),l=f.Pd(n,o),c=f.Jd.sizeFromShape(r),h=this.readSync(l.dataId),d=this.readSync(t.dataId);for(let i=0;i<h.length;++i){const t=i*c;let e=1;for(let n=0;n<c;++n)e*=d[t+n];h[i]=e}return l}unsortedSegmentSum(t,e,n){ga(t,"unsortedSegmentSum");const r=[],o=t.rank-e.rank;for(let i=0;i<o;++i)e=e.expandDims(i+1);for(let i=0;i<n;++i){const n=f.Pc(i,"int32"),o=f.wb(n,e).asType("float32").mul(t).sum(0);r.push(o)}return f.pd(r)}argMin(t,e){ga(t,"argMin");const n=[e];f.L.assertAxesAreInnerMostDims("argMin",n,t.rank);const[r,o]=f.L.computeOutAndReduceShapes(t.shape,n),l=f.Pd(r,"int32"),c=f.Jd.sizeFromShape(o),h=this.readSync(l.dataId),d=this.readSync(t.dataId);for(let i=0;i<h.length;++i){const t=i*c;let e=d[t],n=0;for(let r=0;r<c;++r){const o=d[t+r];o<e&&(e=o,n=r)}h[i]=n}return l}argMax(t,e){ga(t,"argMax");const n=[e];f.L.assertAxesAreInnerMostDims("argMax",n,t.rank);const[r,o]=f.L.computeOutAndReduceShapes(t.shape,n),l=f.Pd(r,"int32"),c=f.Jd.sizeFromShape(o),h=this.readSync(l.dataId),d=this.readSync(t.dataId);for(let i=0;i<h.length;++i){const t=i*c;let e=d[t],n=0;for(let r=0;r<c;++r){const o=d[t+r];o>e&&(e=o,n=r)}h[i]=n}return l}cumsum(t,e,n,r){if(ga(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=`+e);const o=Object(f.Id)(t.dtype,"int32"),l=f.Pd(t.shape,o),c=this.readSync(l.dataId),h=this.readSync(t.dataId),d=t.shape[t.rank-1],m=r?(i,t)=>i+d-t-1:(i,t)=>i+t;for(let i=0;i<h.length;i+=d)for(let t=0;t<d;t++){const e=m(i,t);if(0===t)c[e]=n?0:h[e];else{const r=m(i,t-1);c[e]=n?h[r]+c[r]:h[e]+c[r]}}return l}equal(a,b){return ga([a,b],"equal"),this.broadcastedBinaryOp(a,b,"bool",(t,e)=>t===e?1:0)}notEqual(a,b){return ga([a,b],"notEqual"),this.broadcastedBinaryOp(a,b,"bool",(t,e)=>t!==e?1:0)}less(a,b){return ga([a,b],"less"),this.broadcastedBinaryOp(a,b,"bool",(t,e)=>t<e?1:0)}lessEqual(a,b){return ga([a,b],"lessEqual"),this.broadcastedBinaryOp(a,b,"bool",(t,e)=>t<=e?1:0)}greater(a,b){return ga([a,b],"greater"),this.broadcastedBinaryOp(a,b,"bool",(t,e)=>t>e?1:0)}greaterEqual(a,b){return ga([a,b],"greaterEqual"),this.broadcastedBinaryOp(a,b,"bool",(t,e)=>t>=e?1:0)}logicalNot(t){ga(t,"logicalNot");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let i=0;i<e.length;++i)n[i]=e[i]?0:1;return this.makeOutput(n,t.shape,"bool")}logicalAnd(a,b){return ga([a,b],"logicalAnd"),this.broadcastedBinaryOp(a,b,"bool",(t,e)=>t&&e)}logicalOr(a,b){return ga([a,b],"logicalOr"),this.broadcastedBinaryOp(a,b,"bool",(t,e)=>t||e)}select(t,a,b){ga([t,a,b],"select");const e=this.readSync(t.dataId),n=this.readSync(a.dataId),r=this.readSync(b.dataId),o=f.Pd(a.shape,Object(f.Id)(a.dtype,b.dtype)),l=this.readSync(o.dataId);let c=0;const h=0===t.rank||t.rank>1||1===a.rank?1:f.Jd.sizeFromShape(a.shape.slice(1));for(let i=0;i<e.length;i++)for(let t=0;t<h;t++)1===e[i]?l[c++]=n[i]:l[c++]=r[i];return o}where(t){ga([t],"where");const e=this.readSync(t.dataId);return Sa(t.shape,e)}topk(t,e,n){ga(t,"topk");const r=this.readSync(t.dataId);return Oa(r,t.shape,t.dtype,e,n)}min(t,e){ga(t,"min"),f.L.assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=f.Pd(n,t.dtype),l=f.Jd.sizeFromShape(r),c=this.readSync(o.dataId),h=this.readSync(t.dataId);for(let i=0;i<c.length;++i){const t=i*l;let e=h[t];for(let n=0;n<l;++n){const r=h[t+n];r<e&&(e=r)}c[i]=e}return o}minimum(a,b){return ga([a,b],"minimum"),this.broadcastedBinaryOp(a,b,a.dtype,(t,e)=>Math.min(t,e))}mod(a,b){return ga([a,b],"mod"),this.broadcastedBinaryOp(a,b,a.dtype,(t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})}maximum(a,b){return ga([a,b],"maximum"),this.broadcastedBinaryOp(a,b,a.dtype,(t,e)=>Math.max(t,e))}all(t,e){ga(t,"all"),f.L.assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=f.Pd(n,t.dtype),l=f.Jd.sizeFromShape(r),c=this.readSync(o.dataId),h=this.readSync(t.dataId);for(let i=0;i<c.length;++i){const t=i*l;let e=h[t];for(let n=0;n<l;++n){const r=h[t+n];e=e&&r}c[i]=e}return o}any(t,e){ga(t,"any"),f.L.assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=f.Pd(n,t.dtype),l=f.Jd.sizeFromShape(r),c=this.readSync(o.dataId),h=this.readSync(t.dataId);for(let i=0;i<c.length;++i){const t=i*l;let e=h[t];for(let n=0;n<l;++n){const r=h[t+n];e=e||r}c[i]=e}return o}squaredDifference(a,b){return ga([a,b],"squaredDifference"),this.broadcastedBinaryOp(a,b,a.dtype,(t,e)=>{const n=t-e;return n*n})}ceil(t){ga(t,"ceil");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i)n[i]=Math.ceil(e[i]);return this.makeOutput(n,t.shape,"float32")}floor(t){ga(t,"floor");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i)n[i]=Math.floor(e[i]);return this.makeOutput(n,t.shape,"float32")}sign(t){ga(t,"x");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i)e[i]<0?n[i]=-1:e[i]>0?n[i]=1:n[i]=0;return this.makeOutput(n,t.shape,"float32")}isNaN(t){ga(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let i=0;i<e.length;++i)Number.isNaN(e[i])&&(n[i]=1);return this.makeOutput(n,t.shape,"bool")}isInf(t){ga(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let i=0;i<e.length;++i)Math.abs(e[i])===1/0&&(n[i]=1);return this.makeOutput(n,t.shape,"bool")}isFinite(t){ga(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let i=0;i<e.length;++i)Number.isFinite(e[i])&&(n[i]=1);return this.makeOutput(n,t.shape,"bool")}round(t){ga(t,"round");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i){const base=Math.floor(e[i]);e[i]-base<.5?n[i]=Math.floor(e[i]):e[i]-base>.5?n[i]=Math.ceil(e[i]):n[i]=base%2==0?base:base+1}return this.makeOutput(n,t.shape,"float32")}exp(t){ga(t,"exp");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i)n[i]=Math.exp(e[i]);return this.makeOutput(n,t.shape,"float32")}expm1(t){ga(t,"expm1");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i)n[i]=Math.expm1(e[i]);return this.makeOutput(n,t.shape,"float32")}log(t){ga(t,"log");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i){const t=e[i];n[i]=Math.log(t)}return this.makeOutput(n,t.shape,"float32")}log1p(t){ga(t,"log1p");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i){const t=e[i];n[i]=Math.log1p(t)}return this.makeOutput(n,t.shape,"float32")}sqrt(t){ga(t,"sqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i){const t=e[i];n[i]=Math.sqrt(t)}return this.makeOutput(n,t.shape,"float32")}rsqrt(t){ga(t,"rsqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i){const t=e[i];n[i]=1/Math.sqrt(t)}return this.makeOutput(n,t.shape,"float32")}reciprocal(t){ga(t,"reciprocal");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let i=0;i<e.length;++i)n[i]=1/e[i];return this.makeOutput(n,t.shape,"float32")}linear(t){return t}relu(t){ga(t,"relu");const e=f.Pd(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let i=0;i<r.length;++i)n[i]=Math.max(0,r[i]);return e}relu6(t){ga(t,"relu");const e=f.Pd(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let i=0;i<r.length;++i)n[i]=Math.min(Math.max(0,r[i]),6);return e}prelu(t,a){return ga([t,a],"prelu"),this.broadcastedBinaryOp(t,a,t.dtype,(t,e)=>t<0?e*t:t)}elu(t){ga(t,"elu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i){const t=n[i];e[i]=t>=0?t:Math.exp(t)-1}return this.makeOutput(e,t.shape,"float32")}eluDer(t,e){ga([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),o=this.readSync(t.dataId);for(let i=0;i<r.length;++i){const t=r[i];n[i]=t>=1?o[i]:o[i]*(t+1)}return this.makeOutput(n,e.shape,"float32")}selu(t){ga(t,"selu");const e=f.L.SELU_SCALEALPHA,n=f.L.SELU_SCALE,r=new Float32Array(t.size),o=this.readSync(t.dataId);for(let i=0;i<o.length;++i){const t=o[i];r[i]=t>=0?n*t:e*(Math.exp(t)-1)}return this.makeOutput(r,t.shape,"float32")}clip(t,e,n){ga(t,"clip");const r=new Float32Array(t.size),o=this.readSync(t.dataId);for(let i=0;i<o.length;++i){const t=o[i];r[i]=t>n?n:t<e?e:t}return this.makeOutput(r,t.shape,"float32")}abs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.abs(n[i]);return this.makeOutput(e,t.shape,"float32")}complexAbs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<t.size;++i){const t=n[2*i],r=n[2*i+1];e[i]=Math.hypot(t,r)}return this.makeOutput(e,t.shape,"float32")}int(t){ga(t,"int");const e=new Int32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=n[i];return this.makeOutput(e,t.shape,"int32")}sigmoid(t){ga(t,"sigmoid");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=1/(1+Math.exp(-n[i]));return this.makeOutput(e,t.shape,"float32")}softplus(t){ga(t,"softplus");const e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let i=0;i<r.length;++i){const t=r[i]>-e,o=r[i]<e,l=Math.exp(r[i]);let c;c=o?l:t?r[i]:Math.log(1+l),n[i]=c}return this.makeOutput(n,t.shape,"float32")}sin(t){ga(t,"sin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.sin(n[i]);return this.makeOutput(e,t.shape,"float32")}cos(t){ga(t,"cos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.cos(n[i]);return this.makeOutput(e,t.shape,"float32")}tan(t){ga(t,"tan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.tan(n[i]);return this.makeOutput(e,t.shape,"float32")}asin(t){ga(t,"asin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.asin(n[i]);return this.makeOutput(e,t.shape,"float32")}acos(t){ga(t,"acos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.acos(n[i]);return this.makeOutput(e,t.shape,"float32")}atan(t){ga(t,"atan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.atan(n[i]);return this.makeOutput(e,t.shape,"float32")}atan2(a,b){return ga([a,b],"atan2"),this.broadcastedBinaryOp(a,b,a.dtype,(t,e)=>Math.atan2(t,e))}sinh(t){ga(t,"sinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.sinh(n[i]);return this.makeOutput(e,t.shape,"float32")}cosh(t){ga(t,"cosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.cosh(n[i]);return this.makeOutput(e,t.shape,"float32")}tanh(t){ga(t,"tanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=f.Jd.tanh(n[i]);return this.makeOutput(e,t.shape,"float32")}asinh(t){ga(t,"asinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.asinh(n[i]);return this.makeOutput(e,t.shape,"float32")}acosh(t){ga(t,"acosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.acosh(n[i]);return this.makeOutput(e,t.shape,"float32")}atanh(t){ga(t,"atanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let i=0;i<n.length;++i)e[i]=Math.atanh(n[i]);return this.makeOutput(e,t.shape,"float32")}erf(t){ga(t,"erf");const e=new Float32Array(t.size),n=this.readSync(t.dataId),p=f.L.ERF_P,r=f.L.ERF_A1,o=f.L.ERF_A2,l=f.L.ERF_A3,c=f.L.ERF_A4,h=f.L.ERF_A5;for(let i=0;i<n.length;++i){const t=Math.sign(n[i]),d=Math.abs(n[i]),f=1/(1+p*d);e[i]=t*(1-((((h*f+c)*f+l)*f+o)*f+r)*f*Math.exp(-d*d))}return this.makeOutput(e,t.shape,"float32")}step(t,e=0){ga(t,"step");const n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let i=0;i<r.length;++i){const t=r[i];isNaN(t)?n[i]=NaN:n[i]=t>0?1:e}return this.makeOutput(n,t.shape,"float32")}fusedConv2d({input:input,filter:filter,convInfo:t,bias:e,activation:n,preluActivationWeights:r}){let o=this.conv2d(input,filter,t);return e&&(o=this.add(o,e)),n&&(o=Ca(this,o,n,r)),o}conv2d(t,filter,e){ga([t,filter],"conv2d");const n=e.filterHeight,r=e.filterWidth,o=e.dilationHeight,l=e.dilationWidth,c=e.padInfo.left,h=e.padInfo.top,d="channelsLast"===e.dataFormat,m=f.T(e.outShape,t.dtype),y=t.strides[0],x=d?t.strides[1]:t.strides[2],v=d?t.strides[2]:1,w=d?1:t.strides[1],O=m.strides[0],S=d?m.strides[1]:m.strides[2],C=d?m.strides[2]:1,k=d?1:m.strides[1],N=this.readSync(t.dataId),I=this.readSync(filter.dataId),E=m.values;for(let b=0;b<e.batchSize;++b){const t=b*y,d=b*O;for(let f=0;f<e.outHeight;++f){const m=d+f*S,y=f*e.strideHeight-h;for(let h=0;h<n;h++){const n=y+h*o;if(n<0||n>=e.inHeight)continue;const d=h*filter.strides[0],f=t+n*x;for(let t=0;t<e.outWidth;++t){const n=m+t*C,o=t*e.strideWidth-c;for(let t=0;t<r;t++){const r=o+t*l;if(r<0||r>=e.inWidth)continue;const c=f+r*v;let h=d+t*filter.strides[1];for(let t=0;t<e.inChannels;++t){const r=N[c+t*w];for(let t=0;t<e.outChannels;++t)E[n+t*k]+=r*I[h+t];h+=e.outChannels}}}}}}return m.toTensor()}conv3d(t,filter,e){const n=e.filterDepth,r=e.filterHeight,o=e.filterWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.padInfo.front,m=e.padInfo.left,y=e.padInfo.top,x=f.T(e.outShape,t.dtype),v=this.readSync(t.dataId),w=this.readSync(filter.dataId),O=x.values;for(let b=0;b<e.batchSize;++b){const f=b*t.strides[0],S=b*x.strides[0];for(let C=0;C<e.outDepth;++C){const k=S+C*x.strides[1],N=C*e.strideDepth-d;for(let d=0;d<n;d++){const n=N+d*l;if(n<0||n>=e.inDepth)continue;const S=d*filter.strides[0],C=f+n*t.strides[1];for(let n=0;n<e.outHeight;++n){const l=k+n*x.strides[2],d=n*e.strideHeight-y;for(let n=0;n<r;n++){const r=d+n*c;if(r<0||r>=e.inHeight)continue;const f=S+n*filter.strides[1],y=C+r*t.strides[2];for(let t=0;t<e.outWidth;++t){const n=l+t*e.outChannels,r=t*e.strideWidth-m;for(let t=0;t<o;t++){const o=r+t*h;if(o<0||o>=e.inWidth)continue;const l=f+t*filter.strides[2],c=y+o*e.inChannels;let d=l;for(let t=0;t<e.inChannels;++t){const r=v[c+t];for(let t=0;t<e.outChannels;++t)O[n+t]+=r*w[d+t];d+=e.outChannels}}}}}}}}return x.toTensor()}conv2dDerInput(t,filter,e){ga([t,filter],"conv2dDerInput");const n=f.T(e.inShape,"float32"),r=n.values,o=this.readSync(t.dataId),l=this.readSync(filter.dataId),[c,h,d]=filter.strides,{batchSize:m,filterHeight:y,filterWidth:x,inChannels:v,inHeight:w,inWidth:O,outChannels:S,outHeight:C,outWidth:k,strideHeight:N,strideWidth:I,dataFormat:E}=e,T=y-1-e.padInfo.top,A=x-1-e.padInfo.left,R="channelsLast"===E,$=n.strides[0],F=R?n.strides[1]:n.strides[2],j=R?n.strides[2]:1,D=R?1:n.strides[1],_=t.strides[0],z=R?t.strides[1]:t.strides[2],M=R?t.strides[2]:1,L=R?1:t.strides[1];for(let b=0;b<m;++b)for(let t=0;t<v;++t)for(let e=0;e<w;++e){const n=e-T,f=Math.max(0,Math.ceil(n/N)),m=Math.min(C,(y+n)/N);for(let v=0;v<O;++v){const w=v-A,O=Math.max(0,Math.ceil(w/I)),C=Math.min(k,(x+w)/I);let E=0;for(let e=f;e<m;++e){const r=e*N-n;for(let n=O;n<C;++n){const f=_*b+z*e+M*n,m=c*(y-1-r)+h*(x-1-(n*I-w))+d*t;for(let t=0;t<S;++t){E+=o[f+L*t]*l[m+t]}}}r[$*b+F*e+j*v+D*t]=E}}return n.toTensor()}conv3dDerInput(t,filter,e){const n=f.T(e.inShape,"float32"),r=n.values,[o,l,c,h]=n.strides,d=this.readSync(t.dataId),[m,y,x,v]=t.strides,w=this.readSync(filter.dataId),[O,S,C,k]=filter.strides,{batchSize:N,filterDepth:I,filterHeight:E,filterWidth:T,inChannels:A,inDepth:R,inHeight:$,inWidth:F,outChannels:j,outDepth:D,outHeight:_,outWidth:z,strideDepth:M,strideHeight:L,strideWidth:B}=e,P=I-1-e.padInfo.front,W=E-1-e.padInfo.top,U=T-1-e.padInfo.left;for(let b=0;b<N;++b)for(let t=0;t<A;++t)for(let e=0;e<R;++e){const n=e-P,f=Math.max(0,Math.ceil(n/M)),N=Math.min(D,(I+n)/M);for(let A=0;A<$;++A){const R=A-W,$=Math.max(0,Math.ceil(R/L)),D=Math.min(_,(E+R)/L);for(let _=0;_<F;++_){const F=_-U,P=Math.max(0,Math.ceil(F/B)),W=Math.min(z,(T+F)/B);let V=0;for(let e=f;e<N;++e){const r=e*M-n;for(let n=$;n<D;++n){const o=n*L-R;for(let l=P;l<W;++l){const c=m*b+y*e+x*n+v*l,h=O*(I-1-r)+S*(E-1-o)+C*(T-1-(l*B-F))+k*t;for(let t=0;t<j;++t){V+=d[c+t]*w[h+t]}}}}r[o*b+l*e+c*A+h*_+t]=V}}}return n.toTensor()}conv2dDerFilter(t,e,n){ga([t,e],"conv2dDerFilter");const r=n.strideHeight,o=n.strideWidth,l=n.filterHeight,c=n.filterWidth,h="channelsLast"===n.dataFormat,d=f.T(n.filterShape,"float32"),m=n.padInfo.left,y=n.padInfo.top,x=this.bufferSync(t),v=this.bufferSync(e);for(let t=0;t<l;++t){const e=Math.max(0,Math.ceil((y-t)/r)),l=Math.min(n.outHeight,(n.inHeight+y-t)/r);for(let f=0;f<c;++f){const c=Math.max(0,Math.ceil((m-f)/o)),w=Math.min(n.outWidth,(n.inWidth+m-f)/o);for(let O=0;O<n.inChannels;++O)for(let S=0;S<n.outChannels;++S){let C=0;for(let b=0;b<n.batchSize;++b)for(let n=e;n<l;++n){const e=t+n*r-y;for(let t=c;t<w;++t){const r=f+t*o-m;C+=h?x.get(b,e,r,O)*v.get(b,n,t,S):x.get(b,O,e,r)*v.get(b,S,n,t)}}d.set(C,t,f,O,S)}}}return d.toTensor()}conv3dDerFilter(t,e,n){const r=n.strideDepth,o=n.strideHeight,l=n.strideWidth,c=n.filterDepth,h=n.filterHeight,d=n.filterWidth,m=f.T(n.filterShape,"float32"),y=m.values,[x,v,w,O]=m.strides,S=this.readSync(e.dataId),[C,k,N,I]=e.strides,E=this.readSync(t.dataId),[T,A,R,$]=t.strides,F=n.padInfo.front,j=n.padInfo.left,D=n.padInfo.top;for(let t=0;t<c;++t){const e=Math.max(0,Math.ceil((F-t)/r)),c=Math.min(n.outDepth,(n.inDepth+F-t)/r),f=t*x;for(let m=0;m<h;++m){const h=Math.max(0,Math.ceil((D-m)/o)),x=Math.min(n.outHeight,(n.inHeight+D-m)/o),_=m*v+f;for(let f=0;f<d;++f){const d=Math.max(0,Math.ceil((j-f)/l)),v=Math.min(n.outWidth,(n.inWidth+j-f)/l),z=f*w+_;for(let w=0;w<n.inChannels;++w){const _=w*O+z;for(let O=0;O<n.outChannels;++O){let z=0;for(let b=0;b<n.batchSize;++b){const n=b*T,y=b*C;for(let C=e;C<c;++C){const e=(t+C*r-F)*A+n,c=C*k+y;for(let t=h;t<x;++t){const n=(m+t*o-D)*R+e,r=t*N+c;for(let t=d;t<v;++t){const e=t*I+r;z+=E[(f+t*l-j)*$+n+w]*S[e+O]}}}}y[_+O]=z}}}}}return m.toTensor()}fusedDepthwiseConv2D({input:input,filter:filter,convInfo:t,bias:e,activation:n,preluActivationWeights:r}){let o=this.depthwiseConv2D(input,filter,t);return e&&(o=this.add(o,e)),n&&(o=Ca(this,o,n,r)),o}depthwiseConv2D(t,filter,e){ga([t,filter],"depthwiseConv2D");const n=e.filterHeight,r=e.filterWidth,o=e.dilationHeight,l=e.dilationWidth,c=e.padInfo.left,h=e.padInfo.top,d=e.outChannels/e.inChannels,m=f.T(e.outShape,t.dtype),y=this.readSync(t.dataId),x=this.readSync(filter.dataId),v=m.values;for(let b=0;b<e.batchSize;++b){const f=b*t.strides[0],w=b*m.strides[0];for(let O=0;O<e.outHeight;++O){const S=w+O*m.strides[1],C=O*e.strideHeight-c;for(let c=0;c<n;++c){const n=C+c*o;if(n<0||n>=e.inHeight)continue;const w=c*filter.strides[0],O=f+n*t.strides[1];for(let t=0;t<e.outWidth;++t){const n=S+t*m.strides[2],o=t*e.strideWidth-h;for(let t=0;t<r;++t){const r=o+t*l;if(r<0||r>=e.inWidth)continue;const c=w+t*filter.strides[1],h=O+r*e.inChannels;let f=n,m=c;for(let t=0;t<e.inChannels;++t){const e=y[h+t];for(let q=0;q<d;++q)v[f+q]+=e*x[m+q];f+=d,m+=d}}}}}}return m.toTensor()}depthwiseConv2DDerInput(t,filter,e){ga([t,filter],"depthwiseConv2DDerInput");const n=f.T(e.inShape,"float32"),r=n.values,[o,l,c]=n.strides,h=this.readSync(t.dataId),[d,m,y]=t.strides,x=this.readSync(filter.dataId),[v,w,O]=filter.strides,{batchSize:S,filterHeight:C,filterWidth:k,inChannels:N,inHeight:I,inWidth:E,outChannels:T,outHeight:A,outWidth:R,strideHeight:$,strideWidth:F}=e,j=C-1-e.padInfo.top,D=k-1-e.padInfo.left,_=T/N;for(let b=0;b<S;++b)for(let t=0;t<N;++t)for(let e=0;e<I;++e){const n=e-j,f=Math.max(0,Math.ceil(n/$)),S=Math.min(A,(C+n)/$);for(let N=0;N<E;++N){const I=N-D,E=Math.max(0,Math.ceil(I/F)),T=Math.min(R,(k+I)/F);let A=0;for(let e=f;e<S;++e){const r=e*$-n;for(let n=E;n<T;++n){const o=d*b+m*e+y*n,l=v*(C-1-r)+w*(k-1-(n*F-I))+O*t;for(let e=0;e<_;++e){A+=h[o+(t*_+e)]*x[l+e]}}}r[o*b+l*e+c*N+t]=A}}return n.toTensor()}depthwiseConv2DDerFilter(t,e,n){ga([t,e],"depthwiseConv2DDerFilter");const r=n.strideHeight,o=n.strideWidth,l=n.filterHeight,c=n.filterWidth,h=f.T(n.filterShape,"float32"),d=n.padInfo.left,m=n.padInfo.top,y=n.outChannels/n.inChannels,x=this.bufferSync(t),v=this.bufferSync(e);for(let t=0;t<l;++t){const e=Math.max(0,Math.ceil((m-t)/r)),l=Math.min(n.outHeight,(n.inHeight+m-t)/r);for(let f=0;f<c;++f){const c=Math.max(0,Math.ceil((d-f)/o)),w=Math.min(n.outWidth,(n.inWidth+d-f)/o);for(let O=0;O<n.outChannels;++O){const S=Math.trunc(O/y),C=O%y;let k=0;for(let b=0;b<n.batchSize;++b)for(let n=e;n<l;++n){const e=t+n*r-m;for(let t=c;t<w;++t){const r=f+t*o-d;k+=x.get(b,e,r,S)*v.get(b,n,t,O)}}h.set(k,t,f,S,C)}}}return h.toTensor()}tile(t,e){return ga(t,"tile"),wa(this.bufferSync(t),e)}pad(t,e,n){ga(t,"pad");const r=e.map((p,i)=>p[0]+t.shape[i]+p[1]),o=e.map(p=>p[0]),l=this.bufferSync(t),c=f.T(r,t.dtype);0!==n&&c.values.fill(n);for(let i=0;i<t.size;i++){const t=l.indexToLoc(i),e=t.map((t,i)=>t+o[i]);c.set(l.get(...t),...e)}return c.toTensor()}gather(t,e,n){ga([t,e],"gather");const r=t.shape.slice(),o=this.readSync(e.dataId);r[n]=o.length;const l=f.T(r,t.dtype),c=this.bufferSync(t);for(let i=0;i<l.size;++i){const t=l.indexToLoc(i),e=t.slice();e[n]=o[t[n]];const r=c.locToIndex(e);l.values[i]=c.values[r]}return l.toTensor()}batchToSpaceND(t,e,n){ga([t],"batchToSpaceND");const r=e.reduce((a,b)=>a*b),o=f.L.getReshaped(t.shape,e,r),l=f.L.getPermuted(o.length,e.length),c=f.L.getReshapedPermuted(t.shape,e,r),h=f.L.getSliceBeginCoords(n,e.length),d=f.L.getSliceSize(c,n,e.length);return f.Fd(t.reshape(o),l).reshape(c).slice(h,d)}spaceToBatchND(t,e,n){ga([t],"spaceToBatchND");const r=e.reduce((a,b)=>a*b),o=[[0,0]];o.push(...n);for(let i=1+e.length;i<t.shape.length;++i)o.push([0,0]);const l=t.pad(o),c=f.L.getReshaped(l.shape,e,r,!1),h=f.L.getPermuted(c.length,e.length,!1),d=f.L.getReshapedPermuted(l.shape,e,r,!1),m=f.Fd(l.reshape(c),h);return Object(f.Kc)(m,d)}maxPool(t,e){ga(t,"maxPool");return ba(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"max").toTensor()}maxPoolBackprop(t,e,n,r){ga([e,n],"maxPoolBackprop");const o=this.readSync(e.dataId),l=Object(f.T)(r.outShape,e.dtype,ya(o,e.shape,e.dtype,r).values),c=r.strideHeight,h=r.strideWidth,d=r.dilationHeight,m=r.dilationWidth,y=r.effectiveFilterHeight,x=r.effectiveFilterWidth,v=x-1-r.padInfo.left,w=y-1-r.padInfo.top,O=f.T(e.shape,"float32"),S=this.bufferSync(t);for(let b=0;b<r.batchSize;++b)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.inHeight;++e)for(let n=0;n<r.inWidth;++n){const o=e-w,f=n-v;let C=0;for(let e=0;e<y;e+=d){const n=(o+e)/c;if(!(n<0||n>=r.outHeight||Math.floor(n)!==n))for(let o=0;o<x;o+=m){const c=(f+o)/h;if(c<0||c>=r.outWidth||Math.floor(c)!==c)continue;const mask=y*x-1-l.get(b,n,c,t)===e*x+o?1:0;if(0===mask)continue;C+=S.get(b,n,c,t)*mask}}O.set(C,b,e,n,t)}return O.toTensor()}avgPoolBackprop(t,e,n){ga([t,e],"avgPoolBackprop");const r=n.strideHeight,o=n.strideWidth,l=n.filterHeight,c=n.filterWidth,h=n.dilationHeight,d=n.dilationWidth,m=n.effectiveFilterHeight,y=n.effectiveFilterWidth,x=y-1-n.padInfo.left,v=m-1-n.padInfo.top,w=f.T(e.shape,"float32"),O=1/(l*c),S=this.bufferSync(t);for(let b=0;b<n.batchSize;++b)for(let t=0;t<n.inChannels;++t)for(let e=0;e<n.inHeight;++e)for(let l=0;l<n.inWidth;++l){const c=e-v,f=l-x;let C=0;for(let e=0;e<m;e+=h){const l=(c+e)/r;if(!(l<0||l>=n.outHeight||Math.floor(l)!==l))for(let e=0;e<y;e+=d){const r=(f+e)/o;if(r<0||r>=n.outWidth||Math.floor(r)!==r)continue;C+=S.get(b,l,r,t)}}w.set(C*O,b,e,l,t)}return w.toTensor()}pool3d(t,e,n){ga(t,"pool3d");const r=e.strideDepth,o=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,m=e.effectiveFilterDepth,y=e.effectiveFilterHeight,x=e.effectiveFilterWidth,v=e.padInfo.front,w=e.padInfo.top,O=e.padInfo.left,S="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=this.readSync(t.dataId),output=f.T(e.outShape,t.dtype),k=output.values,N=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],I=e.outShape[2]*e.outShape[3]*e.outShape[4],E=e.outShape[3]*e.outShape[4],T=e.outShape[4];for(let f=0;f<e.batchSize;++f){const A=f*N,R=f*t.strides[0];for(let f=0;f<e.inChannels;++f)for(let N=0;N<e.outDepth;++N){const $=N*r-v;let F=$;for(;F<0;)F+=c;const j=Math.min(e.inDepth,m+$),D=A+N*I;for(let r=0;r<e.outHeight;++r){const m=r*o-w;let v=m;for(;v<0;)v+=h;const N=Math.min(e.inHeight,y+m),I=D+r*E;for(let r=0;r<e.outWidth;++r){const o=r*l-O;let m=o;for(;m<0;)m+=d;const y=Math.min(e.inWidth,x+o),w=I+r*T;let E=S,A=0,$=0;for(let e=F;e<j;e+=c){const r=R+e*t.strides[1];for(let e=v;e<N;e+=h){const o=r+e*t.strides[2];for(let e=m;e<y;e+=d){const r=C[o+e*t.strides[3]+f];if("max"===n&&r>E?E=r:"avg"===n&&(A+=r,$++),isNaN(E))break}if(isNaN(E))break}if(isNaN(E))break}k[w+f]="avg"===n?A/$:E}}}}return output.toTensor()}avgPool3d(t,e){return ga(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){ga([t,e],"avgPool3dBackprop");const r=n.strideDepth,o=n.strideHeight,l=n.strideWidth,c=n.filterDepth,h=n.filterHeight,d=n.filterWidth,m=n.dilationDepth,y=n.dilationHeight,x=n.dilationWidth,v=n.effectiveFilterDepth,w=n.effectiveFilterHeight,O=n.effectiveFilterWidth,S=v-1-n.padInfo.front,C=O-1-n.padInfo.left,k=w-1-n.padInfo.top,N=f.T(e.shape,"float32"),I=1/(c*h*d),E=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let c=0;c<n.inDepth;++c)for(let h=0;h<n.inHeight;++h)for(let d=0;d<n.inWidth;++d){const f=c-S,T=h-k,A=d-C;let R=0;for(let c=0;c<v;c+=m){const h=(f+c)/r;if(!(h<0||h>=n.outDepth||Math.floor(h)!==h))for(let r=0;r<w;r+=y){const c=(T+r)/o;if(!(c<0||c>=n.outHeight||Math.floor(c)!==c))for(let r=0;r<O;r+=x){const o=(A+r)/l;if(o<0||o>=n.outWidth||Math.floor(o)!==o)continue;R+=E.get(t,h,c,o,e)}}}N.set(R*I,t,c,h,d,e)}return N.toTensor()}maxPool3d(t,e){return ga(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=f.T(e.outShape,"int32"),r=e.strideDepth,o=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,m=e.effectiveFilterDepth,y=e.effectiveFilterHeight,x=e.effectiveFilterWidth,v=e.padInfo.front,w=e.padInfo.top,O=e.padInfo.left,S=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let f=0;f<e.inChannels;++f)for(let C=0;C<e.outDepth;++C){const k=C*r-v;let N=k;for(;N<0;)N+=c;const I=Math.min(e.inDepth,m+k);for(let r=0;r<e.outHeight;++r){const m=r*o-w;let v=m;for(;v<0;)v+=h;const E=Math.min(e.inHeight,y+m);for(let o=0;o<e.outWidth;++o){const w=o*l-O;let T=w;for(;T<0;)T+=d;const A=Math.min(e.inWidth,x+w);let R=Number.NEGATIVE_INFINITY,$=-1;for(let e=N;e<I;e+=c){const n=e-k;for(let r=v;r<E;r+=h){const o=r-m;for(let l=T;l<A;l+=d){const c=l-w,h=S.get(t,e,r,l,f);h>=R&&(R=h,$=n*y*x+o*y+c)}}}n.set($,t,C,r,o,f)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){ga([e,n],"maxPool3dBackprop");const o=this.maxPool3dPositions(e,r),l=r.strideDepth,c=r.strideHeight,h=r.strideWidth,d=r.dilationDepth,m=r.dilationHeight,y=r.dilationWidth,x=r.effectiveFilterDepth,v=r.effectiveFilterHeight,w=r.effectiveFilterWidth,O=x-1-r.padInfo.front,S=w-1-r.padInfo.left,C=v-1-r.padInfo.top,k=f.T(e.shape,"float32"),N=this.bufferSync(o),I=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let o=0;o<r.inHeight;++o)for(let f=0;f<r.inWidth;++f){const E=n-O,T=o-C,A=f-S;let R=0;for(let n=0;n<x;n+=d){const o=(E+n)/l;if(!(o<0||o>=r.outDepth||Math.floor(o)!==o))for(let l=0;l<v;l+=m){const d=(T+l)/c;if(!(d<0||d>=r.outHeight||Math.floor(d)!==d))for(let c=0;c<w;c+=y){const f=(A+c)/h;if(f<0||f>=r.outWidth||Math.floor(f)!==f)continue;const mask=x*v*w-1-N.get(t,o,d,f,e)===n*v*w+l*w+c?1:0;if(0===mask)continue;R+=I.get(t,o,d,f,e)*mask}}}k.set(R,t,n,o,f,e)}return k.toTensor()}cast(t,e){return f.L.castTensor(t,e,this)}reshape(t,e){return f.L.reshapeTensor(t,e)}avgPool(t,e){ga(t,"avgPool"),ga(t,"maxPool");return ba(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"avg").toTensor().toFloat()}resizeBilinear(t,e,n,r){ga(t,"resizeBilinear");const[o,l,c,h]=t.shape,d=this.readSync(t.dataId),m=new Float32Array(f.Jd.sizeFromShape([o,e,n,h])),y=[r&&e>1?l-1:l,r&&n>1?c-1:c],x=[r&&e>1?e-1:e,r&&n>1?n-1:n];let v=0;const w=y[0]/x[0],O=y[1]/x[1];for(let b=0;b<o;b++)for(let r=0;r<e;r++){const e=w*r,o=Math.floor(e),f=e-o,y=Math.min(l-1,Math.ceil(e)),x=b*t.strides[0]+o*t.strides[1],S=b*t.strides[0]+y*t.strides[1];for(let e=0;e<n;e++){const n=O*e,r=Math.floor(n),o=n-r,l=Math.min(c-1,Math.ceil(n)),y=x+r*t.strides[2],w=S+r*t.strides[2],C=x+l*t.strides[2],k=S+l*t.strides[2];for(let t=0;t<h;t++){const e=d[y+t],n=d[w+t],r=e+(d[C+t]-e)*o,l=r+(n+(d[k+t]-n)*o-r)*f;m[v++]=l}}}return f.wd(m,[o,e,n,h])}resizeBilinearBackprop(t,e,n){ga([t,e],"resizeBilinearBackprop");const[r,o,l,c]=e.shape,[,h,d]=t.shape,output=new Float32Array(r*o*l*c),m=[n&&h>1?o-1:o,n&&d>1?l-1:l],y=[n&&h>1?h-1:h,n&&d>1?d-1:d],x=m[0]/y[0],v=m[1]/y[1],w=this.readSync(t.dataId);let O=0;for(let b=0;b<r;b++){const t=b*e.strides[0];for(let n=0;n<h;n++){const r=n*x,h=Math.floor(r),f=Math.min(Math.ceil(r),o-1),m=t+h*e.strides[1],y=t+f*e.strides[1],S=r-h,C=1-S;for(let t=0;t<d;t++){const n=t*v,r=Math.floor(n),o=Math.min(Math.ceil(n),l-1),h=n-r,d=1-h,f=m+r*e.strides[2],x=m+o*e.strides[2],k=y+r*e.strides[2],N=y+o*e.strides[2],I=C*d,E=C*h,T=S*d,A=S*h;for(let t=0;t<c;t++){const e=w[O++];output[f+t]+=e*I,output[x+t]+=e*E,output[k+t]+=e*T,output[N+t]+=e*A}}}}return f.zd(output,[r,l,o,c],e.dtype)}resizeNearestNeighbor(t,e,n,r){ga(t,"resizeNearestNeighbor");const[o,l,c,h]=t.shape,d=this.readSync(t.dataId),output=new Float32Array(o*e*n*h),m=[r&&e>1?l-1:l,r&&n>1?c-1:c],y=[r&&e>1?e-1:e,r&&n>1?n-1:n],x=m[0]/y[0],v=m[1]/y[1];let w=0;for(let b=0;b<o;b++){const o=b*t.strides[0];for(let f=0;f<e;f++){const e=x*f,m=o+Math.min(l-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=v*e,o=m+Math.min(c-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<h;t++){const e=d[o+t];output[w++]=e}}}}return f.wd(output,[o,e,n,h],t.dtype)}resizeNearestNeighborBackprop(t,e,n){ga([t,e],"resizeNearestNeighborBackprop");const[r,o,l,c]=e.shape,[,h,d]=t.shape,output=new Float32Array(r*o*l*c),m=this.readSync(t.dataId),y=[n&&h>1?o-1:o,n&&d>1?l-1:l],x=[n&&h>1?h-1:h,n&&d>1?d-1:d],v=y[0]/x[0],w=y[1]/x[1],O=1/v,S=1/w,C=2*Math.ceil(O)+2,k=2*Math.ceil(S)+2;for(let b=0;b<r;b++){const r=b*e.strides[0];for(let f=0;f<o;f++){const y=r+f*e.strides[1],x=Math.floor(f*O),N=Math.floor(x-C/2);for(let x=0;x<l;x++){const O=y+x*e.strides[2],I=Math.floor(x*S),E=Math.floor(I-k/2);for(let e=0;e<c;e++){let c=0;for(let y=0;y<C;y++){const O=y+N;if(O<0||O>=h)continue;const S=r+O*t.strides[1],C=O*v;if(f===Math.min(o-1,n?Math.round(C):Math.floor(C)))for(let r=0;r<k;r++){const o=r+E;if(o<0||o>=d)continue;const h=S+o*t.strides[2],f=o*w;x===Math.min(l-1,n?Math.round(f):Math.floor(f))&&(c+=m[h+e])}}output[O+e]=c}}}}return f.zd(output,e.shape,e.dtype)}batchNorm(t,e,n,r,o,l){ga([t,e,n,o,r],"batchNorm");const c=this.readSync(t.dataId),h=this.readSync(e.dataId),d=this.readSync(n.dataId),m=o?this.readSync(o.dataId):new Float32Array([1]),y=r?this.readSync(r.dataId):new Float32Array([0]),x=new Float32Array(c.length),v=y.length,w=m.length,O=d.length,S=h.length;let C=0,k=0,N=0,I=0;for(let i=0;i<c.length;++i)x[i]=y[C++]+(c[i]-h[k++])*m[N++]/Math.sqrt(d[I++]+l),C>=v&&(C=0),k>=S&&(k=0),N>=w&&(N=0),I>=O&&(I=0);return f.zd(x,t.shape)}localResponseNormalization4D(t,e,n,r,o){ga(t,"localResponseNormalization4D");const l=t.shape[3],c=l-1,h=this.readSync(t.dataId),d=t.size,m=new Float32Array(d);function y(t){const n=t%l;let r=t-n+Math.max(0,n-e);const o=t-n+Math.min(n+e,c);let d=0;for(;r<=o;r++){const t=h[r];d+=t*t}return d}for(let t=0;t<d;t++){const e=y(t),l=h[t]*Math.pow(n+r*e,-o);m[t]=l}return f.zd(m,t.shape)}LRNGrad(t,e,n,r,o,l,c){ga(t,"LRNGrad");const h=t.shape[3],d=this.readSync(t.dataId),m=this.readSync(e.dataId),y=this.readSync(n.dataId),x=new Float32Array(t.size),v=t.size;for(let t=0;t<v;t++){const e=t%h,n=t-e+Math.max(0,e-r),f=t-e+Math.min(h,e+r+1);let v=0;for(let t=n;t<f;t++)v+=Math.pow(m[t],2);v=l*v+o;for(let e=n;e<f;e++){let n=-2*l*c*m[e]*y[t]/v;t===e&&(n+=Math.pow(v,-c)),n*=d[t],x[e]+=n}}return f.zd(x,t.shape)}multinomial(t,e,n,r){ga(t,"multinomial");const o=e?t:f.gd(t),l=o.shape[0],c=o.shape[1],h=f.Pd([l,n],"int32"),d=this.readSync(h.dataId),m=this.readSync(o.dataId);for(let b=0;b<l;++b){const t=b*c,e=new Float32Array(c-1);e[0]=m[t];for(let n=1;n<e.length;++n)e[n]=e[n-1]+m[t+n];const o=la.alea(r.toString()),l=b*n;for(let t=0;t<n;++t){const n=o();d[l+t]=e.length;for(let r=0;r<e.length;r++)if(n<e[r]){d[l+t]=r;break}}}return h}oneHot(t,e,n,r){ga(t,"oneHot");const o=new Float32Array(t.size*e);o.fill(r);const l=this.readSync(t.dataId);for(let r=0;r<t.size;++r)l[r]>=0&&l[r]<e&&(o[r*e+l[r]]=n);return f.yd(o,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,o){ga(t,"nonMaxSuppression");const l=this.readSync(t.dataId),c=this.readSync(e.dataId);return xa(l,c,n,r,o)}fft(t){return this.fftBatch(t,!1)}ifft(t){return this.fftBatch(t,!0)}fftBatch(t,e){const n=t.shape[0],r=t.shape[1],o=f.T(t.shape,"float32"),l=f.T(t.shape,"float32"),c=f.Fc(t).as2D(n,r),h=f.Mb(t).as2D(n,r);for(let b=0;b<n;b++){const t=c.slice([b,0],[1,r]),i=h.slice([b,0],[1,r]),input=f.Y(t,i),n=this.readSync(this.fftImpl(input,e).dataId);for(let t=0;t<r;t++){const e=f.L.getComplexWithIndex(n,t);o.values[b*r+t]=e.real,l.values[b*r+t]=e.imag}}return f.Y(o.toTensor(),l.toTensor()).as2D(n,r)}fftImpl(t,e){const n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){let o=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(o=f.Y(f.Fc(o).div(f.Pc(r)),f.Mb(o).div(f.Pc(r)))),o}{const data=this.readSync(t.dataId),n=this.fourierTransformByMatmul(data,r,e),output=f.L.splitRealAndImagArrays(n);return f.Y(output.real,output.imag).as2D(t.shape[0],t.shape[1])}}isExponentOf2(t){return 0==(t&t-1)}fftRadix2(input,t,e){if(1===t)return input;const data=this.readSync(input.dataId),n=t/2,r=f.L.complexWithEvenIndex(data);let o=f.Y(r.real,r.imag).as1D();const l=f.L.complexWithOddIndex(data);let c=f.Y(l.real,l.imag).as1D();o=this.fftRadix2(o,n,e),c=this.fftRadix2(c,n,e);const h=f.L.exponents(t,e),d=f.Y(h.real,h.imag).mul(c),m=o.add(d),y=o.sub(d),x=f.Fc(m).concat(f.Fc(y)),v=f.Mb(m).concat(f.Mb(y));return f.Y(x,v).as1D()}fourierTransformByMatmul(data,t,e){const n=new Float32Array(2*t);for(let r=0;r<t;r++){let o=0,l=0;for(let n=0;n<t;n++){const c=f.L.exponent(r*n,t,e),h=f.L.getComplexWithIndex(data,n);o+=h.real*c.real-h.imag*c.imag,l+=h.real*c.imag+h.imag*c.real}e&&(o/=t,l/=t),f.L.assignToTypedArray(n,o,l,r)}return n}depthToSpace(t,e,n){f.Jd.assert("NHWC"===n,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n),f.Jd.assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],o=t.shape[1],l=t.shape[2],c=t.shape[3],h=o*e,d=l*e,m=c/(e*e),y=this.readSync(t.dataId),x=new Float32Array(r*h*d*m);let v=0;for(let b=0;b<r;++b)for(let t=0;t<h;++t){const n=Math.floor(t/e),r=t%e;for(let t=0;t<d;++t){const h=Math.floor(t/e),d=(r*e+t%e)*m;for(let t=0;t<m;++t){const e=t+d+c*(h+l*(n+o*b));x[v++]=y[e]}}}return f.zd(x,[r,h,d,m])}broadcastedBinaryOp(a,b,t,e){const n=f.L.assertAndGetBroadcastShape(a.shape,b.shape),r=f.T(n,t),o=this.readSync(a.dataId),l=this.readSync(b.dataId),c=f.L.getBroadcastDims(a.shape,n),h=f.L.getBroadcastDims(b.shape,n),d=r.values;if(c.length+h.length===0)for(let i=0;i<d.length;++i)d[i]=e(o[i%o.length],l[i%l.length]);else{const t=this.bufferSync(a),n=this.bufferSync(b);for(let i=0;i<d.length;++i){const f=r.indexToLoc(i),m=f.slice(-a.rank);c.forEach(t=>m[t]=0);const y=t.locToIndex(m),x=f.slice(-b.rank);h.forEach(t=>x[t]=0);const v=n.locToIndex(x);d[i]=e(o[y],l[v])}}return r.toTensor()}broadcastedBinaryComplexOp(a,b,t){const e=f.L.assertAndGetBroadcastShape(a.shape,b.shape),n=f.T(e,"float32"),r=f.T(e,"float32"),o=this.readSync(a.dataId),l=this.readSync(b.dataId),c=f.L.getBroadcastDims(a.shape,e),h=f.L.getBroadcastDims(b.shape,e),d=n.values,m=r.values;if(c.length+h.length===0)for(let i=0;i<d.length;i++){const e=i%o.length,n=i%l.length,r=t(o[2*e],o[2*e+1],l[2*n],l[2*n+1]);d[i]=r.real,m[i]=r.imag}else{const e=this.bufferSync(this.data.get(a.dataId).complexTensors.real),r=this.bufferSync(this.data.get(b.dataId).complexTensors.real);for(let i=0;i<d.length;i++){const f=n.indexToLoc(i),y=f.slice(-a.rank);c.forEach(t=>y[t]=0);const x=e.locToIndex(y),v=f.slice(-b.rank);h.forEach(t=>v[t]=0);const w=r.locToIndex(v),O=t(o[2*x],o[2*x+1],l[2*w],l[2*w+1]);d[i]=O.real,m[i]=O.imag}}return this.complex(n.toTensor(),r.toTensor())}split(t,e,n){return va(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,o,l){const[c,h,d,m]=t.shape,y=e.shape[0],[x,v]=r,output=f.T([y,x,v,m],"float32"),w=this.readSync(e.dataId),O=this.readSync(n.dataId),S=this.readSync(t.dataId),C=t.strides,k=output.strides;for(let b=0;b<y;b++){const t=4*b,e=w[t],n=w[t+1],r=w[t+2],f=w[t+3],y=O[b];if(y>=c)continue;const N=x>1?(r-e)*(h-1)/(x-1):0,I=v>1?(f-n)*(d-1)/(v-1):0;for(let t=0;t<x;t++){const c=x>1?e*(h-1)+t*N:.5*(e+r)*(h-1);if(c<0||c>h-1)for(let e=0;e<v;e++)for(let n=0;n<m;n++){const r=n+e*k[2]+t*k[1]+b*k[0];output.values[r]=l}else if("bilinear"===o){const e=Math.floor(c),r=Math.ceil(c),o=c-e;for(let c=0;c<v;c++){const h=v>1?n*(d-1)+c*I:.5*(n+f)*(d-1);if(h<0||h>d-1){for(let e=0;e<m;e++){const n=e+c*k[2]+t*k[1]+b*k[0];output.values[n]=l}continue}const x=Math.floor(h),w=Math.ceil(h),O=h-x;for(let n=0;n<m;n++){let l=n+x*C[2]+e*C[1]+y*C[0];const h=S[l];l=n+w*C[2]+e*C[1]+y*C[0];const d=S[l];l=n+x*C[2]+r*C[1]+y*C[0];const f=S[l];l=n+w*C[2]+r*C[1]+y*C[0];const m=h+(d-h)*O,v=f+(S[l]-f)*O;l=n+c*k[2]+t*k[1]+b*k[0],output.values[l]=m+(v-m)*o}}}else for(let e=0;e<v;++e){const r=v>1?n*(d-1)+e*I:.5*(n+f)*(d-1);if(r<0||r>d-1){for(let n=0;n<m;n++){const r=n+e*k[2]+t*k[1]+b*k[0];output.values[r]=l}continue}const o=Math.round(r),h=Math.round(c);for(let n=0;n<m;n++){const r=n+o*C[2]+h*C[1]+y*C[0],l=n+e*k[2]+t*k[1]+b*k[0];output.values[l]=S[r]}}}}return output.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:o,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=f.L.calculateShapes(e,t,n);return this.scatter(t,e,n,d,c,l,o,h,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[o,l,c,h]=f.L.prepareAndValidate(t,e);if(0===l)return f.wd([],o,t.dtype);const d=new f.s([l,c],t.dtype),m=this.readSync(e.dataId),y=this.readSync(t.dataId);for(let i=0;i<l;i++){const e=[];let n=0;for(let t=0;t<r;t++){const o=m[i*r+t];n+=o*h[t],e.push(o)}if(n<0||n>=t.size/c)throw new Error(`Invalid indices: ${e} does not index into ${t.shape}`);for(let t=0;t<c;t++)d.values[i*c+t]=y[n*c+t]}return d.toTensor().reshape(o)}scatterND(t,e,n){const{sliceRank:r,numUpdates:o,sliceSize:l,strides:c,outputSize:h}=f.L.calculateShapes(e,t,n),d=f.Pc(0);return this.scatter(t,e,n,h,l,o,r,c,d,!0)}fill(t,e,n){n=n||f.Jd.inferDtype(e);const r=f.Jd.getArrayFromDType(n,f.Jd.sizeFromShape(t));return r.fill(e),Object(f.ub)().makeTensor(r,t,n,this)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)}zerosLike(t){const e=f.Jd.getArrayFromDType(t.dtype,f.Jd.sizeFromShape(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return f.L.linspaceImpl(t,e,n)}scatter(t,e,n,r,o,l,c,h,d,m){const y=[r/o,o],x=this.readSync(t.dataId),v=this.readSync(e.dataId);if(0===r)return f.wd([],n,e.dtype);const w=new f.s(y,e.dtype);w.values.fill(this.readSync(d.dataId)[0]);for(let i=0;i<l;i++){const t=[];let l=0;for(let e=0;e<c;e++){const n=x[i*c+e];t.push(n),l+=n*h[e]}if(l<0||l>=r/o)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let t=0;t<o;t++)m?w.values[l*o+t]+=v[i*o+t]:w.values[l*o+t]=0===e.rank?v[0]:v[i*o+t]}return w.toTensor().reshape(n)}}Object(f.Hc)("cpu",()=>new ka,1);const Na={kernelName:f.b,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:filter}=t,{strides:o,pad:l,dilations:c}=n,h=e,d=f.Jd.toNestedArray(r.shape,h.data.get(r.dataId).values),m=f.Jd.toNestedArray(filter.shape,h.data.get(filter.dataId).values),{batchSize:y,inHeight:x,inWidth:v,inChannels:w,outHeight:O,outWidth:S,padInfo:C,strideHeight:k,strideWidth:N,filterHeight:I,filterWidth:E,dilationHeight:T,dilationWidth:A,outShape:R}=f.L.computeDilation2DInfo(r.shape,filter.shape,o,l,"NHWC",c),output=f.Jd.makeZerosNestedTypedArray(R,r.dtype);for(let b=0;b<y;++b)for(let t=0;t<O;++t){const e=t*k-C.top;for(let n=0;n<S;++n){const r=n*N-C.left;for(let o=0;o<w;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const n=e+t*T;if(n>=0&&n<x)for(let e=0;e<E;++e){const c=r+e*A;if(c>=0&&c<v){const r=d[b][n][c][o]+m[t][e][o];r>l&&(l=r)}}}output[b][t][n][o]=l}}}return{dataId:h.write(f.Jd.toTypedArray(output,r.dtype),R,r.dtype),shape:R,dtype:r.dtype}}},Ia={kernelName:f.c,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:filter,dy:o}=t,{strides:l,pad:c,dilations:h}=n,d=e,m=f.Jd.toNestedArray(r.shape,d.data.get(r.dataId).values),y=f.Jd.toNestedArray(filter.shape,d.data.get(filter.dataId).values),{batchSize:x,inHeight:v,inWidth:w,inChannels:O,outHeight:S,outWidth:C,padInfo:k,strideHeight:N,strideWidth:I,filterHeight:E,filterWidth:T,dilationHeight:A,dilationWidth:R,outShape:$}=f.L.computeDilation2DInfo(r.shape,filter.shape,l,c,"NHWC",h);f.Jd.assert(o.rank===$.length,()=>`Error in ${f.c}, dy must have the same rank as output ${$.length}, but got `+o.rank);const F=f.Jd.toNestedArray($,d.data.get(o.dataId).values),j=f.Jd.makeZerosNestedTypedArray(filter.shape,filter.dtype);for(let b=0;b<x;++b)for(let t=0;t<S;++t){const e=t*N-k.top;for(let n=0;n<C;++n){const r=n*I-k.left;for(let o=0;o<O;++o){let l=Number.MIN_SAFE_INTEGER,c=0,h=0;for(let t=0;t<E;++t){const n=e+t*A;if(n>=0&&n<v)for(let e=0;e<T;++e){const d=r+e*R;if(d>=0&&d<w){const r=m[b][n][d][o]+y[t][e][o];r>l&&(l=r,c=t,h=e)}}}j[c][h][o]+=F[b][t][n][o]}}}return{dataId:d.write(f.Jd.toTypedArray(j,r.dtype),filter.shape,filter.dtype),shape:filter.shape,dtype:filter.dtype}}},Ea={kernelName:f.d,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:filter,dy:o}=t,{strides:l,pad:c,dilations:h}=n,d=e,m=f.Jd.toNestedArray(r.shape,d.data.get(r.dataId).values),y=f.Jd.toNestedArray(filter.shape,d.data.get(filter.dataId).values),{batchSize:x,inHeight:v,inWidth:w,inChannels:O,outHeight:S,outWidth:C,padInfo:k,strideHeight:N,strideWidth:I,filterHeight:E,filterWidth:T,dilationHeight:A,dilationWidth:R,outShape:$}=f.L.computeDilation2DInfo(r.shape,filter.shape,l,c,"NHWC",h);f.Jd.assert(o.rank===$.length,()=>`Error in ${f.d}, dy must have the same rank as output ${$.length}, but got `+o.rank);const F=f.Jd.toNestedArray($,d.data.get(o.dataId).values),j=f.Jd.makeZerosNestedTypedArray(r.shape,r.dtype);for(let b=0;b<x;++b)for(let t=0;t<S;++t){const e=t*N-k.top;for(let n=0;n<C;++n){const r=n*I-k.left;for(let o=0;o<O;++o){let l=Number.MIN_SAFE_INTEGER,c=e<0?0:e,h=r<0?0:r;for(let t=0;t<E;++t){const n=e+t*A;if(n>=0&&n<v)for(let e=0;e<T;++e){const d=r+e*R;if(d>=0&&d<w){const r=m[b][n][d][o]+y[t][e][o];r>l&&(l=r,c=n,h=d)}}}j[b][c][h][o]+=F[b][t][n][o]}}}return{dataId:d.write(f.Jd.toTypedArray(j,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Ta(t,e){return{kernelName:t,backendName:"cpu",kernelFunc:({inputs:n,backend:r})=>{const{a:a,b:b}=n,o=r;ga([a,b],t);const l=o.data.get(a.dataId).values,c=o.data.get(b.dataId).values,[h,d]=e(a.shape,b.shape,l,c,a.dtype);return{dataId:o.write(h,d,a.dtype),shape:d,dtype:a.dtype}}}}function Aa(t){return(e,n,r,o,l)=>{const c=f.L.assertAndGetBroadcastShape(e,n),h=c.length,d=f.Jd.computeStrides(c),m=f.Jd.sizeFromShape(c),y=f.Jd.getTypedArrayFromDType(l,m),x=e.length,v=n.length,w=f.Jd.computeStrides(e),O=f.Jd.computeStrides(n),S=f.L.getBroadcastDims(e,c),C=f.L.getBroadcastDims(n,c);if(S.length+C.length===0)for(let i=0;i<y.length;++i)y[i]=t(r[i%r.length],o[i%o.length]);else for(let i=0;i<y.length;++i){const e=f.Jd.indexToLoc(i,h,d),n=e.slice(-x);S.forEach(t=>n[t]=0);const l=f.Jd.locToIndex(n,x,w),c=e.slice(-v);C.forEach(t=>c[t]=0);const m=f.Jd.locToIndex(c,v,O);y[i]=t(r[l],o[m])}return[y,c]}}const Ra=Aa((a,b)=>a/b),$a=Ta(f.e,Ra),Fa={kernelName:f.f,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:image}=t,r=n,output=f.Jd.getTypedArrayFromDType(image.dtype,f.Jd.sizeFromShape(image.shape)),[o,l,c,h]=image.shape,d=r.data.get(image.dataId).values;for(let t=0;t<o;t++){const e=t*c*l*h;for(let t=0;t<l;t++){const n=t*(c*h);for(let col=0;col<c;col++){const r=col*h;for(let l=0;l<h;l++){const f=[o,t,col,l][2],m=Math.round(c-f),y=e+n+r+l;let x=d[y];if(m>=0&&m<c){x=d[e+n+m*h+l]}output[y]=x}}}}return{dataId:r.write(output,image.shape,image.dtype),shape:image.shape,dtype:image.dtype}}};function ja(t,e,n,r){const o=f.Jd.getTypedArrayFromDType(r,f.Jd.sizeFromShape(n));for(let i=0;i<o.length;++i){const n=i*e;let r=t[n];for(let o=0;o<e;++o){const e=t[n+o];e>r&&(r=e)}o[i]=r}return o}function Da(t,e,n,r,o){const l=e.length,c=f.Jd.sizeFromShape(e),h=f.Jd.computeStrides(e),d=f.Jd.computeStrides(o),m=f.Jd.getTypedArrayFromDType(n,f.Jd.sizeFromShape(o));for(let i=0;i<c;++i){const e=f.Jd.indexToLoc(i,l,h),n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[r[i]];m[f.Jd.locToIndex(n,l,d)]=t[i]}return m}const _a={kernelName:f.i,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:o,keepDims:l}=e,c=n;let h=r.shape;const d=h.length,m=f.Jd.parseAxisParam(o,h);let y=m;const x=f.L.getAxesPermutation(y,d);let v=c.data.get(r.dataId).values;if(null!=x){const t=new Array(d);for(let i=0;i<t.length;i++)t[i]=h[x[i]];v=Da(v,h,r.dtype,x,t),y=f.L.getInnerMostAxes(y.length,d),h=t}ga(r,"max"),f.L.assertAxesAreInnerMostDims("max",y,d);const[w,O]=f.L.computeOutAndReduceShapes(h,y),S=ja(v,f.Jd.sizeFromShape(O),w,r.dtype),C=c.write(S,w,r.dtype);let k=w;if(l){k=f.L.expandShapeToKeepDim(w,m)}return{dataId:C,shape:k,dtype:r.dtype}}};const za={kernelName:f.j,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:o,strides:l,pad:c,includeBatchInIndex:h}=e,d=n;ga(r,"MaxPoolWithArgmax");const m=d.data.get(r.dataId).values,y=f.L.computePool2DInfo(r.shape,o,l,[1,1],c),[x,v]=function(t,e,n,r,o){const l=ba(t,0,n,f.Jd.computeStrides(e),o,"max"),c=ya(t,e,n,o,!0,r);return[l.values,c.values]}(m,r.shape,r.dtype,h,y),w=d.write(x,y.outShape,r.dtype),O=d.write(v,y.outShape,r.dtype);return[{dataId:w,shape:y.outShape,dtype:r.dtype},{dataId:O,shape:y.outShape,dtype:"int32"}]}},Ma=f.Rb.nonMaxSuppressionV4Impl,La={kernelName:f.l,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:o}=t,{maxOutputSize:l,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:d}=n,f=e;ga(r,"NonMaxSuppressionPadded");const m=f.data.get(r.dataId).values,y=f.data.get(o.dataId).values,{selectedIndices:x,validOutputs:v}=Ma(m,y,l,c,h,d);return[x,v]}},Ba=f.Rb.nonMaxSuppressionV5Impl,Pa={kernelName:f.m,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:o}=t,{maxOutputSize:l,iouThreshold:c,scoreThreshold:h,softNmsSigma:d}=n,f=e;ga(r,"NonMaxSuppressionWithScore");const m=f.data.get(r.dataId).values,y=f.data.get(o.dataId).values,x=l,v=c,w=h,O=d,{selectedIndices:S,selectedScores:C}=Ba(m,y,x,v,w,O);return[S,C]}},Wa={kernelName:f.o,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:image}=t,{radians:r,fillValue:o,center:l}=e,c=n,output=f.Jd.getTypedArrayFromDType(image.dtype,f.Jd.sizeFromShape(image.shape)),[h,d,m,y]=image.shape,[x,v]=f.L.getImageCenter(l,d,m),w=Math.sin(r),O=Math.cos(r),S=c.data.get(image.dataId).values;for(let t=0;t<h;t++){const e=t*m*d*y;for(let t=0;t<d;t++){const n=t*(m*y);for(let col=0;col<m;col++){const r=col*y;for(let l=0;l<y;l++){const c=[h,t,col,l],f=c[2],C=c[1];let k=(f-x)*O-(C-v)*w,N=(f-x)*w+(C-v)*O;k=Math.round(k+x),N=Math.round(N+v);let I=o;if("number"!=typeof o&&(I=3===l?255:o[l]),k>=0&&k<m&&N>=0&&N<d){I=S[e+N*(m*y)+k*y+l]}output[e+n+r+l]=I}}}}return{dataId:c.write(output,image.shape,image.dtype),shape:image.shape,dtype:image.dtype}}},Ua={kernelName:f.p,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;ga(n,"square");const o=r.data.get(n.dataId).values,l=new Float32Array(o.length);for(let i=0;i<o.length;++i){const t=o[i];l[i]=t*t}return{dataId:r.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Va=Aa((t,e)=>{const n=t-e;return n*n}),Ga=[Na,Ea,Ia,$a,Fa,za,_a,La,Pa,Wa,Ua,Ta(f.q,Va),{kernelName:f.t,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:o}=e,l=n;ga(r,"transpose");const c=r.shape.length,h=new Array(c);for(let i=0;i<h.length;i++)h[i]=r.shape[o[i]];const d=Da(l.data.get(r.dataId).values,r.shape,r.dtype,o,h);return{dataId:l.write(d,h,r.dtype),shape:h,dtype:r.dtype}}}];for(const t of Ga)Object(f.Ic)(t);const Ha={},qa={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Ka(t){t in Ha||(Ha[t]=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const canvas=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(canvas.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete Ha[t]},!1),1===t)return canvas.getContext("webgl",qa)||canvas.getContext("experimental-webgl",qa);return canvas.getContext("webgl2",qa)}(t));const e=Ha[t];return e.isContextLost()?(delete Ha[t],Ka(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Ha[t])}var Ja,Xa,Ya;function Qa(t,e){return[e,t]}function Za(t){const e=f.Jd.sizeFromShape(t),n=Math.ceil(e/4);return f.Jd.sizeToSquarishShape(n)}function ti(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function ei(t,e){const n=t;let r,o,l,c,h,d,m,y,x,v;return 2===Object(f.vb)().getNumber("WEBGL_VERSION")?(r=n.R32F,o=n.R16F,l=n.RGBA16F,c=n.RGBA32F,h=n.RED,m=4,y=1,x=n.HALF_FLOAT,v=n.FLOAT):(r=t.RGBA,o=t.RGBA,l=t.RGBA,c=n.RGBA,h=t.RGBA,m=4,y=4,x=null!=e?e.HALF_FLOAT_OES:null,v=t.FLOAT),d=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:l,internalFormatPackedFloat:c,textureFormatFloat:h,downloadTextureFormat:d,downloadUnpackNumChannels:m,defaultNumChannels:y,textureTypeHalfFloat:x,textureTypeFloat:v}}function ni(t,e){const n=e();return Object(f.vb)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(Ja||(Ja={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(Xa||(Xa={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Ya||(Ya={}));function ri(t){return!!(Object(f.vb)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function si(t,e){return fi(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function ai(t,e){const n=fi(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ni(t,()=>t.shaderSource(n,e)),ni(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=ii.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],o=t.split("\n"),l=o.length.toString().length+2,c=o.map((line,t)=>f.Jd.rightPad((t+1).toString(),l)+line);let h=0;for(let i=0;i<c.length;i++)h=Math.max(c[i].length,h);const d=c.slice(0,r-1),m=c.slice(r-1,r),y=c.slice(r);console.log(d.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+f.Jd.rightPad(m[0],h),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(y.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const ii=/ERROR: [0-9]+:([0-9]+):/g;function oi(t,e){if(ni(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function ui(t,e,n,r,o,l,c){const h=t.getAttribLocation(e,n);return-1!==h&&(ni(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),ni(t,()=>t.vertexAttribPointer(h,o,t.FLOAT,!1,l,c)),ni(t,()=>t.enableVertexAttribArray(h)),!0)}function ci(t,e,n,r){ni(t,()=>function(t,e,n){mi(t,n),ni(t,()=>t.activeTexture(t.TEXTURE0+n)),ni(t,()=>t.bindTexture(t.TEXTURE_2D,e))}(t,e,r)),ni(t,()=>t.uniform1i(n,r))}function hi(t,e,n){ni(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),ni(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function di(t,e){ni(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),ni(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function pi(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function fi(t,e,n){const r=ni(t,()=>e());if(null==r)throw new Error(n);return r}function mi(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function gi(t,e=2){return f.Jd.sizeFromShape(t.slice(0,t.length-e))}function bi(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function yi(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[gi(t),...bi(t)]),e}function xi(t){return t%2==0}function vi(t,e){if(t=t.slice(-2),e=e.slice(-2),f.Jd.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(xi(n)&&xi(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&xi(t[0])&&xi(e[0])}let wi,Oi;function Si(t,e){return null!=t.getExtension(e)}function Ci(t){try{if(null!=Ka(t))return!0}catch(t){return!1}return!1}function ki(t){if(0===t)return!1;const e=Ka(t);if(1!==t){if(Si(e,"EXT_color_buffer_float"))return Ni(e);const t="EXT_color_buffer_half_float";if(Si(e,t)){const n=e.getExtension(t);return function(t,e){const n=ei(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const l=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(o),l}(e,n)}return!1}if(!Si(e,"OES_texture_float"))return!1;if(!Si(e,"WEBGL_color_buffer_float"))return!1;return Ni(e)}function Ni(t){const e=ei(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),o}const Ii=Object(f.vb)();Ii.registerFlag("HAS_WEBGL",()=>Ii.getNumber("WEBGL_VERSION")>0),Ii.registerFlag("WEBGL_VERSION",()=>Ci(2)?2:Ci(1)?1:0),Ii.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Ii.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Ii.get("WEBGL_VERSION")),Ii.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Ii.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Ii.registerFlag("WEBGL_PACK",()=>Ii.getBool("HAS_WEBGL")),Ii.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ii.getBool("WEBGL_PACK")),Ii.registerFlag("WEBGL_PACK_CLIP",()=>Ii.getBool("WEBGL_PACK")),Ii.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Ii.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ii.getBool("WEBGL_PACK")),Ii.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ii.getBool("WEBGL_PACK")),Ii.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ii.getBool("WEBGL_PACK")),Ii.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ii.getBool("WEBGL_PACK")),Ii.registerFlag("WEBGL_PACK_REDUCE",()=>Ii.getBool("WEBGL_PACK")),Ii.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ii.getBool("WEBGL_PACK")),Ii.registerFlag("WEBGL_CONV_IM2COL",()=>Ii.getBool("WEBGL_PACK")),Ii.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==wi){const e=Ka(t);wi=e.getParameter(e.MAX_TEXTURE_SIZE)}return wi}(Ii.getNumber("WEBGL_VERSION"))),Ii.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==Oi){const e=Ka(t);Oi=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Oi)}(Ii.getNumber("WEBGL_VERSION"))),Ii.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Ii.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Ka(t);return e=Si(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Si(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),Ii.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ii.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!f.nb.isMobile()),Ii.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=Ka(t);if(1===t){if(!Si(e,"OES_texture_float"))return!1}else if(!Si(e,"EXT_color_buffer_float"))return!1;return Ni(e)}(Ii.getNumber("WEBGL_VERSION"))),Ii.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Ii.getBool("WEBGL_FORCE_F16_TEXTURES")&&Ii.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Ii.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>ki(Ii.getNumber("WEBGL_VERSION"))),Ii.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=Ii.getNumber("WEBGL_VERSION"))&&null!=Ka(t).fenceSync;var t}),Ii.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ii.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Ii.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});class Ei{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,i)=>"T"+i);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Ti{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,i)=>"T"+i);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class Ai{constructor(t,e,n){this.variableNames=["A"];const r=t.windowSize,o=t.batchSize,l=t.inSize,c=Math.ceil(l/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[o,c];const h="max"===e?">":"<",d=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${d};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${h} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function Ri(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function $i(t,e){return 1===e?[t]:Ri(t,e)}function Fi(){let t,e,n,r,o,output,l,c,h,d;return 2===Object(f.vb)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",o="texture",output="outputColor",l="out vec4 outputColor;",c="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",h="",d="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",o="texture2D",output="gl_FragColor",l="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",h="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",d="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:o,output:output,defineOutput:l,defineSpecialNaN:c,defineSpecialInf:h,defineRound:d}}function ji(t,e,n="index"){const r=f.Jd.computeStrides(e);return r.map((e,i)=>`${`int ${t[i]} = ${n} / ${e}`}; ${i===r.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${e}`:`index -= ${t[i]} * ${e}`};`).join("")}function Di(t){const e=f.Jd.computeStrides(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const _i="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:zi}=f.L;function Mi(t,e,n,r){const o=[];t.forEach(t=>{const e=f.Jd.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?o.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(o.push(`uniform sampler2D ${t.name};`),o.push(`uniform int offset${t.name};`))});const l=o.join("\n"),c=t.map(t=>function(t,e,n=!1){let r="";r+=n?Bi(t):Li(t);const o=t.shapeInfo.logicalShape,l=e.logicalShape;o.length<=l.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",l=t.shapeInfo.logicalShape.length,c=e.logicalShape.length,h=zi(t.shapeInfo.logicalShape,e.logicalShape),d=Ki(c),m=c-l;let y;const x=["x","y","z","w","u","v"];y=0===l?"":c<2&&h.length>=1?"coords = 0;":h.map(t=>`coords.${x[t+m]} = 0;`).join("\n");let v="";v=c<2&&l>0?"coords":t.shapeInfo.logicalShape.map((s,i)=>"coords."+x[i+m]).join(", ");let output="return outputValue;";const w=1===f.Jd.sizeFromShape(t.shapeInfo.logicalShape),O=1===f.Jd.sizeFromShape(e.logicalShape);if(1!==l||w||O){if(w&&!O)output=1===c?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(h.length){const t=l-2,e=l-1;h.indexOf(t)>-1&&h.indexOf(e)>-1?output="return vec4(outputValue.x);":h.indexOf(t)>-1?output="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(e)>-1&&(output="return vec4(outputValue.xx, outputValue.zz);")}}else output="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${o}() {\n      ${d} coords = getOutputCoords();\n      ${y}\n      vec4 outputValue = get${r}(${v});\n      ${output}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",l=e.texShape,c=t.shapeInfo.texShape,h=t.shapeInfo.logicalShape.length,d=e.logicalShape.length;if(!t.shapeInfo.isUniform&&h===d&&null==t.shapeInfo.flatOffset&&f.Jd.arraysEqual(c,l))return`\n      float ${o}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const m=Ki(d),y=zi(t.shapeInfo.logicalShape,e.logicalShape),x=d-h;let v;const w=["x","y","z","w","u","v"];v=0===h?"":d<2&&y.length>=1?"coords = 0;":y.map(t=>`coords.${w[t+x]} = 0;`).join("\n");let O="";O=d<2&&h>0?"coords":t.shapeInfo.logicalShape.map((s,i)=>"coords."+w[i+x]).join(", ");return`\n    float ${o}() {\n      ${m} coords = getOutputCoords();\n      ${v}\n      return get${r}(${O});\n    }\n  `}(t,e));return r}(t,e,r)).join("\n"),h=e.texShape,d=Fi(),m=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(d);let y,x,v=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Pi}\n    ${Wi}\n    ${Ui}\n  `}(d);e.isPacked?(y=function(t,e){switch(t.length){case 0:return Gi();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(f.Jd.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),o=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),o=r*Math.ceil(t[t.length-2]/2);let l=o,c="",h="b, r, c";for(let b=2;b<t.length-1;b++)l*=t[t.length-b-1],c=`\n      int b${b} = index / ${l};\n      index -= b${b} * ${l};\n    `+c,h=`b${b}, `+h;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${c}\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${h});\n    }\n  `}(t,e)}}(e.logicalShape,h),x=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(d)):(y=function(t,e){switch(t.length){case 0:return Gi();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(f.Jd.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=ji(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=ji(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=ji(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=ji(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}(e.logicalShape,h),x=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(d)),r&&(v+=Vi);return[v,m,x,l,y,c,n].join("\n")}function Li(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,o]=t.shapeInfo.texShape;if(1===r&&1===o)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[l,c]=t.shapeInfo.texShape,h=Hi(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${l}, ${c}, ${h});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${qi(t)}\n      }\n    `;const r=t.shapeInfo.texShape,o=r[0],l=r[1];if(1===l&&1===o)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const c=Hi(e);if(1===l)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${c}) + 0.5) / ${o}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===o)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${c}) + 0.5) / ${l}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${o}, ${l}, index + ${c});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape;if(null!=o&&f.Jd.arraysEqual(e,o)){const t=o[0],e=o[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${e}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:l,keptDims:c}=f.Jd.squeezeShape(e),h=l;if(h.length<e.length){const e=Ji(t,h),n=["row","col"];return`\n      ${Li(e)}\n      float ${r}(int row, int col) {\n        return ${r}(${Xi(n,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${qi(t)}\n      }\n    `;const d=o[0],m=o[1],y=Hi(n);if(1===m)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${y}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===d)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${y}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${m}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${y};\n    vec2 uv = uvFromFlat(${d}, ${m}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[1]*e[2],l=e[2],{newShape:c,keptDims:h}=f.Jd.squeezeShape(e),d=c;if(d.length<e.length){const e=Ji(t,d),n=["row","col","depth"];return`\n        ${Li(e)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Xi(n,h)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${l}, 1)));\n        ${qi(t)}\n      }\n    `;const m=t.shapeInfo.texShape,y=m[0],x=m[1],v=t.shapeInfo.flatOffset;if(x===o&&null==v)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${l}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${x}.0, ${y}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(x===l&&null==v)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${x}.0, ${y}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const w=Hi(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${l} + depth + ${w};\n        vec2 uv = uvFromFlat(${y}, ${x}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[3],l=e[2]*o,c=e[1]*l,{newShape:h,keptDims:d}=f.Jd.squeezeShape(e);if(h.length<e.length){const e=Ji(t,h),n=["row","col","depth","depth2"];return`\n      ${Li(e)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Xi(n,d)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${c}, ${l}, ${o}, 1)));\n        ${qi(t)}\n      }\n    `;const m=t.shapeInfo.flatOffset,y=t.shapeInfo.texShape,x=y[0],v=y[1];if(v===c&&null==m)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${l}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${v}.0, ${x}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(v===o&&null==m)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${v}.0, ${x}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const w=Hi(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${x}, ${v}, index + ${w});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[4],l=e[3]*o,c=e[2]*l,h=e[1]*c,{newShape:d,keptDims:m}=f.Jd.squeezeShape(e);if(d.length<e.length){const e=Ji(t,d),n=["row","col","depth","depth2","depth3"];return`\n      ${Li(e)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Xi(n,m)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${l}, ${o})) +\n          depth3;\n        ${qi(t)}\n      }\n    `;const y=t.shapeInfo.flatOffset,x=t.shapeInfo.texShape,v=x[0],w=x[1];if(w===h&&null==y)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${c}, ${l}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${w}.0, ${v}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(w===o&&null==y)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${w}.0, ${v}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const O=Hi(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${l} +\n          depth2 * ${o} + depth3 + ${O};\n      vec2 uv = uvFromFlat(${v}, ${w}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:l}=f.Jd.squeezeShape(e);if(o.length<e.length){const e=Ji(t,o),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Li(e)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Xi(n,l)});\n      }\n    `}const c=e[5],h=e[4]*c,d=e[3]*h,m=e[2]*d,y=e[1]*m;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${y}, ${m}, ${d}, ${h})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${c}, 1)));\n        ${qi(t)}\n      }\n    `;const x=t.shapeInfo.flatOffset,v=t.shapeInfo.texShape,w=v[0],O=v[1];if(O===y&&null==x)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${m}, ${d}, ${h}, ${c})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${O}.0, ${w}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(O===c&&null==x)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${O}.0, ${w}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const S=Hi(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${y} + col * ${m} + depth * ${d} +\n          depth2 * ${h} + depth3 * ${c} + depth4 + ${S};\n      vec2 uv = uvFromFlat(${w}, ${O}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function Bi(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Fi();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],l=Fi();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${l.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,l=o[0],c=o[1],h=Fi();if(null!=o&&f.Jd.arraysEqual(e,o))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${l}.0);\n\n        return ${h.texture2D}(${n}, uv);\n      }\n    `;const d=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],m=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${m}, ${d[0]}, ${d[1]}, row, col);\n      return ${h.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===e[0]){const n=e.slice(1),o=[1,2],l=Ji(t,n),c=["b","row","col"];return`\n        ${Bi(l)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Xi(c,o)});\n        }\n      `}const c=l[0],h=l[1],d=Math.ceil(e[2]/2),f=d*Math.ceil(e[1]/2),m=Fi();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${c}, ${h}, ${f}, ${d}, b, row, col);\n      return ${m.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),l=t.shapeInfo.texShape,c=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],h=c[0],d=c[1],f=Math.ceil(e[n-1]/2);let m=f*Math.ceil(e[n-2]/2),y="int b, int row, int col",x=`b * ${m} + (row / 2) * ${f} + (col / 2)`;for(let b=2;b<n-1;b++)y=`int b${b}, `+y,m*=e[n-b-1],x=`b${b} * ${m} + `+x;const v=Fi();return`\n    vec4 ${o}(${y}) {\n      int index = ${x};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${h});\n      return ${v.texture2D}(${r}, uv);\n    }\n  `}(t)}}const Pi="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Wi="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ui="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Vi="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Gi(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Hi(t){return"offset"+t}function qi(t){const e=t.name,n=f.Jd.sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function Ki(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Ji(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Xi(t,e){return e.map(e=>t[e]).join(", ")}class Yi{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,f.Jd.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const o=t[t.length-1],l=Math.ceil(o/e);this.outputShape=t.slice(0,-1),l>1&&this.outputShape.push(l),r||this.variableNames.push("bestIndicesA");const c=this.outputShape,h=c.length,d=Ki(h),m=$i("coords",h);let y,x;if(1===l){x=h+1;const t=Ki(x);y=`\n        ${t} sourceLocR = ${t}(${m.join()}, 0);\n        ++${m[h-1]};\n        ${t} sourceLocG = ${t}(${m.join()}, 0);\n        ++${m[h-2]};\n        ${t} sourceLocA = ${t}(${m.join()}, 0);\n        --${m[h-1]};\n        ${t} sourceLocB = ${t}(${m.join()}, 0);\n        --${m[h-2]};`}else x=h,y=`\n        ${d} sourceLocR = coords;\n        ++${m[h-1]};\n        ${d} sourceLocG = coords;\n        ++${m[h-2]};\n        ${d} sourceLocA = coords;\n        --${m[h-1]};\n        ${d} sourceLocB = coords;\n        --${m[h-2]};`;const v=["x","y","z","w","u","v"].slice(0,x),w="."+v[x-1],O=v.map(t=>"int "+t),S=$i("sourceLocR",x-1).concat("inIdx.r"),C=$i("sourceLocG",x-1).concat("inIdx.g"),k=$i("sourceLocB",x-1).concat("inIdx.b"),N=$i("sourceLocA",x-1).concat("inIdx.a"),I="max"===n?"greaterThan":"lessThan",E=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${S.join()}),\n                             getBestIndicesAChannel(${C.join()}),\n                             getBestIndicesAChannel(${k.join()}),\n                             getBestIndicesAChannel(${N.join()})));`,T=`vec4(\n            getAChannel(${S.join()}),\n            hasNextCol ? getAChannel(${C.join()}) : 0.,\n            hasNextRow ? getAChannel(${k.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${N.join()}) : 0.)`,A=r?"":`\n      float getBestIndicesAChannel(${O.join()}) {\n        return getChannel(getBestIndicesA(${v.join()}),\n                                          vec2(${v.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${O.join()}) {\n        return getChannel(getA(${v.join()}),\n                               vec2(${v.slice(-2).join()}));\n      }\n      ${A}\n      void main() {\n        ${d} coords = getOutputCoords();\n        bool hasNextCol = ${m[h-1]} < ${c[h-1]-1};\n        bool hasNextRow = ${m[h-2]} < ${c[h-2]-1};\n        ${y}\n        ivec4 srcIdx = ivec4(sourceLocR${w}, sourceLocG${w},\n          sourceLocB${w}, sourceLocA${w}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${T};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${E}\n          vec4 candidate = ${T};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class Qi{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,y=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${f}, ${m});\n      const float avgMultiplier = float(${y});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${d};\n            wC+= ${c}) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Zi{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,o=t.strideDepth,l=t.strideHeight,c=t.strideWidth,h=t.dilationDepth,d=t.dilationHeight,f=t.dilationWidth,m=t.effectiveFilterDepth,y=t.effectiveFilterHeight,x=t.effectiveFilterWidth,v=m-1-t.padInfo.front,w=y-1-t.padInfo.top,O=x-1-t.padInfo.left,S=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${v}, ${w}, ${O});\n      const float avgMultiplier = float(${S});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${m};\n            wD += ${h}) {\n          float dyD = float(dyDCorner + wD) / ${o}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${y};\n              wR += ${d}) {\n            float dyR = float(dyRCorner + wR) / ${l}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${x};\n                wC += ${f}) {\n              float dyC = float(dyCCorner + wC) / ${c}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class to{constructor(t,e,n,r,o,l){this.outputShape=[],this.variableNames=["x","mean","variance"],f.L.assertAndGetBroadcastShape(t,e),f.L.assertAndGetBroadcastShape(t,n);let c="0.0";null!=r&&(f.L.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let h="1.0";null!=o&&(f.L.assertAndGetBroadcastShape(t,o),this.variableNames.push("scale"),h="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${c};\n        float scale = ${h};\n        float inv = scale * inversesqrt(variance + float(${l}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class eo{constructor(t,e,n,r,o,l){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],f.L.assertAndGetBroadcastShape(t,e),f.L.assertAndGetBroadcastShape(t,n);let c="vec4(0.0)";null!=r&&(f.L.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let h="vec4(1.0)";null!=o&&(f.L.assertAndGetBroadcastShape(t,o),this.variableNames.push("scale"),h="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${c};\n        vec4 scale = ${h};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${l}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const no="return areal * breal - aimag * bimag;",ro="return areal * bimag + aimag * breal;";class so{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=f.L.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const ao="return a + b;",io="return a - b;",oo="return a * b;",uo="return (a < 0.) ? b * a : a;";class lo{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=f.L.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const co="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class ho{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=f.L.assertAndGetBroadcastShape(e,n);const o=this.outputShape.length;let l="";if(r)if(0===o||1===f.Jd.sizeFromShape(this.outputShape))l="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(l=`\n          ${Ki(o)} coords = getOutputCoords();\n        `,1===o)l+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=$i("coords",o);l+=`\n            bool nextRowOutOfBounds =\n              (${t[o-2]} + 1) >= ${this.outputShape[o-2]};\n            bool nextColOutOfBounds =\n              (${t[o-1]} + 1) >= ${this.outputShape[o-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${l}\n\n        setOutput(result);\n      }\n    `}}class po{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class fo{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class mo{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class go{constructor(t){this.outputShape=[],this.outputShape=f.L.computeOutShape(t,1),this.variableNames=t.map((t,i)=>"T"+i);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){const t=e[i-1];n.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${t}));`)}const r=e.length,o=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class bo{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=f.L.computeOutShape(t,e);const n=this.outputShape,r=n.length,o=Ki(r),l=$i("coords",r),c=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,i)=>"T"+i);const h=new Array(t.length-1);h[0]=t[0][e];for(let i=1;i<h.length;i++)h[i]=h[i-1]+t[i][e];const d=c[e],m=c.slice(-2),y=c.join();let x=`if (${d} < ${h[0]}) {\n        return getChannel(\n            getT0(${y}), vec2(${m.join()}));\n        }`;for(let i=1;i<h.length;i++){const t=h[i-1];x+=`\n        if (${d} < ${h[i]}  && ${d} >= ${h[i-1]}) {\n          return getChannel(\n            getT${i}(${yo(c,d,t)}),\n            vec2(${yo(m,d,t)}));\n        }`}const v=h.length,w=h[h.length-1];x+=`\n        return getChannel(\n          getT${v}(${yo(c,d,w)}),\n          vec2(${yo(m,d,w)}));`,this.userCode=`\n      float getValue(${c.map(t=>"int "+t)}) {\n        ${x}\n      }\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${l}), 0., 0., 0.);\n\n        ${l[r-1]} = ${l[r-1]} + 1;\n        if (${l[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${l});\n        }\n\n        ${l[r-2]} = ${l[r-2]} + 1;\n        if (${l[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${l});\n        }\n\n        ${l[r-1]} = ${l[r-1]} - 1;\n        if (${l[r-2]} < ${n[r-2]} &&\n            ${l[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${l});\n        }\n        setOutput(result);\n      }\n    `}}function yo(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}class xo{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,l="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${l}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vo{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,o=t.strideWidth,l="channelsLast"===t.dataFormat,c=e-1-t.padInfo.top,h=n-1-t.padInfo.left,d=l?1:2,f=l?2:3,m=l?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${m}];\n\n        ivec2 dyCorner = ivec2(coords[${d}], coords[${f}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${l}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wo{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,o=t.padInfo.front,l=t.padInfo.top,c=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${o};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${l};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${c};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Oo{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,o=t.strideDepth,l=t.strideHeight,c=t.strideWidth,h=e-1-t.padInfo.front,d=n-1-t.padInfo.top,f=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${d}, ${f});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${o}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${l}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${c}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class So{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${l} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Co{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,o=t.strideWidth,l=e-1-t.padInfo.top,c=n-1-t.padInfo.left,h=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${h}; dm++) {\n              int d2 = d1 * ${h} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ko{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,l=t.padInfo.left,c=t.strideHeight,h=t.strideWidth,d=t.dilationHeight,f=t.dilationWidth,m=t.filterHeight,y=t.filterWidth,x=4*Math.floor(t.inChannels/4),v=t.inChannels%4,w="channelsLast"===t.dataFormat,O=w?1:2,S=w?2:3,C=w?3:1;let k="",N="";n&&(k=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,N="result = activation(result);");const I=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${k}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${C}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${O}], coords[${S}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${m}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC++) {\n            int xC = xCCorner + wC * ${f};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${x}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${w}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===v}) {\n\n              if (${w}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${x}) *\n                    getW(wR, wC, ${x}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${x}, xR, xC) *\n                    getW(wR, wC, ${x}, d2);\n              }\n\n            } else if (${2===v}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${x}, d2),\n                getW(wR, wC, ${x} + 1, d2)\n              );\n\n              if (${w}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${x}),\n                  getX(batch, xR, xC, ${x} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${x}, xR, xC),\n                  getX(batch, ${x} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===v}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${x}, d2),\n                getW(wR, wC, ${x} + 1, d2),\n                getW(wR, wC, ${x} + 2, d2)\n              );\n\n              if (${w}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${x}),\n                  getX(batch, xR, xC, ${x} + 1),\n                  getX(batch, xR, xC, ${x} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${x}, xR, xC),\n                  getX(batch, ${x} + 1, xR, xC),\n                  getX(batch, ${x} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${I}\n        ${N}\n        setOutput(result);\n      }\n    `}}class No{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,o=t.strideDepth,l=t.strideHeight,c=t.strideWidth,h=t.dilationDepth,d=t.dilationHeight,f=t.dilationWidth,m=t.filterDepth,y=t.filterHeight,x=t.filterWidth,v=4*Math.floor(t.inChannels/4),w=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${o}, ${l}, ${c});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${m}; wF++) {\n          int xF = xFCorner + wF * ${h};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${y}; wR++) {\n            int xR = xRCorner + wR * ${d};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${x}; wC++) {\n              int xC = xCCorner + wC * ${f};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${v}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===w}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${v}) *\n                  getW(wF, wR, wC, ${v}, d2);\n              } else if (${2===w}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${v}),\n                  getX(batch, xF, xR, xC, ${v} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${v}, d2),\n                  getW(wF, wR, wC, ${v} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===w}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${v}),\n                  getX(batch, xF, xR, xC, ${v} + 1),\n                  getX(batch, xF, xR, xC, ${v} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${v}, d2),\n                  getW(wF, wR, wC, ${v} + 1, d2),\n                  getW(wF, wR, wC, ${v} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Io{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.inHeight,l=t.inWidth,c=t.padInfo.top,h=t.padInfo.left,d=t.strideHeight,f=t.strideWidth,m=t.dilationHeight,y=t.dilationWidth,x=t.filterHeight,v=t.filterWidth,w=t.outChannels/t.inChannels;let O="",S="";n&&(O=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,S="result = activation(result);");const C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${O}\n\n      const ivec2 strides = ivec2(${d}, ${f});\n      const ivec2 pads = ivec2(${c}, ${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${w};\n        int q = d2 - d1 * ${w};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${x}; wR++) {\n          int xR = xRCorner + wR * ${m};\n\n          if (xR < 0 || xR >= ${o}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC++) {\n            int xC = xCCorner + wC * ${y};\n\n            if (xC < 0 || xC >= ${l}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${C}\n        ${S}\n        setOutput(result);\n      }\n    `}}class Eo{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const o=t.inHeight,l=t.inWidth,c=t.padInfo.top,h=t.padInfo.left,d=t.strideHeight,m=t.strideWidth,y=t.dilationHeight,x=t.dilationWidth,v=t.filterHeight,w=t.filterWidth,O=w;let S="int xR; int xC; int xCOffset;";for(let t=0;t<v;t++)for(let e=0;e<w;e++)S+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<v;t++)for(let e=0;e<O;e++){const n=2*e;if(S+=`\n          xR = xRCorner + ${t*y};\n          xC = xCCorner + ${n*x};\n        `,1===m){if(n<w&&(S+=h%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${o} && xCOffset >= 0 && xCOffset < ${l}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${l}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${o} && xCOffset >= 0 && xCOffset < ${l}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${l}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${o} && xC >= 0 && xC < ${l}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<w)){const e=h%2==0?f.Jd.nearestLargerEven(x):x;x%2==0&&h%2==1||x%2!=0&&h%2!=1?(S+=`\n                  xCOffset = xC + ${h%2} + ${e};\n\n                  if(xR >= 0 && xR < ${o} &&\n                    xCOffset >= 0 && xCOffset < ${l}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,x>1&&(S+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${o} &&\n                      xCOffset >= 0 && xCOffset < ${l}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),S+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):S+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${o} &&\n                    xCOffset >= 0 && xCOffset < ${l}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<w&&(S+=`\n              if(xR >= 0 && xR < ${o}) {\n            `,h%2==1?(S+=`\n                xCOffset = xC + 1 - ${m};\n                if(xCOffset >= 0 && xCOffset < ${l}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${l}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<w&&(S+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${m};\n                  if(xCOffset >= 0 && xCOffset < ${l}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(S+=`\n                if(xC >= 0 && xC < ${l}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${m};\n                if(xCOffset >= 0 && xCOffset < ${l}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<w&&(S+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),S+="}");n<w&&(S+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<w&&(S+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<v;t++)for(let e=0;e<w;e++)S+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let C="",k="";n&&(C=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,k="result = activation(result);");const N=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${C}\n\n      const ivec2 strides = ivec2(${d}, ${m});\n      const ivec2 pads = ivec2(${c}, ${h});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${S}\n\n        vec4 result = dotProd;\n        ${N}\n        ${k}\n        setOutput(result);\n      }\n    `}}class To{constructor(t,e,n,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[l,c,h,d]=t,[f]=e,[m,y]=n;this.outputShape=[f,m,y,d];const x="bilinear"===r?1:0,[v,w]=[c-1+".0",h-1+".0"],[O,S,C]=m>1?[""+(c-1)/(m-1),"(y2-y1) * height_ratio",`y1*${v} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+v],[k,N,I]=y>1?[""+(h-1)/(y-1),"(x2-x1) * width_ratio",`x1*${w} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+w];this.userCode=`\n      const float height_ratio = float(${O});\n      const float width_ratio = float(${k});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${l}) {\n          return;\n        }\n\n        float height_scale = ${S};\n        float width_scale = ${N};\n\n        float in_y = ${C};\n        if( in_y < 0.0 || in_y > ${v} ) {\n          setOutput(float(${o}));\n          return;\n        }\n        float in_x = ${I};\n        if( in_x < 0.0 || in_x > ${w} ) {\n          setOutput(float(${o}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${x} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class Ao{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,o=e?"0.0":`getX(${Ro(r,"coords")})`,l=t[t.length-1];let c="",h="";e?(c=n?"end != "+(l-1):"end != 0",h=n?"end + 1":"end - 1"):(c=n?"end + pow2 < "+l:"end >= pow2",h=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Ki(r)} coords = getOutputCoords();\n        int end = ${$o(r,"coords")};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${c}) {\n          int idx = ${h};\n          ${$o(r,"coords")} = idx;\n          val += getX(${Ro(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function Ro(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function $o(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class Fo{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ja.DENSE;const e=Za(t),n=Fi();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ji(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class jo{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ja.DENSE;const e=Za(t),n=Fi();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ji(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Do{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class _o{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class zo{constructor(t){this.variableNames=["A"],this.outTexUsage=Xa.DOWNLOAD;const e=Fi();this.outputShape=t,this.userCode=`\n      ${_i}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class Mo{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Xa.DOWNLOAD;const e=Fi();this.outputShape=t,this.userCode=`\n      ${_i}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class Lo{constructor(t,e,n=!1){this.variableNames=["A"];const r=Fi(),[o,l]=e;this.outputShape=t;let output="result";n&&(output="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Di(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${l};\n        int c = imod(flatIndex, ${l});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${l}.0, ${o}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${output}, 0., 0., 0.);\n      }\n    `}}class Bo{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Fi(),[o,l]=e;this.outputShape=t;let c="",output="result";n&&(output="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let col=0;col<=1;col++){const n=2*e+col;c+=`\n          localCoords = coords;\n          if(localCoords[2] + ${col} < ${t[2]}) {\n            localCoords[2] += ${col};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${l};\n              c = imod(flatIndex, ${l});\n              uv = (vec2(c, r) + halfCR) / vec2(${l}.0, ${o}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Di(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${c}\n\n        ${r.output} = ${output};\n      }\n    `}}const Po="return real * expR - imag * expI;",Wo="return real * expI + imag * expR;";class Uo{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const o=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,l=n?r+".0":"1.0";this.userCode=`\n      const float exponentMultiplier = ${o};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${t}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${l};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}class Vo{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class Go{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const o=Ki(this.rank),l=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let i=0;i<t.length;i++)i===e?o.push(`int(getIndices(${r[i]}))`):o.push(""+r[i]);return o.join()}(t,n);this.userCode=`\n      void main() {\n        ${o} resRC = getOutputCoords();\n        setOutput(getA(${l}));\n      }\n    `}}class Ho{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=Ki(e.length),o=Ki(n.length),l=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${o} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${l};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function qo(t){const e=Fi();return function(t,e){const n=fi(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ni(t,()=>t.shaderSource(n,e)),ni(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Ko(t){return function(t,data){const e=fi(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ni(t,()=>t.bindBuffer(t.ARRAY_BUFFER,e)),ni(t,()=>t.bufferData(t.ARRAY_BUFFER,data,t.STATIC_DRAW)),e}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Jo(t){return function(t,data){const e=fi(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ni(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e)),ni(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,data,t.STATIC_DRAW)),e}(t,new Uint16Array([0,1,2,2,1,3]))}function Xo(t,e,n,r,o,l){!function(t,e){const n=Object(f.vb)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){throw new Error("Requested texture size "+`[${t}x${e}]`+" is invalid.")}if(t>n||e>n){throw new Error("Requested texture size "+`[${t}x${e}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}(e,n);const c=function(t){return fi(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),h=t.TEXTURE_2D;return ni(t,()=>t.bindTexture(h,c)),ni(t,()=>t.texParameteri(h,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),ni(t,()=>t.texParameteri(h,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),ni(t,()=>t.texParameteri(h,t.TEXTURE_MIN_FILTER,t.NEAREST)),ni(t,()=>t.texParameteri(h,t.TEXTURE_MAG_FILTER,t.NEAREST)),ni(t,()=>t.texImage2D(h,0,r,e,n,0,o,l,null)),ni(t,()=>t.bindTexture(t.TEXTURE_2D,null)),c}function Yo(t){return t.internalFormatFloat}function Qo(t){return t.internalFormatHalfFloat}function Zo(t){return t.downloadTextureFormat}function tu(t){return t.internalFormatPackedFloat}function eu(t){return t.internalFormatPackedHalfFloat}function nu(t,e,n,r,o,l,c,h){const d=t,f=new Float32Array(function(t,e){const[n,r]=ti(t,e);return n*r*4}(l,c));return d.bindBuffer(d.PIXEL_PACK_BUFFER,e),d.getBufferSubData(d.PIXEL_PACK_BUFFER,0,f),d.bindBuffer(d.PIXEL_PACK_BUFFER,null),f}class ru{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(f.vb)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Ha[t]=e}(e,t)):this.gl=Ka(e);let n="WEBGL_color_buffer_float";if(1===Object(f.vb)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=si(this.gl,t),Si(this.gl,e))this.textureHalfFloatExtension=si(this.gl,e);else if(Object(f.vb)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Si(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=si(this.gl,"EXT_color_buffer_half_float");else if(Object(f.vb)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Si(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Si(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=Ko(this.gl),this.indexBuffer=Jo(this.gl),this.framebuffer=function(t){return fi(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=ei(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(f.vb)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;ni(t,()=>t.finish()),ni(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),ni(t,()=>t.deleteFramebuffer(this.framebuffer)),ni(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),ni(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),ni(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[o,l]=Qa(e,n);return Xo(t,o,l,Yo(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[o,l]=Qa(e,n);return Xo(t,o,l,Qo(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[o,l]=Qa(e,n);return Xo(t,o,l,Zo(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){ni(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?ni(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):ni(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),ni(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,data){this.throwIfDisposed(),function(t,e,n,r,data,o){let l,c,h;ni(t,()=>t.bindTexture(t.TEXTURE_2D,e)),data instanceof Uint8Array?(l=new Uint8Array(n*r*4),c=t.UNSIGNED_BYTE,h=t.RGBA):(l=new Float32Array(n*r*4),c=t.FLOAT,h=o.internalFormatPackedFloat),l.set(data),ni(t,()=>t.texImage2D(t.TEXTURE_2D,0,h,n,r,0,t.RGBA,c,l)),ni(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,data,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[o,l]=ti(e,n);return Xo(t,o,l,eu(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[o,l]=ti(e,n);return Xo(t,o,l,tu(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(di(this.gl,this.framebuffer),this.outputTexture=null),ni(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const[o,l]=Qa(e,n),c=new Uint8Array(e*n*4);return ni(t,()=>t.readPixels(0,0,o,l,r.downloadTextureFormat,t.UNSIGNED_BYTE,c)),new Float32Array(c.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,o,l){return nu(this.gl,t,0,0,0,o,l,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,o=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const o=t.createBuffer();ni(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,o));const l=16*e*n;return ni(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,l,t.STREAM_READ)),ni(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),ni(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),o}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(f.vb)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(o,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=o}else Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const r=new Float32Array(e*n*4);return ni(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=ai(e,t),r=qo(e),o=function(t){return fi(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return ni(e,()=>e.attachShader(o,r)),ni(e,()=>e.attachShader(o,n)),function(t,e){if(ni(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,o),this.debug&&oi(e,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=function(t,e,n){return ni(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),ui(t,e,"clipSpacePos",n,3,20,0)&&ui(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),o}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&ni(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&oi(this.gl,this.program),ni(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return fi(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),ni(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),ci(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,o]=ti(e,n);this.setOutputMatrixTextureDriver(t,r,o)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&oi(this.gl,this.program),pi(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),ni(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ni(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=si(this.gl,2===Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await f.Jd.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let i=0;for(;i<t.length;++i){if(!t[i]())break}return i-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let i=0;i<=t;++i){const{resolveFn:t}=this.itemsToPoll[i];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||f.Jd.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),hi(this.gl,t,this.framebuffer),this.debug&&pi(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(hi(this.gl,this.outputTexture,this.framebuffer),this.debug&&pi(this.gl)):di(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;hi(r,t,this.framebuffer),this.debug&&pi(r),this.outputTexture=t,ni(r,()=>r.viewport(0,0,e,n)),ni(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),ni(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function su(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((s,i)=>{const t=s.logicalShape,input=e[i],n=input.shape;if(!f.Jd.arraysEqual(t,n))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${t} and ${n} must match`);if(s.isUniform&&input.isUniform)return;const r=s.texShape,o=input.isUniform?null:input.texData.texShape;if(!f.Jd.arraysEqual(r,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${r} and ${o} must match`)})}class au{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:o,strideWidth:l,strideHeight:c,padInfo:h,outWidth:d,dilationWidth:f,dilationHeight:m,dataFormat:y}=n,{left:x,top:v}=h,w=o*r,O=Fi(),S="channelsLast"===y,C=S?0:1,k=S?1:2;let N="";for(let n=0;n<=1;n++)for(let col=0;col<=1;col++)N+=`\n          blockIndex = rc.y + ${col};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${d})) * ${c} - ${v};\n            d0 = offsetY + ${m} * (pos / ${w});\n\n            if(d0 < ${e[C]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${d}.) * ${l}. - ${x}.);\n              d1 = offsetX + ${f} * (int(mod(float(pos), ${w}.) / ${o}.));\n\n              if(d1 < ${e[k]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${o}.));\n\n                if (${S}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+col}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+col}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${N}\n\n        ${O.output} = result;\n      }\n    `}}class iu{constructor(t,e,n,r,o){this.variableNames=["x"],this.outputShape=[];const l=e,c=t[3]-1;let h;this.outputShape=t;const d=`float(${n}) + float(${r}) * sum`;h=.5===o?`inversesqrt(${d})`:1===o?`1.0/(${d})`:`exp(log(${d}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${l}; j <= ${l}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${c}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${h};\n        setOutput(val);\n      }\n    `}}class ou{constructor(t,e,n,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=o,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${o})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${o});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class uu{constructor(t,e,n,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const l=e,c=t[3]-1;let h;this.outputShape=t;const d=`float(${n}) + float(${r}) * sum`;h=.5===o?`inversesqrt(${d})`:1===o?`1.0/(${d})`:`exp(log(${d}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${l};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${l}; j <= ${l}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${c}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${h};\n        setOutput(result);\n      }\n    `}}class lu{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=o-1-t.padInfo.top,h=l-1-t.padInfo.left,d=o*l-1;this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${d} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${l} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cu{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=h-1-t.padInfo.front,y=d-1-t.padInfo.top,x=f-1-t.padInfo.left,v=h*d*f-1;this.userCode=`\n      const ivec3 pads = ivec3(${m}, ${y}, ${x});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n           wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${f};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${v} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${d} * ${f} +\n                  wR * ${f} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hu{constructor(t,e,n=!1,r=!1,o=!1,l=null,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const h=n?t[1]:t[2],d=Math.ceil(h/2),f=n?"i * 2, rc.y":"rc.y, i * 2",m=r?"rc.z, i * 2":"i * 2, rc.z",y=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],x=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let v="",w="";l&&(v=c?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${l}\n        }`:`vec4 activation(vec4 x) {\n          ${l}\n        }`,w="result = activation(result);");const O=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${v}\n\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${d}; i++) {\n          vec4 a = getMatrixA(rc.x, ${f});\n          vec4 b = getMatrixB(rc.x, ${m});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${y[0]} * ${x[0]});\n          result += (${y[1]} * ${x[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${O}\n\n        ${w}\n\n        setOutput(result);\n      }\n    `}}class du{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class pu{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class fu{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=$i("rc",e),r=Ki(e),o=function(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let i=t-2;i<t;i++)r+=`${n[i]} >= ${e[i]}`,i<t-1&&(r+="||");return r}(e,t,n),l=function(t,e,n,r){if(1===t)return"";const o=r.slice(-2);return`\n    int r = ${o[0]};\n    int c = ${o[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),output=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let col=0;col<=1;col++){let o=`${0===r?"r":"rp1"}, ${0===col?"c":"cp1"}`;for(let n=2;n<t;n++)o=e[e.length-1-n]+","+o;n.push(o)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${o}) {\n            setOutput(vec4(0));\n          } else {\n            ${l}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `}}}class mu{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((p,i)=>p[0]+t[i]+p[1]);const r=t.length,o=Ki(r),l=e.map(p=>p[0]).join(","),c=e.map((p,i)=>p[0]+t[i]).join(","),h=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${o} start = ${o}(${l});\n      ${o} end = ${o}(${c});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${o} coords = outC - start;\n          setOutput(getX(${h}));\n        }\n      }\n    `:`\n        int start = ${l};\n        int end = ${c};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class gu{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((p,i)=>p[0]+t[i]+p[1]);const r=t.length,o=Ki(r),l=e.map(p=>p[0]).join(","),c=e.map((p,i)=>p[0]+t[i]).join(","),h=$i("rc",r),source=$i("source",r),d=`${h[r-1]} < ${this.outputShape[r-1]}`,f=1===r?"source":`vec2(${source.slice(-2).join()})`,m=[o+" rc = outputLoc;",`${h[r-1]} += 1;\n       if(${d}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${h[r-2]} += 1;\n       if(${h[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${h[r-1]} += 1;\n         if(${d}) {`],y=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let x="";for(let i=0,t=1===r?2:4;i<t;i++)x+=`\n        ${m[i]}\n        if (${y}) {\n          result[${i}] = float(${n});\n        } else {\n          ${o} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${f});\n        }\n      `;x+=1===r?"} ":"}}",this.userCode=`\n      const ${o} start = ${o}(${l});\n      const ${o} end = ${o}(${c});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${x}\n        setOutput(result);\n      }\n    `}}class bu{constructor(t,e,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const l=t.filterWidth,c=t.strideHeight,h=t.strideWidth,d=t.dilationHeight,f=t.dilationWidth,m=t.effectiveFilterHeight,y=t.effectiveFilterWidth,x=t.padInfo.top,v=t.padInfo.left;this.outputShape=t.outShape;const w="avg"===e,O=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,S=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let C="0.0";if(w||(C="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${c}, ${h});\n        const ivec2 pads = ivec2(${x}, ${v});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${m};\n              wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${y};\n                wC += ${f}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?o?O:S:`wR * ${y} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let k=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(k="avgValue / count");const N=4*Math.floor(l/4),I=l%4,E=`\n      if (${w}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${x}, ${v});\n      const float initializationValue = ${C};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${C});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${m};\n            wR += ${d}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${N}; wC += 4) {\n            int xC = xCCorner + wC * ${f};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              getValue(batch, xR, xC + 3 * ${f}, d)\n            );\n\n            ${E}\n          }\n\n          int xC = xCCorner + ${N};\n          if (${1===I}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${E}\n          } else if (${2===I}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${E}\n          } else if (${3===I}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              initializationValue\n            );\n\n            ${E}\n          }\n        }\n        setOutput(${k});\n      }\n    `}}class yu{constructor(t,e,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const l=t.filterWidth,c=t.strideDepth,h=t.strideHeight,d=t.strideWidth,f=t.dilationDepth,m=t.dilationHeight,y=t.dilationWidth,x=t.effectiveFilterDepth,v=t.effectiveFilterHeight,w=t.effectiveFilterWidth,O=t.padInfo.front,S=t.padInfo.top,C=t.padInfo.left;this.outputShape=t.outShape;const k="avg"===e;let N="0.0";if(k||(N="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${c}, ${h}, ${d});\n        const ivec3 pads = ivec3(${O}, ${S}, ${C});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${x};\n              wD += ${f}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${v};\n                wR += ${m}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${w};\n                  wC += ${y}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?o?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${v} * ${w} +\n                      wR * ${w} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let I=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(I="avgValue / count");const E=4*Math.floor(l/4),T=l%4,A=`\n      if (${k}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${c}, ${h}, ${d});\n      const ivec3 pads = ivec3(${O}, ${S}, ${C});\n      const float initializationValue = ${N};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${N});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${x};\n            wD += ${f}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${v};\n            wR += ${m}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${E}; wC += 4) {\n              int xC = xCCorner + wC * ${y};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${y}, ch)\n              );\n\n              ${A}\n            }\n\n            int xC = xCCorner + ${E};\n            if (${1===T}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${A}\n            } else if (${2===T}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${A}\n            } else if (${3===T}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                initializationValue\n              );\n\n              ${A}\n            }\n          }\n          setOutput(${I});\n        }\n      }\n    `}}class xu{constructor(t,e){this.variableNames=["x"];const n=t.windowSize,r=t.batchSize,o=t.inSize,l=Math.ceil(o/n);this.outputShape=[r,l];let c="0.0",h="";"prod"===e?c="1.0":"min"===e?(c="1.0 / 1e-20",h="min"):"max"===e&&(c="-1.0 / 1e-20",h="max");let d=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?d="sumValue":"prod"===e?d="prodValue":"all"===e?d="allValue":"any"===e&&(d="anyValue");const f=4*Math.floor(n/4),m=n%4;let y=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${h}(values, minMaxValue);\n      }\n    `,x="vec4";"all"===e?(c="1.0",y="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",x="bvec4"):"any"===e&&(c="0.0",y="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",x="bvec4");let v="";o%n>0&&(v=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${c};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${v}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${c});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${f}; i += 4) {\n          int inIdx = inOffset + i;\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${y}\n        }\n\n        int inIdx = inOffset + ${f};\n        if (${1===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${2===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${3===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${y}\n        }\n        setOutput(${d});\n      }\n    `}}class vu{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let i=0;i<4;i++){let t="thisRC = rc;";i%2==1&&(t+="thisRC.z += 1;"),i>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${ji(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Di(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class wu{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,o]=e.shape,[,l,c]=t.shape,h=[n&&l>1?r-1:r,n&&c>1?o-1:o],d=[n&&l>1?l-1:l,n&&c>1?c-1:c],f=h[0]/d[0],m=h[1]/d[1],y=1/f,x=1/m,v=2*Math.ceil(y)+2,w=2*Math.ceil(x)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${x});\n\n        const int winHeight = int(${v});\n        const int winWidth = int(${w});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${l}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${c}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Ou{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[o,l,c,h]=t;this.outputShape=[o,e,n,h];const d=[r&&e>1?l-1:l,r&&n>1?c-1:c],f=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/f[0]},\n          ${d[1]/f[1]});\n      const vec2 inputShapeRC = vec2(${l}.0, ${c}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Su{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,l,c,h]=t;this.outputShape=[o,e,n,h];const d=[r&&e>1?l-1:l,r&&n>1?c-1:c],f=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/f[0]},\n          ${d[1]/f[1]},\n          ${d[1]/f[1]});\n      const vec3 inputShapeRC = vec3(${l}.0, ${c}.0,\n                                     ${c}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${h-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class Cu{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,o]=e.shape,[,l,c]=t.shape,h=[n&&l>1?r-1:r,n&&c>1?o-1:o],d=[n&&l>1?l-1:l,n&&c>1?c-1:c],f=h[0]/d[0],m=h[1]/d[1],y=1/f,x=1/m,v=2*Math.ceil(y)+2,w=2*Math.ceil(x)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${x});\n\n        const int winHeight = int(${v});\n        const int winWidth = int(${w});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${l}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${c}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${h[0]}) *\n                (float(dyR) / float(${d[0]}));\n\n            float sourceFracCol =\n                float(${h[1]}) *\n                  (float(dyC) / float(${d[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${o}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class ku{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[o,l,c,h]=t;this.outputShape=[o,e,n,h];const d=[r&&e>1?l-1:l,r&&n>1?c-1:c],f=[r&&e>1?e-1:e,r&&n>1?n-1:n],m=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/f[0]},\n          ${d[1]/f[1]});\n      const vec2 inputShapeRC = vec2(${l}.0, ${c}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Nu{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,i)=>(i=>-1!==e.indexOf(i)&&1!==t[i]?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`)(i)).join(","),o=Ki(n);this.userCode=`\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Iu{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=$i("rc",n),o=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,l=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,c=Ki(n);function h(n){const r=t.map((r,i)=>function(i,n){return-1!==e.indexOf(i)&&1!==t[i]?`${t[i]} - ${n[i]} - 1`:""+n[i]}(i,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${o}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${c} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return h(t)}(r.slice())};\n          if(${o}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",h(t)}(r.slice())};\n          }\n          if(${l}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",h(t)}(r.slice())};\n            if(${o}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",h(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class Eu{constructor(t,e,n,r,o,l,c=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=l;const h=Ki(o.length),d=Ki(l.length);let f="";1===n?f="i":2===n&&(f="i, j");const m=`getIndices(${f})`;let y="";1===r?y="i":2===r&&(y="i, coords[1]");const x=`getUpdates(${y})`,v=e>1?"strides[j]":"strides";this.userCode=`\n        ${h} strides = ${h}(${o});\n\n        void main() {\n          ${d} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${m});\n              flattenedIndex += index * ${v};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${x};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Tu{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,o=t.inSize,l=t.numSegments,c=l*Math.ceil(o/n);this.outputShape=[r,c];const h=4*Math.floor(n/4),d=n%4,f="\n        sumValue += dot(values, segFilter);\n    ";let m="";o%n>0&&(m=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `);let y="";o%n>0&&(y=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${m}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${y}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${l})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${l})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${h}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${f}\n        }\n\n        int inIdx = inOffset + ${h};\n        if (${1===d}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${f}\n        } else if (${2===d}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${f}\n        } else if (${3===d}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${f}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Au{constructor(t,e,n){let r,o;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)o="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let i=0;i<e.length;i++)c.push(""+n[i]),i<t&&l.push(""+n[i]);r=l.join(),o=c.join()}const l=Ki(n);this.userCode=`\n      void main() {\n        ${l} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${o}));\n        } else {\n          setOutput(getB(${o}));\n        }\n      }\n    `}}class Ru{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Ki(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return $u.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let body;body=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,i)=>`sourceLoc.${$u[i]} = start[${i}] + coords.${$u[i]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${body}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const $u=["x","y","z","w","u","v"];class Fu{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Ki(this.rank),n=$i("coords",this.rank),r=$i("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,l=`getChannel(getSource(${r.join()}), ${o})`,c=`\n      result.x = ${l};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${l};\n        --${r[this.rank-1]};\n      }\n    `,h=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${l};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${l};\n        }\n      }\n    `,d=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,i)=>`start[${i}]`).join()});`:t.map((t,i)=>`${r[i]} = ${n[i]} + start[${i}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${d}\n        vec4 result = vec4(0.);\n        ${c}\n        ${h}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class ju{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,o=Ki(n.length),l=Ki(n.length);let c="";if(1===r)c="coords * strides + begin";else{let t=0;c=n.map((e,i)=>(t++,1===n.length?`coords * strides[${i}] + begin[${i}]`:`coords[${t-1}] * strides[${i}] + begin[${i}]`)).join(",")}this.userCode=`\n      ${o} begin = ${o}(${t});\n      ${o} strides = ${o}(${e});\n\n      void main() {\n        ${l} coords = getOutputCoords();\n        setOutput(getX(${c}));\n      }\n    `}}class Du{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=zu(e,n),o=Mu(t,r,n);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const l=_u(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=l,this.log();const t=this.freeTextures[o].shift();return this.usedTextures[o].push(t),t}let c;return r===Ya.PACKED_2X2_FLOAT32?c=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Ya.PACKED_2X2_FLOAT16?c=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Ya.UNPACKED_FLOAT32?c=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Ya.UNPACKED_FLOAT16?c=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Ya.PACKED_4X1_UNSIGNED_BYTE&&(c=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[o].push(c),this.numUsedTextures++,this._numBytesAllocated+=l,this.log(),c}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const o=zu(n,r),l=Mu(e,o,r);l in this.freeTextures||(this.freeTextures[l]=[]);const c=_u(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),h=Object(f.vb)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==h&&this._numBytesAllocated>h?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=c):(this.freeTextures[l].push(t),this.numFreeTextures++,this._numBytesFree+=c),this.numUsedTextures--;const d=this.usedTextures[l],m=d.indexOf(t);if(m<0)throw new Error("Cannot release a texture that was never provided by this texture manager");d.splice(m,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function _u(t,e,n,r,o){const l=function(t,e){switch(t){case Ya.PACKED_2X2_FLOAT32:return tu(e);case Ya.PACKED_2X2_FLOAT16:return eu(e);case Ya.UNPACKED_FLOAT32:return Yo(e);case Ya.UNPACKED_FLOAT16:return Qo(e);case Ya.PACKED_4X1_UNSIGNED_BYTE:return Zo(e);default:throw new Error("Unknown physical texture type "+t)}}(e,r);let c;if(o){const[e,n]=ti(t[0],t[1]);c=e*n}else{const[e,n]=Qa(t[0],t[1]);c=e*n}return c*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}(n,l)}function zu(t,e){if(t===Xa.UPLOAD)return Ya.PACKED_2X2_FLOAT32;if(t===Xa.RENDER||null==t)return function(t){return Object(f.vb)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Ya.PACKED_2X2_FLOAT32:Ya.UNPACKED_FLOAT32:t?Ya.PACKED_2X2_FLOAT16:Ya.UNPACKED_FLOAT16}(e);if(t===Xa.DOWNLOAD||t===Xa.PIXELS)return Ya.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function Mu(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class Lu{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[i]*e[i];this.outputShape=n,this.rank=n.length;const r=Ki(this.rank),o=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let i=0;i<t.length;i++)r.push(`imod(${n[i]}, ${t[i]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}class Bu{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Pu="return abs(x);",Wu="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",Uu="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Vu=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${f.L.SELU_SCALEALPHA};\n  float scale = ${f.L.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;const Gu="return -x;",Hu="return ceil(x);",qu="return floor(x);",Ku="return exp(x);",Ju="return exp(x) - 1.0;",Xu=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${f.L.ERF_P};\n  float a1 = ${f.L.ERF_A1};\n  float a2 = ${f.L.ERF_A2};\n  float a3 = ${f.L.ERF_A3};\n  float a4 = ${f.L.ERF_A4};\n  float a5 = ${f.L.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Yu="return x;",Qu="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Zu="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",tl="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class el{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class nl{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=$i("rc",e),r=Ki(e),o=function(t,e){if(1===t)return"rc";let n="";for(let i=0;i<t;i++)n+=e[i],i<t-1&&(n+=",");return n}(e,n),l=n.slice(-2),c=e<=1?"rc":`vec2(${l.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${c}));\n      }\n    `}}const{segment_util:rl}=f.L,sl=f.Rb.split,al=f.Rb.tile,il=f.Rb.topkImpl,ll=f.Rb.whereImpl,cl={};function hl(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?Qu:Wu;if("elu"===t)return e?tl:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?Zu:Uu;if("prelu"===t)return e?co:uo;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class pl extends f.h{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(f.vb)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Ka(Object(f.vb)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(f.vb)().getNumber("WEBGL_VERSION"))in cl||(cl[e]={}),cl[e]),this.gpgpu=new ru(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new Du(this.gpgpu),this.numMBBeforeWarning=null==Object(f.vb)().global.screen?1024:Object(f.vb)().global.screen.height*Object(f.vb)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new f.a(this,Object(f.ub)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Object(f.vb)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(f.vb)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:Xa.UPLOAD}),r}move(t,e,n,r){if(Object(f.vb)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:Xa.UPLOAD})}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensors:o,slice:l,shape:c,isPacked:h}=e;if(null!=l){let e;e=h?new el(c,Yu):new Bu(c,Yu);const n=this.runWebGLProgram(e,[{dataId:t,shape:c,dtype:r}],r),data=this.readSync(n.dataId);return this.disposeData(n.dataId),data}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const d=null!=this.activeTimers;let m,y;if(d&&(m=f.Jd.now()),"complex64"===r){const t=o.real.dataSync(),e=o.imag.dataSync();y=f.L.mergeRealAndImagArrays(t,e)}else y=this.getValuesFromTexture(t);return d&&(this.downloadWaitMs+=f.Jd.now()-m),this.convertAndCacheOnCPU(t,y)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:o,dtype:l,complexTensors:c,isPacked:h}=e;if(null!=o){let e;e=h?new el(r,Yu):new Bu(r,Yu);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:l}],l),data=this.read(n.dataId);return this.disposeData(n.dataId),data}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(f.vb)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(f.vb)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d,m,y=null;if("complex64"!==l&&Object(f.vb)().get("WEBGL_BUFFER_SUPPORTED")){d=this.decode(t);const e=this.texData.get(d.dataId);y=this.gpgpu.createBufferFromTexture(e.texture,...Za(r))}if(this.pendingRead.set(t,[]),"complex64"!==l&&await this.gpgpu.createAndWaitForFence(),"complex64"===l){const t=await Promise.all([c.real.data(),c.imag.data()]),e=t[0],n=t[1];m=f.L.mergeRealAndImagArrays(e,n)}else if(null==y)m=this.getValuesFromTexture(t);else{const t=f.Jd.sizeFromShape(r);m=this.gpgpu.downloadFloat32MatrixFromBuffer(y,t)}null!=d&&this.disposeData(d.dataId);const x=this.convertAndCacheOnCPU(t,m),v=this.pendingRead.get(t);return this.pendingRead.delete(t),v.forEach(t=>t(x)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),x}checkNumericalProblems(t){if(null!=t)for(let i=0;i<t.length;i++){const e=t[i];if(!ri(e)){if(Object(f.vb)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${e} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${e} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),o=f.Jd.sizeFromShape(e);if(Object(f.vb)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),l=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...Za(e)).subarray(0,o);return this.disposeData(n.dataId),l}const l=Object(f.vb)().getBool("WEBGL_PACK")&&!0===r,c=l?yi(e):e,h=l?new Mo(c):new zo(c),output=this.runWebGLProgram(h,[{shape:c,dtype:n,dataId:t}],"float32"),d=this.texData.get(output.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(d.texture,d.texShape[0],d.texShape[1]).subarray(0,o);return this.disposeData(output.dataId),m}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const o=f.Jd.flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),l=f.Jd.flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const c={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(o);c.kernelMs=f.Jd.sum(t),c.getExtraProfileInfo=()=>t.map((t,i)=>({name:l[i],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else c.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,c}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:f.Jd.now(),endMs:null}}endTimer(t){return Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=f.Jd.now(),t)}async getQueryTime(t){if(Object(f.vb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;this.releaseGPUData(t);const{complexTensors:e}=this.texData.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:o,isPacked:l,slice:c}=this.texData.get(t),h=c&&c.origDataId||t,d=this.dataRefCount.get(h);d>1?this.dataRefCount.set(h,d-1):(this.dataRefCount.delete(h),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,o,l)));const f=this.texData.get(t);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(f.vb)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(f.ub)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||Object(f.vb)().getBool("IS_TEST")||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(input=>null==this.texData.get(input.dataId).texture&&f.Jd.sizeFromShape(input.shape)<e)}getGPGPUContext(){return this.gpgpu}complex(t,e){const n=this.makeOutput(t.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:Object(f.ub)().keep(t.clone()),imag:Object(f.ub)().keep(e.clone())},n}real(input){return this.texData.get(input.dataId).complexTensors.real.clone()}imag(input){return this.texData.get(input.dataId).complexTensors.imag.clone()}slice(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===f.Jd.sizeFromShape(n))return Object(f.wd)([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),o=f.fd.isSliceContinous(t.shape,e,n);if(r||!o){const r=Object(f.vb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fu(n):new Ru(n),o=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,o)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),o=this.makeOutput(n,t.dtype),l=this.texData.get(o.dataId);Object.assign(l,r),l.shape=n,l.dtype=t.dtype;let c=f.fd.computeFlatOffset(e,t.strides);r.slice&&(c+=r.slice.flatOffset),l.slice={flatOffset:c,origDataId:r.slice&&r.slice.origDataId||t.dataId};const h=this.dataRefCount.get(l.slice.origDataId)||1;return this.dataRefCount.set(l.slice.origDataId,h+1),o}stridedSlice(t,e,n,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r);const o=f.fd.computeOutShape(e,n,r);if(o.some(t=>0===t))return Object(f.wd)([],o);const l=new ju(e,r,o);return this.compileAndRun(l,[t])}reverse(t,e){const n=Object(f.vb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iu(t.shape,e):new Nu(t.shape,e);return this.compileAndRun(n,[t])}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>Object(f.Fc)(t)),r=t.map(t=>Object(f.Mb)(t));return Object(f.Y)(this.concat(n,e),this.concat(r,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>Object(f.vb)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const n=Math.floor(t.length/2),r=this.concat(t.slice(0,n),e),o=this.concat(t.slice(n),e);return this.concat([r,o],e)}if(Object(f.vb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){const n=new bo(t.map(t=>t.shape),e);return this.compileAndRun(n,t)}const n=f.L.computeOutShape(t.map(t=>t.shape),e),r=t.map(t=>t.as2D(-1,f.Jd.sizeFromShape(t.shape.slice(e)))),o=new go(r.map(t=>t.shape));return this.compileAndRun(o,r).reshape(n)}neg(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(Object(f.vb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Gu,t.dtype);const e=new Bu(t.shape,Gu);return this.compileAndRun(e,[t])}batchMatMul(a,b,t,e){const n=t?a.shape[2]:a.shape[1],r=e?b.shape[1]:b.shape[2],o=t?a.shape[1]:a.shape[2],[l,,]=a.shape;if((1===n||1===r)&&o>1e3){t&&(a=Object(f.Fd)(a,[0,2,1])),e&&(b=Object(f.Fd)(b,[0,2,1]));const n=1===r?a:a.as3D(l,o,1),c=1===r?2:1,h=1===r?b.as3D(l,1,o):b;return this.multiply(n,h).sum(c,!0)}const c=Object(f.Id)(a.dtype,b.dtype),h=new hu(a.shape,[l,n,r],t,e);return this.compileAndRun(h,[a,b],c)}fusedBatchMatMul({a:a,b:b,transposeA:t,transposeB:e,bias:n,activation:r,preluActivationWeights:o}){const l=t?a.shape[2]:a.shape[1],c=e?b.shape[1]:b.shape[2],[h,,]=a.shape,d=Object(f.Id)(a.dtype,b.dtype),m=null!=n,y=null!=o,x=r?hl(r,!0):null,v=new hu(a.shape,[h,l,c],t,e,m,x,y),w=[a,b];return n&&w.push(n),o&&w.push(o),this.compileAndRun(v,w,d)}multiply(a,b){if("complex64"===a.dtype){const t=this.texData.get(a.dataId),e=this.texData.get(b.dataId),n=new so(no,a.shape,b.shape),r=new so(ro,a.shape,b.shape),o=[this.makeComplexComponentTensorInfo(a,t.complexTensors.real),this.makeComplexComponentTensorInfo(a,t.complexTensors.imag),this.makeComplexComponentTensorInfo(b,e.complexTensors.real),this.makeComplexComponentTensorInfo(b,e.complexTensors.imag)],l=this.compileAndRun(n,o),c=this.compileAndRun(r,o),h=this.complex(l,c);return l.dispose(),c.dispose(),h}if(this.shouldExecuteOnCPU([a,b]))return this.cpuBackend.multiply(a,b);if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,oo,a.dtype);const t=new lo(oo,a.shape,b.shape);return this.compileAndRun(t,[a,b],a.dtype)}batchNorm(t,e,n,r,o,l){const c=[t,e,n];let h=null;null!=r&&(h=r.shape,c.push(r));let d=null;if(null!=o&&(d=o.shape,c.push(o)),Object(f.vb)().getBool("WEBGL_PACK_NORMALIZATION")){const r=new eo(t.shape,e.shape,n.shape,h,d,l);return this.compileAndRun(r,c)}const m=new to(t.shape,e.shape,n.shape,h,d,l);return this.compileAndRun(m,c)}localResponseNormalization4D(t,e,n,r,o){const l=Object(f.vb)().getBool("WEBGL_PACK_NORMALIZATION")?new uu(t.shape,e,n,r,o):new iu(t.shape,e,n,r,o);return this.compileAndRun(l,[t])}LRNGrad(t,e,n,r,o,l,c){const h=new ou(e.shape,r,o,l,c);return this.compileAndRun(h,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map(t=>f.Jd.decodeString(t)),r=Object(f.T)(t.shape,t.dtype,n);return al(r,e)}const n=new Lu(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=Object(f.vb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gu(t.shape,e,n):new mu(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);const r=new Go(t.shape,e.size,n);return this.compileAndRun(r,[t,e])}batchToSpaceND(t,e,n){f.Jd.assert(t.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((a,b)=>a*b),o=f.L.getReshaped(t.shape,e,r),l=f.L.getPermuted(o.length,e.length),c=f.L.getReshapedPermuted(t.shape,e,r),h=f.L.getSliceBeginCoords(n,e.length),d=f.L.getSliceSize(c,n,e.length);return Object(f.Fd)(t.reshape(o),l).reshape(c).slice(h,d)}spaceToBatchND(t,e,n){f.Jd.assert(t.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((a,b)=>a*b),o=[[0,0]];o.push(...n);for(let i=1+e.length;i<t.shape.length;++i)o.push([0,0]);const l=t.pad(o),c=f.L.getReshaped(l.shape,e,r,!1),h=f.L.getPermuted(c.length,e.length,!1),d=f.L.getReshapedPermuted(l.shape,e,r,!1),m=Object(f.Fd)(l.reshape(c),h);return Object(f.Kc)(m,d)}reduce(t,e,n){const r=t.shape[0],o=t.shape[1],l=f.L.computeOptimalWindowSize(o),c=new xu({windowSize:l,inSize:o,batchSize:r},e),output=this.compileAndRun(c,[t],n);return 1===output.shape[1]?output:this.reduce(output,e,n)}argReduce(t,e,n=null){let r=t.shape[0],o=t.shape[1];null!=n&&(r=n.shape[0],o=n.shape[1]);const l=f.L.computeOptimalWindowSize(o),c=new Ai({windowSize:l,inSize:o,batchSize:r},e,null==n),h=[t];null!=n&&h.push(n);const output=this.compileAndRun(c,h,"int32");return 1===output.shape[1]?output:this.argReduce(t,e,output)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,o=r[r.length-1],l=f.L.computeOptimalWindowSize(o),c=new Yi(r,l,e,null==n),h=null==n?[t]:[t,n],output=this.compileAndRun(c,h,"int32");return output.rank===t.rank?this.argReducePacked(t,e,output):output}sum(t,e){f.L.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=f.Jd.sizeFromShape(r),l=t.as2D(-1,o),c=f.td(t.dtype);return this.reduce(l,"sum",c).reshape(n)}prod(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=f.Jd.sizeFromShape(r),l=t.as2D(-1,o),c=f.td(t.dtype);return this.reduce(l,"prod",c).reshape(n)}unsortedSegmentSum(t,e,n){let r=0;const o=f.L.getAxesPermutation([r],t.rank);let l=t;null!=o&&(l=Object(f.Fd)(t,o),r=f.L.getInnerMostAxes(1,t.rank)[0]);const c=rl.computeOutShape(l.shape,r,n),h=f.Jd.sizeFromShape([l.shape[r]]),d=l.as2D(-1,h),m=f.td(t.dtype);let y=this.segOpCompute(d,"unsortedSegmentSum",e,m,n).reshape(c);return null!=o&&(y=Object(f.Fd)(y,f.L.getUndoAxesPermutation(o))),y}segOpCompute(t,e,n,r,o){const l=t.shape[0],c=t.shape[1],h=rl.segOpComputeOptimalWindowSize(c,o),d=new Tu({windowSize:h,inSize:c,batchSize:l,numSegments:o},e),output=this.compileAndRun(d,[t,n],r);return output.shape[1]===o?output:(n=Object(f.Ec)(0,o).tile([c/h]),this.segOpCompute(output,e,n,r,o))}argMinMaxReduce(t,e,n){const r=[e];if(f.L.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!Object(f.vb)().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,o]=f.L.computeOutAndReduceShapes(t.shape,r),l=f.Jd.sizeFromShape(o),c=t.as2D(-1,l);return this.argReduce(c,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const o=t.shape[e];let l=t;for(let i=0;i<=Math.ceil(Math.log2(o))-1;i++){const e=new Ao(t.shape,!1,r),n=e.getCustomSetupFunc(i),o=l;l=this.compileAndRun(e,[l],l.dtype,n),o.dispose()}if(n){const e=new Ao(t.shape,n,r),o=l;l=this.compileAndRun(e,[l]),o.dispose()}return l}equal(a,b){if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,"\n  return vec4(equal(a, b));\n","bool");const t=new lo("return float(a == b);",a.shape,b.shape);return this.compileAndRun(t,[a,b],"bool")}notEqual(a,b){if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,"\n  return vec4(notEqual(a, b));\n","bool");const t=new lo("return float(a != b);",a.shape,b.shape);return this.compileAndRun(t,[a,b],"bool")}less(a,b){if(this.shouldExecuteOnCPU([a,b]))return this.cpuBackend.less(a,b);if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,"\n  return vec4(lessThan(a, b));\n","bool");const t=new lo("return float(a < b);",a.shape,b.shape);return this.compileAndRun(t,[a,b],"bool")}lessEqual(a,b){if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,"\n  return vec4(lessThanEqual(a, b));\n","bool");const t=new lo("return float(a <= b);",a.shape,b.shape);return this.compileAndRun(t,[a,b],"bool")}greater(a,b){if(this.shouldExecuteOnCPU([a,b]))return this.cpuBackend.greater(a,b);if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,"\n  return vec4(greaterThan(a, b));\n","bool");const t=new lo("return float(a > b);",a.shape,b.shape);return this.compileAndRun(t,[a,b],"bool")}greaterEqual(a,b){if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const t=new lo("return float(a >= b);",a.shape,b.shape);return this.compileAndRun(t,[a,b],"bool")}logicalNot(t){const e=new Bu(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(a,b){if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const t=new lo("return float(a >= 1.0 && b >= 1.0);",a.shape,b.shape);return this.compileAndRun(t,[a,b],"bool")}logicalOr(a,b){if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const t=new lo("return float(a >= 1.0 || b >= 1.0);",a.shape,b.shape);return this.compileAndRun(t,[a,b],"bool")}select(t,a,b){const e=new Au(t.rank,a.shape,a.rank);return this.compileAndRun(e,[t,a,b],Object(f.Id)(a.dtype,b.dtype))}where(t){f.L.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return ll(t.shape,e)}topk(t,e,n){const r=t.dataSync();return il(r,t.shape,t.dtype,e,n)}min(t,e){f.L.assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=f.Jd.sizeFromShape(r),l=t.as2D(-1,o);return this.reduce(l,"min",l.dtype).reshape(n)}minimum(a,b){if(this.shouldExecuteOnCPU([a,b]))return this.cpuBackend.minimum(a,b);const t=Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ho("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",a.shape,b.shape):new lo("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",a.shape,b.shape);return this.compileAndRun(t,[a,b])}mod(a,b){const t=Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ho("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",a.shape,b.shape):new lo("if (b == 0.0) return NAN;\n  return mod(a, b);",a.shape,b.shape);return this.compileAndRun(t,[a,b])}maximum(a,b){if(this.shouldExecuteOnCPU([a,b]))return this.cpuBackend.maximum(a,b);const t=Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ho("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",a.shape,b.shape):new lo("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",a.shape,b.shape);return this.compileAndRun(t,[a,b])}all(t,e){f.L.assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=f.Jd.sizeFromShape(r),l=t.as2D(-1,o);return this.reduce(l,"all",l.dtype).reshape(n)}any(t,e){f.L.assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=f.L.computeOutAndReduceShapes(t.shape,e),o=f.Jd.sizeFromShape(r),l=t.as2D(-1,o);return this.reduce(l,"any",l.dtype).reshape(n)}floorDiv(a,b){if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");const t=new lo("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",a.shape,b.shape);return this.compileAndRun(t,[a,b],"int32")}add(a,b){if("complex64"===a.dtype&&"complex64"===b.dtype)return this.complexSeparableBinaryOp(a,b,ao);if(this.shouldExecuteOnCPU([a,b]))return this.cpuBackend.add(a,b);const t=Object(f.Id)(a.dtype,b.dtype);if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,ao,t);const e=new lo(ao,a.shape,b.shape);return this.compileAndRun(e,[a,b],t)}packedUnaryOp(t,e,n){const r=new el(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(a,b,t,e,n=!1){const r=new ho(t,a.shape,b.shape,n);return this.compileAndRun(r,[a,b],e)}complexSeparableBinaryOp(a,b,t){const e=this.texData.get(a.dataId),n=this.texData.get(b.dataId),[r,o]=[[e.complexTensors.real,n.complexTensors.real],[e.complexTensors.imag,n.complexTensors.imag]].map(e=>{const[n,r]=e,o=this.makeComplexComponentTensorInfo(a,n),l=this.makeComplexComponentTensorInfo(b,r),c=new lo(t,a.shape,b.shape);return this.compileAndRun(c,[o,l],Object(f.Id)(n.dtype,r.dtype))}),l=this.complex(r,o);return r.dispose(),o.dispose(),l}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>Object(f.vb)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map(t=>t.dtype).reduce((t,e)=>Object(f.Id)(t,e)),n=t.map(t=>t.shape),r=Object(f.vb)().getBool("WEBGL_PACK")?new Ti(t[0].shape,n):new Ei(t[0].shape,n);return this.compileAndRun(r,t,e)}subtract(a,b){if("complex64"===a.dtype&&"complex64"===b.dtype)return this.complexSeparableBinaryOp(a,b,io);if(this.shouldExecuteOnCPU([a,b]))return this.cpuBackend.subtract(a,b);const t=Object(f.Id)(a.dtype,b.dtype);if(Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(a,b,io,a.dtype);const e=new lo(io,a.shape,b.shape);return this.compileAndRun(e,[a,b],t)}pow(a,b){const t=Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ho("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",a.shape,b.shape):new lo("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",a.shape,b.shape),e=Object(f.Id)(a.dtype,b.dtype);return this.compileAndRun(t,[a,b],e)}ceil(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(Object(f.vb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Hu,t.dtype);const e=new Bu(t.shape,Hu);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(Object(f.vb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,qu,t.dtype);const e=new Bu(t.shape,qu);return this.compileAndRun(e,[t])}sign(t){const e=new Bu(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new Bu(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new Bu(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new Bu(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new Bu(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(Object(f.vb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ku,t.dtype);const e=new Bu(t.shape,Ku);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(Object(f.vb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ju,t.dtype);const e=new Bu(t.shape,Ju);return this.compileAndRun(e,[t])}softmax(t,e){const n=f.Jd.parseAxisParam([e],t.shape),r=Object(f.fc)(t,n),o=f.L.expandShapeToKeepDim(r.shape,n),a=this.subtract(t,r.reshape(o)),b=this.exp(a),l=this.sum(b,n).reshape(o);return Object(f.qb)(b,l)}log(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(Object(f.vb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new Bu(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new Bu(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new Bu(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);const e=new Bu(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new Bu(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=Object(f.vb)().getBool("WEBGL_PACK")?new el(t.shape,Qu):new Bu(t.shape,Wu),this.compileAndRun(e,[t])}relu6(t){let e;return e=Object(f.vb)().getBool("WEBGL_PACK")?new el(t.shape,Zu):new Bu(t.shape,Uu),this.compileAndRun(e,[t])}prelu(t,e){const n=Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ho(co,t.shape,e.shape):new lo(uo,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(Object(f.vb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,tl,t.dtype);const e=new Bu(t.shape,"return (x >= 0.0) ? x : (exp(x) - 1.0);");return this.compileAndRun(e,[t])}eluDer(t,e){const n=Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ho("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new lo("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new Bu(t.shape,Vu);return this.compileAndRun(e,[t])}int(t){const e=new Bu(t.shape,"return float(int(x));");return this.compileAndRun(e,[t],"int32")}clip(t,e,n){let r;r=Object(f.vb)().getBool("WEBGL_PACK_CLIP")?new fo(t.shape):new po(t.shape);const o=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,o)}abs(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(Object(f.vb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Pu,t.dtype);const e=new Bu(t.shape,Pu);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new mo(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensors.real),this.makeComplexComponentTensorInfo(t,e.complexTensors.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new Bu(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new Bu(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}sin(t){const e=new Bu(t.shape,"if (isnan(x)) return x;\n  return sin(x);\n");return this.compileAndRun(e,[t])}cos(t){const e=new Bu(t.shape,"if (isnan(x)) return x;\n  return cos(x);\n");return this.compileAndRun(e,[t])}tan(t){const e=new Bu(t.shape,"return tan(x);");return this.compileAndRun(e,[t])}asin(t){const e=new Bu(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new Bu(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new Bu(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}atan2(a,b){const t=Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ho("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",a.shape,b.shape):new lo("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",a.shape,b.shape);return this.compileAndRun(t,[a,b])}sinh(t){const e=new Bu(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new Bu(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new Bu(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new Bu(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new Bu(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new Bu(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new Bu(t.shape,Xu);return this.compileAndRun(e,[t])}step(t,e){const n=new Bu(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,filter,e,n,r,o){const l=t.shape,c=this.texData.get(t.dataId),h=e.inChannels,d=l[0]*l[1]*l[2],m=e.outChannels,y="channelsLast"===e.dataFormat,x=(1===d||1===m)&&h>1e3,v=l[2]%2!=0&&!!c.isPacked;if(x||!Object(f.vb)().getBool("WEBGL_LAZILY_UNPACK")||!Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!v){const c=y?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],h=this.reshape(t,[1,c,e.inChannels]),d=this.reshape(filter,[1,e.inChannels,e.outChannels]);return this.reshape(this.fusedBatchMatMul({a:h,b:d,transposeA:!1,transposeB:!1,bias:n,activation:r,preluActivationWeights:o}),e.outShape)}const w=y?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),O={dataId:t.dataId,shape:[1,w,e.inChannels],dtype:t.dtype},S=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,f.Jd.assert(vi(c.shape,O.shape),()=>`packed reshape ${c.shape} to ${O.shape} isn't free`);const C=this.reshape(filter,[1,e.inChannels,e.outChannels]),k=this.fusedBatchMatMul({a:O,b:C,transposeA:!1,transposeB:!1,bias:n,activation:r,preluActivationWeights:o}),N=this.texData.get(k.dataId);return f.Jd.assert(N.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=S,N.shape=e.outShape,Object(f.ub)().makeTensorFromDataId(k.dataId,e.outShape,k.dtype)}conv2dWithIm2Row(t,filter,e,n,r,o){const{filterWidth:l,filterHeight:c,inChannels:h,outWidth:d,outHeight:f,dataFormat:m}=e,y="channelsLast"===m,x=l*c*h,v=f*d,w=[x,v],O=t.squeeze([0]),S=filter.reshape([1,x,-1]),C=new au(w,O.shape,e),k=this.compileAndRun(C,[O]).reshape([1,w[0],w[1]]),N=null!=n,I=null!=o,E=r?hl(r,!0):null,T=new hu(k.shape,[1,v,e.outChannels],!0,!1,N,E,I),A=[k,S];n&&A.push(n),I&&A.push(o);const R=this.compileAndRun(T,A);return y?R.reshape([1,f,d,e.outChannels]):R.reshape([1,e.outChannels,f,d])}fusedConv2d({input:input,filter:filter,convInfo:t,bias:e,activation:n,preluActivationWeights:r}){if(1===t.filterHeight&&1===t.filterWidth&&1===t.dilationHeight&&1===t.dilationWidth&&1===t.strideHeight&&1===t.strideWidth&&("SAME"===t.padInfo.type||"VALID"===t.padInfo.type))return this.conv2dByMatMul(input,filter,t,e,n,r);if(Object(f.vb)().getBool("WEBGL_CONV_IM2COL")&&1===input.shape[0])return this.conv2dWithIm2Row(input,filter,t,e,n,r);const o=null!=e,l=null!=r,c=n?hl(n,!1):null,h=new ko(t,o,c,l),d=[input,filter];return e&&d.push(e),r&&d.push(r),this.compileAndRun(h,d)}conv2d(t,filter,e){if(1===e.filterHeight&&1===e.filterWidth&&1===e.dilationHeight&&1===e.dilationWidth&&1===e.strideHeight&&1===e.strideWidth&&("SAME"===e.padInfo.type||"VALID"===e.padInfo.type))return this.conv2dByMatMul(t,filter,e);if(Object(f.vb)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,filter,e);const n=new ko(e);return this.compileAndRun(n,[t,filter])}conv2dDerInput(t,filter,e){const n=new vo(e);return this.compileAndRun(n,[t,filter])}conv2dDerFilter(t,e,n){const r=new xo(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:input,filter:filter,convInfo:t,bias:e,activation:n,preluActivationWeights:r}){const o=Object(f.vb)().getBool("WEBGL_PACK_DEPTHWISECONV")&&t.strideWidth<=2&&t.outChannels/t.inChannels==1,l=n?hl(n,o):null,c=[input,filter],h=null!=e,d=null!=r;let m;return h&&c.push(e),d&&c.push(r),o?(m=new Eo(t,h,l,d),this.compileAndRun(m,c)):(m=new Io(t,h,l,d),this.compileAndRun(m,c))}depthwiseConv2D(t,filter,e){let n;return Object(f.vb)().getBool("WEBGL_PACK_DEPTHWISECONV")&&e.strideWidth<=2&&e.outChannels/e.inChannels==1?(n=new Eo(e),this.compileAndRun(n,[t,filter])):(n=new Io(e),this.compileAndRun(n,[t,filter]))}depthwiseConv2DDerInput(t,filter,e){const n=new Co(e);return this.compileAndRun(n,[t,filter])}depthwiseConv2DDerFilter(t,e,n){const r=new So(n);return this.compileAndRun(r,[t,e])}conv3d(t,filter,e){const n=new No(e);return this.compileAndRun(n,[t,filter])}conv3dDerInput(t,filter,e){const n=new Oo(e);return this.compileAndRun(n,[t,filter])}conv3dDerFilter(t,e,n){const r=new wo(n);return this.compileAndRun(r,[t,e])}maxPool(t,e){const n=new bu(e,"max",!1);return this.compileAndRun(n,[t])}avgPool(t,e){const n=new bu(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}maxPoolBackprop(t,e,n,r){const o=new bu(r,"max",!0),l=this.compileAndRun(o,[e]),c=new lu(r),h=this.compileAndRun(c,[t,l],e.dtype);return l.dispose(),h}avgPoolBackprop(t,e,n){const r=new Qi(n);return this.compileAndRun(r,[t],e.dtype)}cast(t,e){return f.L.castTensor(t,e,this)}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let o=0;for(let i=0;i<t.rank;i++)i!==e&&(r[o++]=t.shape[i]);const l=new Array(t.rank).fill(0),c=t.shape.slice();c[e]=1;const h=new Array(n);for(let i=0;i<h.length;i++)l[e]=i,h[i]=this.slice(t,l,c).reshape(r);return h}avgPool3d(t,e){const n=new yu(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new Zi(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new yu(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const o=new yu(r,"max",!0),l=this.compileAndRun(o,[e]),c=new cu(r),h=this.compileAndRun(c,[t,l],e.dtype);return l.dispose(),h}reshape(t,e){const n=this.texData.get(t.dataId);if(n.isPacked&&!vi(t.shape,e)&&(null===n.texture||!vi(n.shape,e))){const n=this.packedReshape(t,e);return Object(f.ub)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}return f.L.reshapeTensor(t,e)}resizeBilinear(t,e,n,r){const o=Object(f.vb)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Su(t.shape,e,n,r):new Ou(t.shape,e,n,r);return this.compileAndRun(o,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new wu(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const o=new ku(t.shape,e,n,r);return this.compileAndRun(o,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new Cu(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const o=e?t:Object(f.gd)(t),l=o.shape[0],c=o.shape[1],h=new du(l,c,n),d=h.getCustomSetupFunc(r);return this.compileAndRun(h,[o],"int32",d)}oneHot(t,e,n,r){const o=new pu(t.size,e,n,r);return this.compileAndRun(o,[t])}diag(t){const e=new _o(t.size);return this.compileAndRun(e,[t])}cropAndResize(image,t,e,n,r,o){const l=new To(image.shape,t.shape,n,r,o);return this.compileAndRun(l,[image,t,e],"float32")}depthToSpace(t,e,n){f.Jd.assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],o="NHWC"===n?t.shape[1]:t.shape[2],l="NHWC"===n?t.shape[2]:t.shape[3],c="NHWC"===n?t.shape[3]:t.shape[1],h=o*e,d=l*e,m=c/(e*e),y=new Do("NHWC"===n?[r,h,d,m]:[r,m,h,d],e,n);return this.compileAndRun(y,[t])}split(t,e,n){return sl(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:o,sliceSize:l,strides:c,outputSize:h}=f.L.calculateShapes(e,t,n),d=[h/l,l],m=t.reshape([o,r]),y=e.reshape([o,l]);if(0===h)return f.L.reshapeTensor(Object(f.wd)([]),n);const x=Object(f.Pc)(0),v=new Eu(o,r,m.rank,y.rank,c,d);return this.compileAndRun(v,[y,m,x]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:o,numUpdates:l,strides:c,outputSize:h}=f.L.calculateShapes(e,t,n),d=new Eu(l,o,t.rank,e.rank,c,[h,1],!1);return this.compileAndRun(d,[e,t,r]).reshape(n)}fft(t){return this.fftImpl(t,!1)}ifft(t){return this.fftImpl(t,!0)}fftImpl(t,e){const n=this.texData.get(t.dataId),r=new Uo(Po,t.shape,e),o=new Uo(Wo,t.shape,e),l=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag)],c=this.compileAndRun(r,l),h=this.compileAndRun(o,l),d=this.complex(c,h).as2D(t.shape[0],t.shape[1]);return c.dispose(),h.dispose(),d}gatherND(t,e){const n=e.shape,r=n[n.length-1],[o,l,c,h]=f.L.prepareAndValidate(t,e),d=e.reshape([l,r]),m=t.reshape([t.size/c,c]),y=new Ho(r,h,[l,c]);return this.compileAndRun(y,[m,d]).reshape(o)}fill(t,e,n){if("string"===(n=n||f.Jd.inferDtype(e))){const r=f.Jd.getArrayFromDType(n,f.Jd.sizeFromShape(t));return r.fill(e),Object(f.ub)().makeTensor(r,t,n,this)}{const r=new Vo(t,e),o=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,o)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return f.L.linspaceImpl(t,e,n)}makeTensorInfo(t,e){const n=this.write(null,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e){const{dataId:n}=this.makeTensorInfo(t,e);return Object(f.ub)().makeTensorFromDataId(n,t,e,this)}unpackTensor(input){const t=new nl(input.shape);return this.runWebGLProgram(t,[input],input.dtype)}packTensor(input){const t=new fu(input.shape);return this.runWebGLProgram(t,[input],input.dtype,null,!0)}packedReshape(input,t){const e=[gi(input.shape),...bi(input.shape)],n={dtype:input.dtype,shape:e,dataId:input.dataId},r=[gi(t),...bi(t)],o=new vu(r,e),output=this.runWebGLProgram(o,[n],input.dtype,null,!0);return{dataId:output.dataId,shape:t,dtype:output.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:o}=e,l=yi(r);let c;c=n?new jo(l):new Fo(l);return{dtype:o,shape:r,dataId:this.runWebGLProgram(c,[{shape:l,dtype:o,dataId:t}],o,null,!0).dataId}}runWebGLProgram(t,e,n,r,o=!1){const output=this.makeTensorInfo(t.outputShape,n),l=this.texData.get(output.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===Ja.DENSE){const e=Za(t.outputShape);l.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(l.usage=t.outTexUsage),0===f.Jd.sizeFromShape(output.shape))return l.values=f.Jd.getTypedArrayFromDType(output.dtype,0),output;const c=[],h=e.map(input=>{if("complex64"===input.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let e=this.texData.get(input.dataId);if(null==e.texture){if(!t.packedInputs&&f.Jd.sizeFromShape(input.shape)<=Object(f.vb)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:input.shape,texData:null,isUniform:!0,uniformValues:e.values};t.packedInputs&&(e.isPacked=!0,e.shape=input.shape)}else if(!!e.isPacked!=!!t.packedInputs)input=e.isPacked?this.unpackTensor(input):this.packTensor(input),c.push(input),e=this.texData.get(input.dataId);else if(e.isPacked&&!vi(e.shape,input.shape)){const t=input,n=input.shape;input.shape=e.shape,input=this.packedReshape(input,n),c.push(input),e=this.texData.get(input.dataId),t.shape=n}return this.uploadToGPU(input.dataId),{shape:input.shape,texData:e,isUniform:!1}});this.uploadToGPU(output.dataId);const d={shape:output.shape,texData:l,isUniform:!1},m=function(t,e,output){let n="";e.concat(output).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,r=t.isUniform?"uniform":t.texData.texShape;n+=`${t.shape}_${r}_${e}`});const r=t.userCode;let o=t.constructor.name;return o+="_"+n+"_"+r,o}(t,h,d),y=this.getAndSaveBinary(m,()=>function(t,e,n,output){const r=e.userCode,o=n.map((input,i)=>{const t={logicalShape:input.shape,texShape:input.isUniform?null:input.texData.texShape,isUniform:input.isUniform,isPacked:!input.isUniform&&input.texData.isPacked,flatOffset:null};return null!=input.texData&&null!=input.texData.slice&&input.texData.slice.flatOffset>0&&(t.flatOffset=input.texData.slice.flatOffset),{name:e.variableNames[i],shapeInfo:t}}),l=o.map(t=>t.shapeInfo),c={logicalShape:output.shape,texShape:output.texData.texShape,isUniform:!1,isPacked:output.texData.isPacked,flatOffset:null},source=Mi(o,c,r,e.packedInputs),h=t.createProgram(source);let d=null;const m=t.getUniformLocation(h,"NAN",!1);1===Object(f.vb)().getNumber("WEBGL_VERSION")&&(d=t.getUniformLocation(h,"INFINITY",!1));const y={};for(let i=0;i<e.variableNames.length;i++){const n=e.variableNames[i],r=!1;y[n]=t.getUniformLocation(h,n,r),y["offset"+n]=t.getUniformLocation(h,"offset"+n,r)}return{program:e,source:source,webGLProgram:h,uniformLocations:y,inShapeInfos:l,outShapeInfo:c,infLoc:d,nanLoc:m}}(this.gpgpu,t,h,d)),x=null!=this.activeTimers;let v;if(x&&(v=this.startTimer()),function(t,e,n,output,r){su(e.inShapeInfos,n),su([e.outShapeInfo],[output]);const o=output.texData.texture,l=output.texData.texShape;output.texData.isPacked?t.setOutputPackedMatrixTexture(o,l[0],l[1]):t.setOutputMatrixTexture(o,l[0],l[1]),t.setProgram(e.webGLProgram),1===Object(f.vb)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((input,i)=>{const n=e.program.variableNames[i],r=e.uniformLocations[n],o=e.uniformLocations["offset"+n];if(null!=r)if(input.isUniform)if(f.Jd.sizeFromShape(input.shape)<2)t.gl.uniform1f(r,input.uniformValues[0]);else{let e=input.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(r,e)}else null!=input.texData.slice&&null!=o&&t.gl.uniform1i(o,input.texData.slice.flatOffset),t.setInputMatrixTexture(input.texData.texture,r,i)}),null!=r&&r(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,y,h,d,r),c.forEach(t=>this.disposeData(t.dataId)),x&&(v=this.endTimer(v),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(v)})),!Object(f.vb)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===o){const t=this.unpackTensor(output);return this.disposeData(output.dataId),t}return output}compileAndRun(t,e,n,r,o=!1){n=n||e[0].dtype;const l=this.runWebGLProgram(t,e,n,r,o);return Object(f.ub)().makeTensorFromDataId(l.dataId,l.shape,l.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(f.vb)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(f.Bd)(()=>{if(!Object(f.vb)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(f.vb)().getBool("DEBUG");Object(f.vb)().set("DEBUG",!1);const e=this.abs(Object(f.Pc)(1e-8)).dataSync()[0];if(Object(f.vb)().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:o,texture:l,usage:c,isPacked:h}=e;if(null!=l)return;const d=null!=this.activeTimers;let m;d&&(m=f.Jd.now());let y=e.texShape;if(null==y&&(y=function(t,e=!1){let n=Object(f.vb)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,i)=>i>=t.length-2?f.Jd.nearestLargerEven(t[i]):t[i])).length&&(t=[2,t[0]])),2!==t.length){const e=f.Jd.squeezeShape(t);t=e.newShape}let r=f.Jd.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=gi(t);let n=2,o=2;return t.length&&([n,o]=bi(t)),r=e*(n/2)*(o/2),f.Jd.sizeToSquarishShape(r).map(t=>2*t)}return f.Jd.sizeToSquarishShape(r)}(n,h),e.texShape=y),null!=o){const t=yi(n);let l,c=y[1],x=y[0];const v=o instanceof Uint8Array;h?([c,x]=ti(y[0],y[1]),l=new Bo(t,[x,c],v)):l=new Lo(t,[x,c],v);const w=this.makeTensorInfo([x,c],r);this.texData.get(w.dataId).usage=v?Xa.PIXELS:Xa.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),c,x,o);const O=!0,S=this.runWebGLProgram(l,[w],r,null,O),C=this.texData.get(S.dataId);e.texture=C.texture,e.texShape=C.texShape,e.isPacked=C.isPacked,e.usage=C.usage,this.disposeData(w.dataId),this.texData.delete(S.dataId),e.values=null,d&&(this.uploadWaitMs+=f.Jd.now()-m)}else{const t=this.acquireTexture(y,c,r,h);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(a,t){if("float32"===t||"complex64"===t)return a;if("int32"===t||"bool"===t){const e="int32"===t?new Int32Array(a.length):new Uint8Array(a.length);for(let i=0;i<e.length;++i)e[i]=Math.round(a[i]);return e}throw new Error("Unknown dtype "+t)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*f.Jd.bytesPerElement(e)}}f.nb.isBrowser()&&Object(f.Hc)("webgl",()=>new pl,2);const fl={kernelName:f.e,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:a,b:b}=t;return function(a,b,t){let e=new lo("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",a.shape,b.shape);return Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(e=new ho("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",a.shape,b.shape,!0)),t.runWebGLProgram(e,[a,b],"float32")}(a,b,e)}};class ml{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const gl={kernelName:f.f,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:image}=t,n=e,r=new ml(image.shape);return n.runWebGLProgram(r,[image],image.dtype)}};class bl{constructor(t){this.variableNames=["A"];const e=Fi(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class yl{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Fi(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const xl={kernelName:f.g,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:o}=e;const{numChannels:l}=r,c="undefined"!=typeof HTMLVideoElement&&o instanceof HTMLVideoElement,h="undefined"!=typeof HTMLImageElement&&o instanceof HTMLImageElement,[d,m]=c?[o.videoWidth,o.videoHeight]:[o.width,o.height],y=[m,d],x=[m,d,l];(h||c)&&(null==vl&&(vl=document.createElement("canvas").getContext("2d")),vl.canvas.width=d,vl.canvas.height=m,vl.drawImage(o,0,0,d,m),o=vl.canvas);const v=n.makeTensorInfo(y,"int32");n.texData.get(v.dataId).usage=Xa.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(v.dataId),o);const w=Object(f.vb)().getBool("WEBGL_PACK")?new yl(x):new bl(x),O=n.runWebGLProgram(w,[v],"int32");return n.disposeData(v.dataId),O}};let vl;const{maxImpl:wl,transposeImpl:Ol}=r;function Sl(t,e,n){const r=n.texData.get(t.dataId);return!r.isPacked||vi(t.shape,e)||null!==r.texture&&vi(r.shape,e)?{dataId:t.dataId,shape:e,dtype:t.dtype}:function(input,t,e){const n=[gi(input.shape),...bi(input.shape)],r={dtype:input.dtype,shape:n,dataId:input.dataId},o=[gi(t),...bi(t)],l=new vu(o,n),output=e.runWebGLProgram(l,[r],input.dtype,null,!0);return{dataId:output.dataId,shape:t,dtype:output.dtype}}(t,e,n)}function Cl(t,e,n,r){const o=f.Jd.sizeFromShape(e),l=Sl(t,[f.Jd.sizeFromShape(t.shape)/o,o],r),c=function t(e,n,r,o){const[l,c]=e.shape,h=f.L.computeOptimalWindowSize(c),d=new xu({windowSize:h,inSize:c,batchSize:l},r),output=o.runWebGLProgram(d,[e],n);return 1===output.shape[1]?output:t(output,n,r,o)}(l,t.dtype,"max",r);return l.dataId!==t.dataId&&r.disposeData(l.dataId),Sl(c,n,r)}class kl{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[e[i]];this.outputShape=n,this.rank=n.length;const r=Ki(this.rank),o=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let i=0;i<t.length;i++)r[t[i]]=n[i];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${o}));\n    }\n    `}}class Nl{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[e[i]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Ki(this.rank),o=Ri("rc",this.rank),l=new Array(this.rank);for(let i=0;i<e.length;i++)l[e[i]]=o[i];const c=`vec2(${l.slice(-2).join()})`,h=`++${o[this.rank-1]} < ${n[this.rank-1]}`,d=`getChannel(getA(${l.join()}), ${c})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${d};\n      if(${h}) {\n        result[1] = ${d};\n      }\n      --${o[this.rank-1]};\n      if(++${o[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${d};\n        if(${h}) {\n          result[3] = ${d};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Il(t,e,n){const r=Object(f.vb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nl(t.shape,e):new kl(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const El={kernelName:f.i,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:o,keepDims:l}=e,c=n,h=r.shape.length,d=f.Jd.parseAxisParam(o,r.shape);let m=d;const y=f.L.getAxesPermutation(m,h),x=null!=y,v=c.shouldExecuteOnCPU([r]);let w=r;if(x){if(v){const t=c.texData.get(w.dataId).values,e=new Array(h);for(let i=0;i<e.length;i++)e[i]=r.shape[y[i]];const n=Ol(t,r.shape,r.dtype,y,e);w=c.makeTensorInfo(e,r.dtype);c.texData.get(w.dataId).values=n}else w=Il(r,y,c);m=f.L.getInnerMostAxes(m.length,h)}f.L.assertAxesAreInnerMostDims("max",m,h);const[O,S]=f.L.computeOutAndReduceShapes(w.shape,m);let C,k=O;if(l&&(k=f.L.expandShapeToKeepDim(O,d)),v){const t=c.texData.get(w.dataId).values,e=wl(t,f.Jd.sizeFromShape(S),k,r.dtype);C=c.makeTensorInfo(k,r.dtype);c.texData.get(C.dataId).values=e}else C=Cl(w,S,k,c);return x&&c.disposeData(w.dataId),C}};const Tl={kernelName:f.j,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:o,strides:l,pad:c,includeBatchInIndex:h}=e,d=n;f.Jd.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const m=[1,1];f.Jd.assert(f.L.eitherStridesOrDilationsAreOne(l,m),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const y=f.L.computePool2DInfo(r.shape,o,l,m,c),[x,v]=function(t,e,n,r){let o=new bu(n,"max",!1);const l=r.runWebGLProgram(o,[t],"float32");return o=new bu(n,"max",!0,!0,e),[l,r.runWebGLProgram(o,[t],"float32")]}(r,h,y,d);return[x,v]}},Al={kernelName:f.k,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{f.L.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:o}=t,{maxOutputSize:l,iouThreshold:c,scoreThreshold:h}=n,d=e,m=d.readSync(r.dataId),y=d.readSync(o.dataId),x=l,v=c,w=h;return f.Rb.nonMaxSuppressionV3Impl(m,y,x,v,w)}},Rl=f.Rb.nonMaxSuppressionV4Impl,$l={kernelName:f.l,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{f.L.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:o}=t,{maxOutputSize:l,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:d}=n,m=e,y=m.readSync(r.dataId),x=m.readSync(o.dataId),{selectedIndices:v,validOutputs:w}=Rl(y,x,l,c,h,d);return[v,w]}},Fl=f.Rb.nonMaxSuppressionV5Impl,jl={kernelName:f.m,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{f.L.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:o}=t,{maxOutputSize:l,iouThreshold:c,scoreThreshold:h,softNmsSigma:d}=n,m=e,y=m.readSync(r.dataId),x=m.readSync(o.dataId),v=l,w=c,O=h,S=d,{selectedIndices:C,selectedScores:k}=Fl(y,x,v,w,O,S);return[C,k]}};class Dl{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const o=t[1],l=t[2],c=Math.sin(e).toFixed(3),h=Math.cos(e).toFixed(3);this.outputShape=t;const[d,m]=f.L.getImageCenter(r,o,l),y=d.toFixed(3),x=m.toFixed(3);let v="";v="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${y}) * ${h} - (float(y) - ${x}) * ${c};\n          float coordYFloat = (float(x) - ${y}) * ${c} + (float(y) - ${x}) * ${h};\n          int coordX = int(round(coordXFloat + ${y}));\n          int coordY = int(round(coordYFloat + ${x}));\n          ${v}\n          if(coordX >= 0 && coordX < ${l} && coordY >= 0 && coordY < ${o}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const _l=[El,gl,xl,fl,Tl,Al,$l,jl,{kernelName:f.o,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:image}=t,{radians:r,fillValue:o,center:l}=e,c=n,h=new Dl(image.shape,r,o,l);return c.runWebGLProgram(h,[image],image.dtype)}},{kernelName:f.p,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e,o=new Bu(n.shape,"return x * x;");return r.runWebGLProgram(o,[n],n.dtype)}},{kernelName:f.q,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:a,b:b}=t,n=e,r=Object(f.vb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ho("return (a - b) * (a - b);",a.shape,b.shape):new lo("return (a - b) * (a - b);",a.shape,b.shape);return n.compileAndRun(r,[a,b])}},{kernelName:f.t,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:o}=e,l=n,c=r.shape.length,h=new Array(c);for(let i=0;i<h.length;i++)h[i]=r.shape[o[i]];let d;if(l.shouldExecuteOnCPU([r])){const t=l.texData.get(r.dataId).values,e=Ol(t,r.shape,r.dtype,o,h);d=l.makeTensorInfo(h,r.dtype);l.texData.get(d.dataId).values=e}else d=Il(r,o,l);return d}}];for(const t of _l)Object(f.Ic)(t);f.Md;var zl={name:"Home",mounted:function(){var t=this;return Object(o.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("[*] Model loading..."),t.loading(!0),e.next=4,ua(location.href+"/models/l2_160_60/model.json");case 4:t.model=e.sent,console.log("[*] Model loading... Done"),console.log("[*] Model warming up..."),t.model.predict(f.Pd([1,60,160,3])),t.loading(!1),console.log("[*] Model warming up... Done");case 10:case"end":return e.stop()}}),e)})))()},data:function(){return{captchaSrc:"",model:null,isLoading:!1,captchaVal:"",tutorialModalOpen:!1}},components:{Dropzone:l.default,PasteHandler:c.default,GithubRibbon:h.default,TutorialModal:d.default},methods:{loading:function(t){this.isLoading=!!t},changeTutorialModalState:function(t){this.tutorialModalOpen=t},updateCaptchaImage:function(t){this.captchaSrc=t},readCaptchaImage:function(t){var e=this,n=new FileReader;n.onload=function(t){e.updateCaptchaImage(t.target.result)},n.readAsDataURL(t)},tfPreprocessImage:function(img){var t=f.xd([.485,.456,.406]),e=f.xd([.229,.224,.225]);return img.reshape([60,160,3]).toFloat().div(f.Pc(255)).sub(t).div(e)},tfGetImage:function(t){var e=document.getElementById(t),img=f.S.fromPixels(e);return this.tfPreprocessImage(img)},tfPredictCaptcha:function(){var t=this.tfGetImage("captcha").expandDims(0),e=this.model.predict(t);this.captchaVal=this.tfDecodePrediction(e,10,2)},tfDecodePrediction:function(t,e){return t.dataSync().reduce((function(t,n,r){var o=Math.floor(r/e);return t[o]||(t[o]=[]),t[o].push(n),t}),[]).map((function(t){return t.map((function(t,i){return[t,i]})).reduce((function(t,a){return a[0]>t[0]?a:t}))[1]})).join("")}},watch:{captchaSrc:function(){var t=this;setTimeout((function(){t.tfPredictCaptcha()}),100)}}},Ml=(n(255),n(21)),component=Object(Ml.a)(zl,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("section",{staticClass:"container"},[n("div",[n("github-ribbon"),t._v(" "),n("h1",{staticClass:"title"},[t._v("KCAPTCHA Solver")]),t._v(" "),n("h5",{staticClass:"subtitle"},[t._v("It is running purely in your browser!")]),t._v(" "),n("client-only",[n("paste-handler",{attrs:{onPaste:t.updateCaptchaImage}})],1),t._v(" "),n("div",[n("sui-button",{attrs:{id:"how-to-use-button",icon:"question circle",color:"red"},on:{click:function(){return t.changeTutorialModalState(!0)}}},[t._v("How to Use")])],1),t._v(" "),n("dropzone",{attrs:{onAdd:t.readCaptchaImage}}),t._v(" "),n("div",{staticClass:"captcha-block"},[n("img",{directives:[{name:"show",rawName:"v-show",value:t.captchaSrc,expression:"captchaSrc"}],attrs:{id:"captcha",src:t.captchaSrc,alt:"Uploaded CAPTCHA Image"}}),t._v(" "),n("h3",{staticClass:"captcha-result"},[t._v(t._s(t.captchaVal))])]),t._v(" "),n("div",[t.tutorialModalOpen?n("tutorial-modal",{attrs:{changeModalState:t.changeTutorialModalState}}):t._e()],1)],1),t._v(" "),n("sui-dimmer",{attrs:{active:!0===t.isLoading,inverted:""}},[n("sui-loader",{attrs:{content:"모델 로딩 중..."}})],1)],1)}),[],!1,null,"7e7d9f98",null);e.default=component.exports;installComponents(component,{GithubRibbon:n(207).default,PasteHandler:n(205).default,Dropzone:n(200).default,TutorialModal:n(206).default})}])]);